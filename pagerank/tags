!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AbstractGraph	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^public abstract class AbstractGraph<V, E> implements Graph<V,E>, Serializable $/;"	c
AbstractIterativeScorer	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public AbstractIterativeScorer(Hypergraph<V,E> g)$/;"	m	class:AbstractIterativeScorer
AbstractIterativeScorer	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public AbstractIterativeScorer(Hypergraph<V,E> g, Transformer<E, ? extends Number> edge_weights)$/;"	m	class:AbstractIterativeScorer
AbstractIterativeScorer	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^public abstract class AbstractIterativeScorer<V,E,T> implements IterativeContext, VertexScorer<V,T>$/;"	c
AbstractIterativeScorerWithPriors	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorerWithPriors.java	/^    public AbstractIterativeScorerWithPriors(Hypergraph<V,E> g, $/;"	m	class:AbstractIterativeScorerWithPriors
AbstractIterativeScorerWithPriors	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorerWithPriors.java	/^    public AbstractIterativeScorerWithPriors(Hypergraph<V,E> g,$/;"	m	class:AbstractIterativeScorerWithPriors
AbstractIterativeScorerWithPriors	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorerWithPriors.java	/^public abstract class AbstractIterativeScorerWithPriors<V,E,S> extends$/;"	c
AbstractLayout	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	protected AbstractLayout(Graph<V, E> graph) {$/;"	m	class:AbstractLayout
AbstractLayout	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	protected AbstractLayout(Graph<V,E> graph, Dimension size) {$/;"	m	class:AbstractLayout
AbstractLayout	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^    protected AbstractLayout(Graph<V,E> graph, Transformer<V,Point2D> initializer) {$/;"	m	class:AbstractLayout
AbstractLayout	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^    protected AbstractLayout(Graph<V,E> graph, Transformer<V,Point2D> initializer, Dimension size) {$/;"	m	class:AbstractLayout
AbstractLayout	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^abstract public class AbstractLayout<V, E> implements Layout<V,E> {$/;"	c
AbstractRanker	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^public abstract class AbstractRanker<V,E> extends IterativeProcess {$/;"	c
AbstractTypedGraph	src/edu/uci/ics/jung/graph/AbstractTypedGraph.java	/^	public AbstractTypedGraph(EdgeType edge_type)$/;"	m	class:AbstractTypedGraph
AbstractTypedGraph	src/edu/uci/ics/jung/graph/AbstractTypedGraph.java	/^public abstract class AbstractTypedGraph<V,E> extends AbstractGraph<V, E> $/;"	c
AggregateLayout	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public AggregateLayout(Layout<V, E> delegate) {$/;"	m	class:AggregateLayout
AggregateLayout	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^public class AggregateLayout<V, E> implements Layout<V,E>, IterativeContext {$/;"	c
BFSDistanceLabeler	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^	public BFSDistanceLabeler() {$/;"	m	class:BFSDistanceLabeler
BFSDistanceLabeler	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^public class BFSDistanceLabeler<V, E> {$/;"	c
BalloonLayout	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^    public BalloonLayout(Forest<V,E> g) $/;"	m	class:BalloonLayout
BalloonLayout	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^public class BalloonLayout<V,E> extends TreeLayout<V,E> {$/;"	c
BarabasiAlbertGenerator	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    public BarabasiAlbertGenerator(Factory<Graph<V,E>> graphFactory, $/;"	m	class:BarabasiAlbertGenerator
BarabasiAlbertGenerator	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    public BarabasiAlbertGenerator(Factory<Graph<V,E>> graphFactory,$/;"	m	class:BarabasiAlbertGenerator
BarabasiAlbertGenerator	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^public class BarabasiAlbertGenerator<V,E> implements EvolvingGraphGenerator<V,E> {$/;"	c
BarycenterScorer	src/edu/uci/ics/jung/algorithms/scoring/BarycenterScorer.java	/^    public BarycenterScorer(Hypergraph<V,E> graph)$/;"	m	class:BarycenterScorer
BarycenterScorer	src/edu/uci/ics/jung/algorithms/scoring/BarycenterScorer.java	/^    public BarycenterScorer(Hypergraph<V,E> graph, Distance<V> distance)$/;"	m	class:BarycenterScorer
BarycenterScorer	src/edu/uci/ics/jung/algorithms/scoring/BarycenterScorer.java	/^    public BarycenterScorer(Hypergraph<V,E> graph, Transformer<E, ? extends Number> edge_weights)$/;"	m	class:BarycenterScorer
BarycenterScorer	src/edu/uci/ics/jung/algorithms/scoring/BarycenterScorer.java	/^public class BarycenterScorer<V,E> extends DistanceCentralityScorer<V, E>$/;"	c
BasicMapEntry	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^    public BasicMapEntry(K k, V v) {$/;"	m	class:BasicMapEntry
BasicMapEntry	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^public class BasicMapEntry<K,V> implements Map.Entry<K,V> {$/;"	c
BetweennessCentrality	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^    public BetweennessCentrality(Graph<V,E> g) {$/;"	m	class:BetweennessCentrality
BetweennessCentrality	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^    public BetweennessCentrality(Graph<V,E> g, boolean rankNodes) {$/;"	m	class:BetweennessCentrality
BetweennessCentrality	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^    public BetweennessCentrality(Graph<V,E> g, boolean rankNodes, boolean rankEdges)$/;"	m	class:BetweennessCentrality
BetweennessCentrality	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^public class BetweennessCentrality<V,E> extends AbstractRanker<V,E> {$/;"	c
BetweennessCentrality	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^	public BetweennessCentrality(Graph<V, E> graph) $/;"	m	class:BetweennessCentrality
BetweennessCentrality	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^	public BetweennessCentrality(Graph<V, E> graph, $/;"	m	class:BetweennessCentrality
BetweennessCentrality	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^public class BetweennessCentrality<V, E> $/;"	c
BetweennessComparator	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^    private class BetweennessComparator implements Comparator<V>$/;"	c	class:BetweennessCentrality
BetweennessData	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^        BetweennessData() {$/;"	m	class:BetweennessCentrality.BetweennessData
BetweennessData	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^    class BetweennessData {$/;"	c	class:BetweennessCentrality
BetweennessData	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^        BetweennessData() $/;"	m	class:BetweennessCentrality.BetweennessData
BetweennessData	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^    private class BetweennessData $/;"	c	class:BetweennessCentrality
BicomponentClusterer	src/edu/uci/ics/jung/algorithms/cluster/BicomponentClusterer.java	/^    public BicomponentClusterer() {$/;"	m	class:BicomponentClusterer
BicomponentClusterer	src/edu/uci/ics/jung/algorithms/cluster/BicomponentClusterer.java	/^public class BicomponentClusterer<V,E> implements Transformer<UndirectedGraph<V,E>, Set<Set<V>>> $/;"	c
CENTRALITY	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^    public static final String CENTRALITY = "centrality.BetweennessCentrality";$/;"	f	class:BetweennessCentrality
CENTRALITY	src/edu/uci/ics/jung/algorithms/importance/RandomWalkBetweenness.java	/^    public static final String CENTRALITY = "centrality.RandomWalkBetweennessCentrality";$/;"	f	class:RandomWalkBetweenness
CENTRALITY	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    public static final String CENTRALITY = "centrality.RandomWalkSTBetweennessCentrality";$/;"	f	class:RandomWalkSTBetweenness
COOL_DOWN_INCREMENTS	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	final int COOL_DOWN_INCREMENTS = 200;$/;"	f	class:DAGLayout
CURRENT_RANK	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^    private final static String CURRENT_RANK = "jung.algorithms.importance.KStepMarkovExperimental.CurrentRank";$/;"	f	class:KStepMarkov	file:
CircleLayout	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^	public CircleLayout(Graph<V,E> g) {$/;"	m	class:CircleLayout
CircleLayout	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^public class CircleLayout<V, E> extends AbstractLayout<V,E> {$/;"	c
CircleVertexData	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^	protected static class CircleVertexData {$/;"	c	class:CircleLayout
ClosenessCentrality	src/edu/uci/ics/jung/algorithms/scoring/ClosenessCentrality.java	/^    public ClosenessCentrality(Hypergraph<V,E> graph)$/;"	m	class:ClosenessCentrality
ClosenessCentrality	src/edu/uci/ics/jung/algorithms/scoring/ClosenessCentrality.java	/^    public ClosenessCentrality(Hypergraph<V,E> graph, Distance<V> distance)$/;"	m	class:ClosenessCentrality
ClosenessCentrality	src/edu/uci/ics/jung/algorithms/scoring/ClosenessCentrality.java	/^    public ClosenessCentrality(Hypergraph<V,E> graph, Transformer<E, ? extends Number> edge_weights)$/;"	m	class:ClosenessCentrality
ClosenessCentrality	src/edu/uci/ics/jung/algorithms/scoring/ClosenessCentrality.java	/^public class ClosenessCentrality<V,E> extends DistanceCentralityScorer<V,E>$/;"	c
ComparableComparator	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    private class ComparableComparator implements Comparator<T>$/;"	c	class:MapBinaryHeap
ConstantMap	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public ConstantMap(V value) {$/;"	m	class:ConstantMap
ConstantMap	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^public class ConstantMap<K,V> implements Map<K,V> {$/;"	c
Context	src/edu/uci/ics/jung/graph/util/Context.java	/^public class Context<G,E> $/;"	c
DAGLayout	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	public DAGLayout(Graph<V,E> g) {$/;"	m	class:DAGLayout
DAGLayout	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^public class DAGLayout<V, E> extends SpringLayout<V,E> {$/;"	c
DEFAULT_DISTX	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    public static int DEFAULT_DISTX = 50;$/;"	f	class:TreeLayout
DEFAULT_DISTY	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    public static int DEFAULT_DISTY = 50;$/;"	f	class:TreeLayout
DEFAULT_THRESHOLD	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^	public static final double DEFAULT_THRESHOLD = 0.00000000001;$/;"	f	class:WeightedChoice
DIRECTED	src/edu/uci/ics/jung/graph/util/EdgeType.java	/^      DIRECTED,$/;"	e	enum:EdgeType	file:
DefaultParallelEdgeIndexFunction	src/edu/uci/ics/jung/graph/util/DefaultParallelEdgeIndexFunction.java	/^    private DefaultParallelEdgeIndexFunction() {$/;"	m	class:DefaultParallelEdgeIndexFunction	file:
DefaultParallelEdgeIndexFunction	src/edu/uci/ics/jung/graph/util/DefaultParallelEdgeIndexFunction.java	/^public class DefaultParallelEdgeIndexFunction<V,E> implements EdgeIndexFunction<V,E>$/;"	c
DegreeScorer	src/edu/uci/ics/jung/algorithms/scoring/DegreeScorer.java	/^    public DegreeScorer(Hypergraph<V,?> graph)$/;"	m	class:DegreeScorer
DegreeScorer	src/edu/uci/ics/jung/algorithms/scoring/DegreeScorer.java	/^public class DegreeScorer<V> implements VertexScorer<V,Integer>$/;"	c
DelegateForest	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public DelegateForest() {$/;"	m	class:DelegateForest
DelegateForest	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public DelegateForest(DirectedGraph<V,E> delegate) {$/;"	m	class:DelegateForest
DelegateForest	src/edu/uci/ics/jung/graph/DelegateForest.java	/^public class DelegateForest<V,E> extends GraphDecorator<V,E> implements Forest<V,E> $/;"	c
DelegateToEdgeTransformer	src/edu/uci/ics/jung/algorithms/scoring/util/DelegateToEdgeTransformer.java	/^    public DelegateToEdgeTransformer(Transformer<E,? extends Number> delegate)$/;"	m	class:DelegateToEdgeTransformer
DelegateToEdgeTransformer	src/edu/uci/ics/jung/algorithms/scoring/util/DelegateToEdgeTransformer.java	/^public class DelegateToEdgeTransformer<V,E> implements$/;"	c
DelegateTree	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public DelegateTree(DirectedGraph<V,E> graph) {$/;"	m	class:DelegateTree
DelegateTree	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public DelegateTree(Factory<DirectedGraph<V,E>> graphFactory) {$/;"	m	class:DelegateTree
DelegateTree	src/edu/uci/ics/jung/graph/DelegateTree.java	/^    public DelegateTree() {$/;"	m	class:DelegateTree
DelegateTree	src/edu/uci/ics/jung/graph/DelegateTree.java	/^public class DelegateTree<V,E> extends GraphDecorator<V,E> implements Tree<V,E>$/;"	c
DijkstraDistance	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public DijkstraDistance(Graph<V,E> g) {$/;"	m	class:DijkstraDistance
DijkstraDistance	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public DijkstraDistance(Graph<V,E> g, boolean cached) {$/;"	m	class:DijkstraDistance
DijkstraDistance	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public DijkstraDistance(Hypergraph<V,E> g, Transformer<E,? extends Number> nev) {$/;"	m	class:DijkstraDistance
DijkstraDistance	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public DijkstraDistance(Hypergraph<V,E> g, Transformer<E,? extends Number> nev, boolean cached) {$/;"	m	class:DijkstraDistance
DijkstraDistance	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^public class DijkstraDistance<V,E> implements Distance<V>$/;"	c
DijkstraShortestPath	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^    public DijkstraShortestPath(Graph<V,E> g)$/;"	m	class:DijkstraShortestPath
DijkstraShortestPath	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^    public DijkstraShortestPath(Graph<V,E> g, Transformer<E, ? extends Number> nev)$/;"	m	class:DijkstraShortestPath
DijkstraShortestPath	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^    public DijkstraShortestPath(Graph<V,E> g, Transformer<E, ? extends Number> nev, boolean cached)$/;"	m	class:DijkstraShortestPath
DijkstraShortestPath	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^    public DijkstraShortestPath(Graph<V,E> g, boolean cached)$/;"	m	class:DijkstraShortestPath
DijkstraShortestPath	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^public class DijkstraShortestPath<V,E> extends DijkstraDistance<V,E> implements ShortestPath<V,E>$/;"	c
DirectedGraph	src/edu/uci/ics/jung/graph/DirectedGraph.java	/^public interface DirectedGraph<V,E> extends Graph<V,E> {$/;"	i
DirectedOrderedSparseMultigraph	src/edu/uci/ics/jung/graph/DirectedOrderedSparseMultigraph.java	/^    public DirectedOrderedSparseMultigraph() {$/;"	m	class:DirectedOrderedSparseMultigraph
DirectedOrderedSparseMultigraph	src/edu/uci/ics/jung/graph/DirectedOrderedSparseMultigraph.java	/^public class DirectedOrderedSparseMultigraph<V,E> $/;"	c
DirectedSparseGraph	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public DirectedSparseGraph() $/;"	m	class:DirectedSparseGraph
DirectedSparseGraph	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^public class DirectedSparseGraph<V,E> extends AbstractTypedGraph<V, E> implements$/;"	c
DirectedSparseMultigraph	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public DirectedSparseMultigraph() {$/;"	m	class:DirectedSparseMultigraph
DirectedSparseMultigraph	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^public class DirectedSparseMultigraph<V,E> $/;"	c
DirectionTransformer	src/edu/uci/ics/jung/algorithms/transformation/DirectionTransformer.java	/^public class DirectionTransformer $/;"	c
DiscreteDistribution	src/edu/uci/ics/jung/algorithms/util/DiscreteDistribution.java	/^public class DiscreteDistribution$/;"	c
Distance	src/edu/uci/ics/jung/algorithms/shortestpath/Distance.java	/^public interface Distance<V>$/;"	i
DistanceCentralityScorer	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^    public DistanceCentralityScorer(Hypergraph<V,E> graph, $/;"	m	class:DistanceCentralityScorer
DistanceCentralityScorer	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^    public DistanceCentralityScorer(Hypergraph<V,E> graph, Distance<V> distance, $/;"	m	class:DistanceCentralityScorer
DistanceCentralityScorer	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^    public DistanceCentralityScorer(Hypergraph<V,E> graph, boolean averaging)$/;"	m	class:DistanceCentralityScorer
DistanceCentralityScorer	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^    public DistanceCentralityScorer(Hypergraph<V,E> graph, boolean averaging,$/;"	m	class:DistanceCentralityScorer
DistanceCentralityScorer	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^public class DistanceCentralityScorer<V,E> implements VertexScorer<V, Double>$/;"	c
DistanceStatistics	src/edu/uci/ics/jung/algorithms/shortestpath/DistanceStatistics.java	/^public class DistanceStatistics $/;"	c
EDGE_ADDED	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^		EDGE_ADDED,$/;"	e	enum:GraphEvent.Type	file:
EDGE_REMOVED	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^		EDGE_REMOVED$/;"	e	enum:GraphEvent.Type	file:
EPSILON	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private double EPSILON = 0.000001D;$/;"	f	class:FRLayout	file:
EPSILON	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private double EPSILON = 0.000001D;$/;"	f	class:FRLayout2	file:
EPSILON	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private double EPSILON = 0.1d;$/;"	f	class:KKLayout	file:
Edge	src/edu/uci/ics/jung/algorithms/filters/package.html	/^<li\/><code>{Edge,Vertex}PredicateFilter<\/code>: graph filters that return the $/;"	f	interface:filters
Edge	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^		public Edge(Graph<V,E> source, Type type, E edge) {$/;"	m	class:GraphEvent.Edge
Edge	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^	public static class Edge<V,E> extends GraphEvent<V,E> {$/;"	c	class:GraphEvent
EdgeBetweennessClusterer	src/edu/uci/ics/jung/algorithms/cluster/EdgeBetweennessClusterer.java	/^    public EdgeBetweennessClusterer(int numEdgesToRemove) {$/;"	m	class:EdgeBetweennessClusterer
EdgeBetweennessClusterer	src/edu/uci/ics/jung/algorithms/cluster/EdgeBetweennessClusterer.java	/^public class EdgeBetweennessClusterer<V,E> implements Transformer<Graph<V,E>,Set<Set<V>>> {$/;"	c
EdgeIndexFunction	src/edu/uci/ics/jung/graph/util/EdgeIndexFunction.java	/^public interface EdgeIndexFunction<V,E> {$/;"	i
EdgePredicateFilter	src/edu/uci/ics/jung/algorithms/filters/EdgePredicateFilter.java	/^    public EdgePredicateFilter(Predicate<E> edge_pred)$/;"	m	class:EdgePredicateFilter
EdgePredicateFilter	src/edu/uci/ics/jung/algorithms/filters/EdgePredicateFilter.java	/^public class EdgePredicateFilter<V, E> implements Filter<V, E>$/;"	c
EdgeScorer	src/edu/uci/ics/jung/algorithms/scoring/EdgeScorer.java	/^public interface EdgeScorer<E, S>$/;"	i
EdgeType	src/edu/uci/ics/jung/algorithms/filters/KNeighborhoodFilter.java	/^	public static enum EdgeType { IN_OUT, IN, OUT }$/;"	g	class:KNeighborhoodFilter
EdgeType	src/edu/uci/ics/jung/graph/util/EdgeType.java	/^public enum EdgeType $/;"	g
EdmondsKarpMaxFlow	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    public EdmondsKarpMaxFlow(DirectedGraph<V,E> directedGraph, V source, V sink, $/;"	m	class:EdmondsKarpMaxFlow
EdmondsKarpMaxFlow	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^public class EdmondsKarpMaxFlow<V,E> extends IterativeProcess {$/;"	c
EigenvectorCentrality	src/edu/uci/ics/jung/algorithms/scoring/EigenvectorCentrality.java	/^    public EigenvectorCentrality(Hypergraph<V,E> graph)$/;"	m	class:EigenvectorCentrality
EigenvectorCentrality	src/edu/uci/ics/jung/algorithms/scoring/EigenvectorCentrality.java	/^    public EigenvectorCentrality(Hypergraph<V,E> graph, $/;"	m	class:EigenvectorCentrality
EigenvectorCentrality	src/edu/uci/ics/jung/algorithms/scoring/EigenvectorCentrality.java	/^public class EigenvectorCentrality<V,E> extends PageRank<V,E>$/;"	c
EppsteinPowerLawGenerator	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^    public EppsteinPowerLawGenerator(Factory<Graph<V,E>> graphFactory,$/;"	m	class:EppsteinPowerLawGenerator
EppsteinPowerLawGenerator	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^public class EppsteinPowerLawGenerator<V,E> implements GraphGenerator<V,E> {$/;"	c
ErdosRenyiGenerator	src/edu/uci/ics/jung/algorithms/generators/random/ErdosRenyiGenerator.java	/^	public ErdosRenyiGenerator(Factory<UndirectedGraph<V,E>> graphFactory,$/;"	m	class:ErdosRenyiGenerator
ErdosRenyiGenerator	src/edu/uci/ics/jung/algorithms/generators/random/ErdosRenyiGenerator.java	/^public class ErdosRenyiGenerator<V,E> implements GraphGenerator<V,E> {$/;"	c
EvolvingGraphGenerator	src/edu/uci/ics/jung/algorithms/generators/EvolvingGraphGenerator.java	/^public interface EvolvingGraphGenerator<V, E> extends GraphGenerator<V,E> {$/;"	i
FRLayout	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    public FRLayout(Graph<V, E> g) {$/;"	m	class:FRLayout
FRLayout	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    public FRLayout(Graph<V, E> g, Dimension d) {$/;"	m	class:FRLayout
FRLayout	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^public class FRLayout<V, E> extends AbstractLayout<V, E> implements IterativeContext {$/;"	c
FRLayout2	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    public FRLayout2(Graph<V, E> g) {$/;"	m	class:FRLayout2
FRLayout2	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    public FRLayout2(Graph<V, E> g, Dimension d) {$/;"	m	class:FRLayout2
FRLayout2	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^public class FRLayout2<V, E> extends AbstractLayout<V, E> implements IterativeContext {$/;"	c
FRVertexData	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    protected static class FRVertexData extends Point2D.Double$/;"	c	class:FRLayout
Filter	src/edu/uci/ics/jung/algorithms/filters/Filter.java	/^public interface Filter<V,E> extends Transformer<Graph<V,E>, Graph<V,E>>{ }$/;"	i
FilterUtils	src/edu/uci/ics/jung/algorithms/filters/FilterUtils.java	/^public class FilterUtils $/;"	c
FoldingTransformer	src/edu/uci/ics/jung/algorithms/transformation/FoldingTransformer.java	/^public class FoldingTransformer<V,E>$/;"	c
Forest	src/edu/uci/ics/jung/graph/Forest.java	/^public interface Forest<V,E> extends DirectedGraph<V,E> {$/;"	i
Graph	src/edu/uci/ics/jung/graph/Graph.java	/^public interface Graph<V,E> extends Hypergraph<V,E>$/;"	i
GraphDecorator	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public GraphDecorator(Graph<V, E> delegate) {$/;"	m	class:GraphDecorator
GraphDecorator	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^public class GraphDecorator<V,E> implements Graph<V,E>, Serializable {$/;"	c
GraphDecorator	src/edu/uci/ics/jung/graph/package.html	/^<li\/> "Wrapper" graphs are available through <code>GraphDecorator<\/code>; these are useful$/;"	external variable declarations
GraphElementAccessor	src/edu/uci/ics/jung/algorithms/layout/GraphElementAccessor.java	/^public interface GraphElementAccessor<V, E>$/;"	i
GraphEvent	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^	public GraphEvent(Graph<V, E> source, Type type) {$/;"	m	class:GraphEvent
GraphEvent	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^public abstract class GraphEvent<V,E> {$/;"	c
GraphEventListener	src/edu/uci/ics/jung/graph/event/GraphEventListener.java	/^public interface GraphEventListener<V,E> extends EventListener $/;"	i
GraphGenerator	src/edu/uci/ics/jung/algorithms/generators/GraphGenerator.java	/^public interface GraphGenerator<V, E> extends Factory<Graph<V,E>>{ }$/;"	i
GraphMatrixOperations	src/edu/uci/ics/jung/algorithms/matrix/GraphMatrixOperations.java	/^public class GraphMatrixOperations$/;"	c
Graphs	src/edu/uci/ics/jung/graph/util/Graphs.java	/^public class Graphs {$/;"	c
HITS	src/edu/uci/ics/jung/algorithms/package.html	/^e.g. PageRank, HITS, betweenness centrality (replaces "importance", above)$/;"	external variable declarations
HITS	src/edu/uci/ics/jung/algorithms/scoring/HITS.java	/^    public HITS(Graph<V,E> g)$/;"	m	class:HITS
HITS	src/edu/uci/ics/jung/algorithms/scoring/HITS.java	/^    public HITS(Graph<V,E> g, Transformer<E, Double> edge_weights, double alpha)$/;"	m	class:HITS
HITS	src/edu/uci/ics/jung/algorithms/scoring/HITS.java	/^    public HITS(Graph<V,E> g, double alpha)$/;"	m	class:HITS
HITS	src/edu/uci/ics/jung/algorithms/scoring/HITS.java	/^public class HITS<V,E> extends HITSWithPriors<V,E>$/;"	c
HITSWithPriors	src/edu/uci/ics/jung/algorithms/scoring/HITSWithPriors.java	/^    public HITSWithPriors(Hypergraph<V,E> g, $/;"	m	class:HITSWithPriors
HITSWithPriors	src/edu/uci/ics/jung/algorithms/scoring/HITSWithPriors.java	/^    public HITSWithPriors(Hypergraph<V,E> g,$/;"	m	class:HITSWithPriors
HITSWithPriors	src/edu/uci/ics/jung/algorithms/scoring/HITSWithPriors.java	/^public class HITSWithPriors<V, E> $/;"	c
Hypergraph	src/edu/uci/ics/jung/graph/Hypergraph.java	/^public interface Hypergraph<V, E>$/;"	i
IN	src/edu/uci/ics/jung/algorithms/filters/KNeighborhoodFilter.java	/^	public static enum EdgeType { IN_OUT, IN, OUT }$/;"	e	enum:KNeighborhoodFilter.EdgeType	file:
INCIDENT	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    protected static final int INCIDENT = 2;$/;"	f	class:SparseGraph
INCOMING	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    protected static final int INCOMING = 0;$/;"	f	class:SparseGraph
IN_OUT	src/edu/uci/ics/jung/algorithms/filters/KNeighborhoodFilter.java	/^	public static enum EdgeType { IN_OUT, IN, OUT }$/;"	e	enum:KNeighborhoodFilter.EdgeType	file:
ISOMLayout	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	public ISOMLayout(Graph<V,E> g) {$/;"	m	class:ISOMLayout
ISOMLayout	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^public class ISOMLayout<V, E> extends AbstractLayout<V,E> implements IterativeContext {$/;"	c
ISOMVertexData	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^		protected ISOMVertexData() {$/;"	m	class:ISOMLayout.ISOMVertexData
ISOMVertexData	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	protected static class ISOMVertexData {$/;"	c	class:ISOMLayout
IncidentEdgeIndexFunction	src/edu/uci/ics/jung/graph/util/IncidentEdgeIndexFunction.java	/^    private IncidentEdgeIndexFunction() {$/;"	m	class:IncidentEdgeIndexFunction	file:
IncidentEdgeIndexFunction	src/edu/uci/ics/jung/graph/util/IncidentEdgeIndexFunction.java	/^public class IncidentEdgeIndexFunction<V,E> implements EdgeIndexFunction<V,E>$/;"	c
Indexer	src/edu/uci/ics/jung/algorithms/util/Indexer.java	/^public class Indexer {$/;"	c
ItemPair	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^		private ItemPair(T light, T heavy, double weight)$/;"	m	class:WeightedChoice.ItemPair	file:
ItemPair	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^	private class ItemPair $/;"	c	class:WeightedChoice
IterativeContext	src/edu/uci/ics/jung/algorithms/util/IterativeContext.java	/^public interface IterativeContext $/;"	i
IterativeProcess	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    public IterativeProcess() {$/;"	m	class:IterativeProcess
IterativeProcess	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^public abstract class IterativeProcess implements IterativeContext {$/;"	c
K	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private double K = 1;		\/\/ arbitrary const number$/;"	f	class:KKLayout	file:
KKLayout	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	public KKLayout(Graph<V,E> g) $/;"	m	class:KKLayout
KKLayout	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^    public KKLayout(Graph<V,E> g, Distance<V> distance){$/;"	m	class:KKLayout
KKLayout	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^public class KKLayout<V,E> extends AbstractLayout<V,E> implements IterativeContext {$/;"	c
KMeansClusterer	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    public KMeansClusterer()$/;"	m	class:KMeansClusterer
KMeansClusterer	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    public KMeansClusterer(int max_iterations, double convergence_threshold)$/;"	m	class:KMeansClusterer
KMeansClusterer	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^public class KMeansClusterer<T>$/;"	c
KNeighborhoodFilter	src/edu/uci/ics/jung/algorithms/filters/KNeighborhoodFilter.java	/^	public KNeighborhoodFilter(Set<V> rootNodes, int radiusK, EdgeType edgeType) {$/;"	m	class:KNeighborhoodFilter
KNeighborhoodFilter	src/edu/uci/ics/jung/algorithms/filters/KNeighborhoodFilter.java	/^	public KNeighborhoodFilter(V rootNode, int radiusK, EdgeType edgeType) {$/;"	m	class:KNeighborhoodFilter
KNeighborhoodFilter	src/edu/uci/ics/jung/algorithms/filters/KNeighborhoodFilter.java	/^public class KNeighborhoodFilter<V,E> implements Filter<V,E> {$/;"	c
KPartiteGraph	src/edu/uci/ics/jung/graph/KPartiteGraph.java	/^public interface KPartiteGraph<V,E> extends Graph<V,E>$/;"	i
KStepMarkov	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^    public KStepMarkov(DirectedGraph<V,E> graph, Set<V> priors, int k, Map<E,Number> edgeWeights) {$/;"	m	class:KStepMarkov
KStepMarkov	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^public class KStepMarkov<V,E> extends RelativeAuthorityRanker<V,E> {$/;"	c
KStepMarkov	src/edu/uci/ics/jung/algorithms/scoring/KStepMarkov.java	/^	public KStepMarkov(Hypergraph<V,E> graph, Transformer<E, ? extends Number> edge_weights, $/;"	m	class:KStepMarkov
KStepMarkov	src/edu/uci/ics/jung/algorithms/scoring/KStepMarkov.java	/^	public KStepMarkov(Hypergraph<V,E> graph, Transformer<V, Double> vertex_priors, int steps)$/;"	m	class:KStepMarkov
KStepMarkov	src/edu/uci/ics/jung/algorithms/scoring/KStepMarkov.java	/^	public KStepMarkov(Hypergraph<V,E> graph, int steps)$/;"	m	class:KStepMarkov
KStepMarkov	src/edu/uci/ics/jung/algorithms/scoring/KStepMarkov.java	/^public class KStepMarkov<V,E> extends PageRankWithPriors<V,E> $/;"	c
KleinbergSmallWorldGenerator	src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java	/^    public KleinbergSmallWorldGenerator(Factory<? extends Graph<V,E>> graph_factory, Factory<V> vertex_factory, $/;"	m	class:KleinbergSmallWorldGenerator
KleinbergSmallWorldGenerator	src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java	/^public class KleinbergSmallWorldGenerator<V, E> extends Lattice2DGenerator<V, E> {$/;"	c
KullbackLeibler	src/edu/uci/ics/jung/algorithms/util/DiscreteDistribution.java	/^    public static double KullbackLeibler(double[] dist, double[] reference)$/;"	m	class:DiscreteDistribution
L	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private double L;			\/\/ the ideal length of an edge$/;"	f	class:KKLayout	file:
LEVELATTRACTIONRATE	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	final double LEVELATTRACTIONRATE = 0.8;$/;"	f	class:DAGLayout
Lattice2DGenerator	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    public Lattice2DGenerator(Factory<? extends Graph<V,E>> graph_factory, Factory<V> vertex_factory, $/;"	m	class:Lattice2DGenerator
Lattice2DGenerator	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^public class Lattice2DGenerator<V,E> implements GraphGenerator<V,E>$/;"	c
Layout	src/edu/uci/ics/jung/algorithms/layout/Layout.java	/^public interface Layout<V, E> extends Transformer<V,Point2D> {$/;"	i
Layout	src/edu/uci/ics/jung/algorithms/layout/package.html	/^<li\/><code>Layout, AbstractLayout<\/code>: interface and abstract class defining the Layout contract and handling$/;"	external variable declarations
LayoutDecorator	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public LayoutDecorator(Layout<V, E> delegate) {$/;"	m	class:LayoutDecorator
LayoutDecorator	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^public abstract class LayoutDecorator<V, E> implements Layout<V, E>, IterativeContext {$/;"	c
MAX_TRIADS	src/edu/uci/ics/jung/algorithms/metrics/TriadicCensus.java	/^	public static final int MAX_TRIADS = TRIAD_NAMES.length;$/;"	f	class:TriadicCensus
MEAN_FIRST_PASSAGE_TIME	src/edu/uci/ics/jung/algorithms/importance/MarkovCentrality.java	/^    public final static String MEAN_FIRST_PASSAGE_TIME = "jung.algorithms.importance.mean_first_passage_time";$/;"	f	class:MarkovCentrality
MSV_THRESHOLD	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	final double MSV_THRESHOLD = 10.0;$/;"	f	class:DAGLayout
MapBinaryHeap	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    public MapBinaryHeap()$/;"	m	class:MapBinaryHeap
MapBinaryHeap	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    public MapBinaryHeap(Collection<T> c)$/;"	m	class:MapBinaryHeap
MapBinaryHeap	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    public MapBinaryHeap(Collection<T> c, Comparator<T> comp)$/;"	m	class:MapBinaryHeap
MapBinaryHeap	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    public MapBinaryHeap(Comparator<T> comp)$/;"	m	class:MapBinaryHeap
MapBinaryHeap	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^public class MapBinaryHeap<T>$/;"	c
MapSettableTransformer	src/edu/uci/ics/jung/algorithms/util/MapSettableTransformer.java	/^    public MapSettableTransformer(Map<I,O> m)$/;"	m	class:MapSettableTransformer
MapSettableTransformer	src/edu/uci/ics/jung/algorithms/util/MapSettableTransformer.java	/^public class MapSettableTransformer<I, O> implements SettableTransformer<I, O>$/;"	c
MapValueArrayComparator	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^        protected MapValueArrayComparator(Map<V, double[]> map)$/;"	m	class:VoltageClusterer.MapValueArrayComparator
MapValueArrayComparator	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    protected class MapValueArrayComparator implements Comparator<V>$/;"	c	class:VoltageClusterer
MarkovCentrality	src/edu/uci/ics/jung/algorithms/importance/MarkovCentrality.java	/^    public MarkovCentrality(DirectedGraph<V,E> graph, Set<V> rootNodes) {$/;"	m	class:MarkovCentrality
MarkovCentrality	src/edu/uci/ics/jung/algorithms/importance/MarkovCentrality.java	/^    public MarkovCentrality(DirectedGraph<V,E> graph, Set<V> rootNodes, Map<E,Number> edgeWeightKey) {$/;"	m	class:MarkovCentrality
MarkovCentrality	src/edu/uci/ics/jung/algorithms/importance/MarkovCentrality.java	/^public class MarkovCentrality<V,E> extends RelativeAuthorityRanker<V,E> {$/;"	c
MatrixElementOperations	src/edu/uci/ics/jung/algorithms/matrix/MatrixElementOperations.java	/^public interface MatrixElementOperations<E>$/;"	i
Metrics	src/edu/uci/ics/jung/algorithms/metrics/Metrics.java	/^public class Metrics $/;"	c
MinimumSpanningForest	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest.java	/^	public MinimumSpanningForest(Graph<V, E> graph, Factory<Forest<V,E>> factory, $/;"	m	class:MinimumSpanningForest
MinimumSpanningForest	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest.java	/^	public MinimumSpanningForest(Graph<V, E> graph, Forest<V,E> forest, $/;"	m	class:MinimumSpanningForest
MinimumSpanningForest	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest.java	/^    public MinimumSpanningForest(Graph<V, E> graph, Forest<V,E> forest, $/;"	m	class:MinimumSpanningForest
MinimumSpanningForest	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest.java	/^public class MinimumSpanningForest<V,E> {$/;"	c
MinimumSpanningForest2	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest2.java	/^	public MinimumSpanningForest2(Graph<V, E> graph, $/;"	m	class:MinimumSpanningForest2
MinimumSpanningForest2	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest2.java	/^public class MinimumSpanningForest2<V,E> {$/;"	c
MixedRandomGraphGenerator	src/edu/uci/ics/jung/algorithms/generators/random/MixedRandomGraphGenerator.java	/^public class MixedRandomGraphGenerator {$/;"	c
MultiGraph	src/edu/uci/ics/jung/graph/MultiGraph.java	/^public interface MultiGraph<V, E> {$/;"	i
NotEnoughClustersException	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    public static class NotEnoughClustersException extends RuntimeException$/;"	c	class:KMeansClusterer
OUT	src/edu/uci/ics/jung/algorithms/filters/KNeighborhoodFilter.java	/^	public static enum EdgeType { IN_OUT, IN, OUT }$/;"	e	enum:KNeighborhoodFilter.EdgeType	file:
OUTGOING	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    protected static final int OUTGOING = 1;$/;"	f	class:SparseGraph
ObservableGraph	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^	public ObservableGraph(Graph<V, E> delegate) {$/;"	m	class:ObservableGraph
ObservableGraph	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^public class ObservableGraph<V,E> extends GraphDecorator<V,E> {$/;"	c
OrderedKAryTree	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public OrderedKAryTree(int order)$/;"	m	class:OrderedKAryTree
OrderedKAryTree	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^public class OrderedKAryTree<V, E> extends AbstractTypedGraph<V, E> implements Tree<V, E> $/;"	c
OrderedSparseMultigraph	src/edu/uci/ics/jung/graph/OrderedSparseMultigraph.java	/^    public OrderedSparseMultigraph()$/;"	m	class:OrderedSparseMultigraph
OrderedSparseMultigraph	src/edu/uci/ics/jung/graph/OrderedSparseMultigraph.java	/^public class OrderedSparseMultigraph<V,E> $/;"	c
PageRank	src/edu/uci/ics/jung/algorithms/package.html	/^e.g. PageRank, HITS, betweenness centrality (replaces "importance", above)$/;"	external variable declarations
PageRank	src/edu/uci/ics/jung/algorithms/scoring/PageRank.java	/^    public PageRank(Hypergraph<V,E> graph, Transformer<E, ? extends Number> edge_weight, double alpha)$/;"	m	class:PageRank
PageRank	src/edu/uci/ics/jung/algorithms/scoring/PageRank.java	/^    public PageRank(Hypergraph<V,E> graph, double alpha)$/;"	m	class:PageRank
PageRank	src/edu/uci/ics/jung/algorithms/scoring/PageRank.java	/^public class PageRank<V,E> extends PageRankWithPriors<V,E>$/;"	c
PageRankWithPriors	src/edu/uci/ics/jung/algorithms/scoring/PageRankWithPriors.java	/^    public PageRankWithPriors(Hypergraph<V,E> graph, $/;"	m	class:PageRankWithPriors
PageRankWithPriors	src/edu/uci/ics/jung/algorithms/scoring/PageRankWithPriors.java	/^public class PageRankWithPriors<V, E> $/;"	c
Pair	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public Pair(Collection<? extends T> values) $/;"	m	class:Pair
Pair	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public Pair(T value1, T value2) $/;"	m	class:Pair
Pair	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public Pair(T[] values)$/;"	m	class:Pair
Pair	src/edu/uci/ics/jung/graph/util/Pair.java	/^public final class Pair<T> implements Collection<T>, Serializable$/;"	c
PairIterator	src/edu/uci/ics/jung/graph/util/Pair.java	/^        private PairIterator()$/;"	m	class:Pair.PairIterator	file:
PairIterator	src/edu/uci/ics/jung/graph/util/Pair.java	/^    private class PairIterator implements Iterator<T>$/;"	c	class:Pair
PolarPoint	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	public PolarPoint() {$/;"	m	class:PolarPoint
PolarPoint	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	public PolarPoint(double theta, double radius) {$/;"	m	class:PolarPoint
PolarPoint	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^public class PolarPoint $/;"	c
PrimMinimumSpanningTree	src/edu/uci/ics/jung/algorithms/shortestpath/PrimMinimumSpanningTree.java	/^	public PrimMinimumSpanningTree(Factory<? extends Graph<V,E>> factory) {$/;"	m	class:PrimMinimumSpanningTree
PrimMinimumSpanningTree	src/edu/uci/ics/jung/algorithms/shortestpath/PrimMinimumSpanningTree.java	/^	public PrimMinimumSpanningTree(Factory<? extends Graph<V,E>> factory, $/;"	m	class:PrimMinimumSpanningTree
PrimMinimumSpanningTree	src/edu/uci/ics/jung/algorithms/shortestpath/PrimMinimumSpanningTree.java	/^public class PrimMinimumSpanningTree<V,E> implements Transformer<Graph<V,E>,Graph<V,E>> {$/;"	c
RANK_SCORE	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^    public final static String RANK_SCORE = "jung.algorithms.importance.KStepMarkovExperimental.RankScore";$/;"	f	class:KStepMarkov
RadialTreeLayout	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^    public RadialTreeLayout(Forest<V,E> g) {$/;"	m	class:RadialTreeLayout
RadialTreeLayout	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^    public RadialTreeLayout(Forest<V,E> g, int distx) {$/;"	m	class:RadialTreeLayout
RadialTreeLayout	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^    public RadialTreeLayout(Forest<V,E> g, int distx, int disty) {$/;"	m	class:RadialTreeLayout
RadialTreeLayout	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^public class RadialTreeLayout<V,E> extends TreeLayout<V,E> {$/;"	c
RadiusGraphElementAccessor	src/edu/uci/ics/jung/algorithms/layout/RadiusGraphElementAccessor.java	/^    public RadiusGraphElementAccessor() {$/;"	m	class:RadiusGraphElementAccessor
RadiusGraphElementAccessor	src/edu/uci/ics/jung/algorithms/layout/RadiusGraphElementAccessor.java	/^    public RadiusGraphElementAccessor(double maxDistance) {$/;"	m	class:RadiusGraphElementAccessor
RadiusGraphElementAccessor	src/edu/uci/ics/jung/algorithms/layout/RadiusGraphElementAccessor.java	/^public class RadiusGraphElementAccessor<V, E> implements GraphElementAccessor<V, E> {$/;"	c
RandomLocationTransformer	src/edu/uci/ics/jung/algorithms/layout/util/RandomLocationTransformer.java	/^    public RandomLocationTransformer(Dimension d) {$/;"	m	class:RandomLocationTransformer
RandomLocationTransformer	src/edu/uci/ics/jung/algorithms/layout/util/RandomLocationTransformer.java	/^    public RandomLocationTransformer(final Dimension d, long seed) {$/;"	m	class:RandomLocationTransformer
RandomLocationTransformer	src/edu/uci/ics/jung/algorithms/layout/util/RandomLocationTransformer.java	/^public class RandomLocationTransformer<V> implements Transformer<V,Point2D> {$/;"	c
RandomWalkBetweenness	src/edu/uci/ics/jung/algorithms/importance/RandomWalkBetweenness.java	/^    public RandomWalkBetweenness(UndirectedGraph<V,E> g) {$/;"	m	class:RandomWalkBetweenness
RandomWalkBetweenness	src/edu/uci/ics/jung/algorithms/importance/RandomWalkBetweenness.java	/^public class RandomWalkBetweenness<V,E> extends RandomWalkSTBetweenness<V,E> {$/;"	c
RandomWalkSTBetweenness	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    public RandomWalkSTBetweenness(UndirectedGraph<V,E> g, V s, V t) {$/;"	m	class:RandomWalkSTBetweenness
RandomWalkSTBetweenness	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^public class RandomWalkSTBetweenness<V,E> extends AbstractRanker<V,E> {$/;"	c
Ranking	src/edu/uci/ics/jung/algorithms/importance/Ranking.java	/^    public Ranking(int originalPos, double rankScore, V ranked) {$/;"	m	class:Ranking
Ranking	src/edu/uci/ics/jung/algorithms/importance/Ranking.java	/^public class Ranking<V> implements Comparable {$/;"	c
RealMatrixElementOperations	src/edu/uci/ics/jung/algorithms/matrix/RealMatrixElementOperations.java	/^    public RealMatrixElementOperations(Map<E,Number> edgeData)$/;"	m	class:RealMatrixElementOperations
RealMatrixElementOperations	src/edu/uci/ics/jung/algorithms/matrix/RealMatrixElementOperations.java	/^public class RealMatrixElementOperations<E> implements MatrixElementOperations<E>$/;"	c
RelativeAuthorityRanker	src/edu/uci/ics/jung/algorithms/importance/RelativeAuthorityRanker.java	/^public abstract class RelativeAuthorityRanker<V,E> extends AbstractRanker<V,E> {$/;"	c
Relaxer	src/edu/uci/ics/jung/algorithms/layout/util/Relaxer.java	/^public interface Relaxer {$/;"	i
SPACEFACTOR	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	final double SPACEFACTOR = 1.3;$/;"	f	class:DAGLayout
Scores	src/edu/uci/ics/jung/algorithms/scoring/HITS.java	/^    	public Scores(double hub, double authority)$/;"	m	class:HITS.Scores
Scores	src/edu/uci/ics/jung/algorithms/scoring/HITS.java	/^    public static class Scores$/;"	c	class:HITS
ScoringUtils	src/edu/uci/ics/jung/algorithms/scoring/util/ScoringUtils.java	/^public class ScoringUtils$/;"	c
SelfLoopEdgePredicate	src/edu/uci/ics/jung/algorithms/util/SelfLoopEdgePredicate.java	/^public class SelfLoopEdgePredicate<V,E> implements Predicate<Context<Graph<V,E>,E>> {$/;"	c
SetHypergraph	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public SetHypergraph()$/;"	m	class:SetHypergraph
SetHypergraph	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^public class SetHypergraph<V,H> $/;"	c
SettableTransformer	src/edu/uci/ics/jung/algorithms/util/SettableTransformer.java	/^public interface SettableTransformer<I, O> extends Transformer<I, O>$/;"	i
ShortestPath	src/edu/uci/ics/jung/algorithms/shortestpath/ShortestPath.java	/^public interface ShortestPath<V, E>$/;"	i
ShortestPathUtils	src/edu/uci/ics/jung/algorithms/shortestpath/ShortestPathUtils.java	/^public class ShortestPathUtils$/;"	c
SortedSparseMultigraph	src/edu/uci/ics/jung/graph/SortedSparseMultigraph.java	/^    public SortedSparseMultigraph()$/;"	m	class:SortedSparseMultigraph
SortedSparseMultigraph	src/edu/uci/ics/jung/graph/SortedSparseMultigraph.java	/^    public SortedSparseMultigraph(Comparator<V> vertex_comparator, Comparator<E> edge_comparator)$/;"	m	class:SortedSparseMultigraph
SortedSparseMultigraph	src/edu/uci/ics/jung/graph/SortedSparseMultigraph.java	/^public class SortedSparseMultigraph<V,E> $/;"	c
SourceData	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        protected SourceData(V source)$/;"	m	class:DijkstraDistance.SourceData
SourceData	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    protected class SourceData$/;"	c	class:DijkstraDistance
SourcePathData	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^		protected SourcePathData(V source)$/;"	m	class:DijkstraShortestPath.SourcePathData
SourcePathData	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^    protected class SourcePathData extends SourceData$/;"	c	class:DijkstraShortestPath
SparseGraph	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public SparseGraph()$/;"	m	class:SparseGraph
SparseGraph	src/edu/uci/ics/jung/graph/SparseGraph.java	/^public class SparseGraph<V,E> $/;"	c
SparseMultigraph	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public SparseMultigraph()$/;"	m	class:SparseMultigraph
SparseMultigraph	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^public class SparseMultigraph<V,E> $/;"	c
SpringDimensionChecker	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public class SpringDimensionChecker extends ComponentAdapter {$/;"	c	class:SpringLayout
SpringLayout	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public SpringLayout(Graph<V,E> g) {$/;"	m	class:SpringLayout
SpringLayout	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public SpringLayout(Graph<V,E> g, Transformer<E, Integer> length_function)$/;"	m	class:SpringLayout
SpringLayout	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^public class SpringLayout<V, E> extends AbstractLayout<V,E> implements IterativeContext {$/;"	c
SpringLayout2	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^    public SpringLayout2(Graph<V,E> g) {$/;"	m	class:SpringLayout2
SpringLayout2	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^    public SpringLayout2(Graph<V,E> g, Transformer<E, Integer> length_function)$/;"	m	class:SpringLayout2
SpringLayout2	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^public class SpringLayout2<V, E> extends SpringLayout<V,E> $/;"	c
SpringVertexData	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    protected static class SpringVertexData {$/;"	c	class:SpringLayout
StaticLayout	src/edu/uci/ics/jung/algorithms/layout/StaticLayout.java	/^    public StaticLayout(Graph<V,E> graph) {$/;"	m	class:StaticLayout
StaticLayout	src/edu/uci/ics/jung/algorithms/layout/StaticLayout.java	/^    public StaticLayout(Graph<V,E> graph, Dimension size) {$/;"	m	class:StaticLayout
StaticLayout	src/edu/uci/ics/jung/algorithms/layout/StaticLayout.java	/^    public StaticLayout(Graph<V,E> graph, Transformer<V,Point2D> initializer) {$/;"	m	class:StaticLayout
StaticLayout	src/edu/uci/ics/jung/algorithms/layout/StaticLayout.java	/^    public StaticLayout(Graph<V,E> graph, Transformer<V,Point2D> initializer, Dimension size) {$/;"	m	class:StaticLayout
StaticLayout	src/edu/uci/ics/jung/algorithms/layout/StaticLayout.java	/^public class StaticLayout<V, E> extends AbstractLayout<V,E> {$/;"	c
StructuralHoles	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    public StructuralHoles(Graph<V,E> graph, Transformer<E, ? extends Number> nev) $/;"	m	class:StructuralHoles
StructuralHoles	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^public class StructuralHoles<V,E> {$/;"	c
StructurallyEquivalent	src/edu/uci/ics/jung/algorithms/blockmodel/StructurallyEquivalent.java	/^public class StructurallyEquivalent<V,E> implements Transformer<Graph<V,E>, VertexPartition<V,E>> $/;"	c
SynchronizedAbstractGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		private SynchronizedAbstractGraph(Graph<V, E> delegate) {$/;"	m	class:Graphs.SynchronizedAbstractGraph	file:
SynchronizedAbstractGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	static abstract class SynchronizedAbstractGraph<V,E> implements Graph<V,E>, Serializable {$/;"	c	class:Graphs
SynchronizedDirectedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		private SynchronizedDirectedGraph(DirectedGraph<V,E> delegate) {$/;"	m	class:Graphs.SynchronizedDirectedGraph	file:
SynchronizedDirectedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    static class SynchronizedDirectedGraph<V,E> extends SynchronizedAbstractGraph<V,E> $/;"	c	class:Graphs
SynchronizedForest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public SynchronizedForest(Forest<V, E> delegate) {$/;"	m	class:Graphs.SynchronizedForest
SynchronizedForest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    static class SynchronizedForest<V,E> extends SynchronizedDirectedGraph<V,E> implements Forest<V,E> {$/;"	c	class:Graphs
SynchronizedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		private SynchronizedGraph(Graph<V,E> delegate) {$/;"	m	class:Graphs.SynchronizedGraph	file:
SynchronizedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    static class SynchronizedGraph<V,E> extends SynchronizedAbstractGraph<V,E> implements Serializable {$/;"	c	class:Graphs
SynchronizedTree	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public SynchronizedTree(Tree<V, E> delegate) {$/;"	m	class:Graphs.SynchronizedTree
SynchronizedTree	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    static class SynchronizedTree<V,E> extends SynchronizedForest<V,E> implements Tree<V,E> {$/;"	c	class:Graphs
SynchronizedUndirectedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		private SynchronizedUndirectedGraph(UndirectedGraph<V,E> delegate) {$/;"	m	class:Graphs.SynchronizedUndirectedGraph	file:
SynchronizedUndirectedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    static class SynchronizedUndirectedGraph<V,E> extends SynchronizedAbstractGraph<V,E> $/;"	c	class:Graphs
TOP	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    private final static int TOP = 0;   \/\/ the index of the top of the heap$/;"	f	class:MapBinaryHeap	file:
TRIAD_NAMES	src/edu/uci/ics/jung/algorithms/metrics/TriadicCensus.java	/^	public static final String[] TRIAD_NAMES = { "N\/A", "003", "012", "102", "021D",$/;"	f	class:TriadicCensus
TestGraphs	src/edu/uci/ics/jung/graph/util/TestGraphs.java	/^public class TestGraphs {$/;"	c
Tree	src/edu/uci/ics/jung/graph/Tree.java	/^public interface Tree<V,E> extends Forest<V,E>$/;"	i
TreeLayout	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    public TreeLayout(Forest<V,E> g) {$/;"	m	class:TreeLayout
TreeLayout	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    public TreeLayout(Forest<V,E> g, int distx) {$/;"	m	class:TreeLayout
TreeLayout	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    public TreeLayout(Forest<V,E> g, int distx, int disty) {$/;"	m	class:TreeLayout
TreeLayout	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^public class TreeLayout<V,E> implements Layout<V,E> {$/;"	c
TreeUtils	src/edu/uci/ics/jung/graph/util/TreeUtils.java	/^public class TreeUtils $/;"	c
TriadicCensus	src/edu/uci/ics/jung/algorithms/metrics/TriadicCensus.java	/^public class TriadicCensus {$/;"	c
Type	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^	public static enum Type {$/;"	g	class:GraphEvent
UNDIRECTED	src/edu/uci/ics/jung/graph/util/EdgeType.java	/^      UNDIRECTED$/;"	e	enum:EdgeType	file:
UndirectedGraph	src/edu/uci/ics/jung/graph/UndirectedGraph.java	/^public interface UndirectedGraph<V,E> extends Graph<V,E> {}$/;"	i
UndirectedOrderedSparseMultigraph	src/edu/uci/ics/jung/graph/UndirectedOrderedSparseMultigraph.java	/^    public UndirectedOrderedSparseMultigraph() {$/;"	m	class:UndirectedOrderedSparseMultigraph
UndirectedOrderedSparseMultigraph	src/edu/uci/ics/jung/graph/UndirectedOrderedSparseMultigraph.java	/^public class UndirectedOrderedSparseMultigraph<V,E> $/;"	c
UndirectedSparseGraph	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public UndirectedSparseGraph() {$/;"	m	class:UndirectedSparseGraph
UndirectedSparseGraph	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^public class UndirectedSparseGraph<V, E> extends AbstractTypedGraph<V, E>$/;"	c
UndirectedSparseMultigraph	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public UndirectedSparseMultigraph() {$/;"	m	class:UndirectedSparseMultigraph
UndirectedSparseMultigraph	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^public class UndirectedSparseMultigraph<V,E> $/;"	c
UniformDegreeWeight	src/edu/uci/ics/jung/algorithms/scoring/util/UniformDegreeWeight.java	/^    public UniformDegreeWeight(Hypergraph<V, E> graph)$/;"	m	class:UniformDegreeWeight
UniformDegreeWeight	src/edu/uci/ics/jung/algorithms/scoring/util/UniformDegreeWeight.java	/^public class UniformDegreeWeight<V, E> implements$/;"	c
UniformInOut	src/edu/uci/ics/jung/algorithms/scoring/util/UniformInOut.java	/^    public UniformInOut(Graph<V,E> graph)$/;"	m	class:UniformInOut
UniformInOut	src/edu/uci/ics/jung/algorithms/scoring/util/UniformInOut.java	/^public class UniformInOut<V,E> implements Transformer<VEPair<V,E>, Double>$/;"	c
UnmodifiableAbstractGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		private UnmodifiableAbstractGraph(Graph<V, E> delegate) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph	file:
UnmodifiableAbstractGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	static abstract class UnmodifiableAbstractGraph<V,E> implements Graph<V,E>, Serializable {$/;"	c	class:Graphs
UnmodifiableDirectedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		private UnmodifiableDirectedGraph(DirectedGraph<V,E> delegate) {$/;"	m	class:Graphs.UnmodifiableDirectedGraph	file:
UnmodifiableDirectedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    static class UnmodifiableDirectedGraph<V,E> extends UnmodifiableAbstractGraph<V,E> $/;"	c	class:Graphs
UnmodifiableForest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		private UnmodifiableForest(Forest<V,E> delegate) {$/;"	m	class:Graphs.UnmodifiableForest	file:
UnmodifiableForest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    static class UnmodifiableForest<V,E> extends UnmodifiableGraph<V,E>$/;"	c	class:Graphs
UnmodifiableGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		private UnmodifiableGraph(Graph<V,E> delegate) {$/;"	m	class:Graphs.UnmodifiableGraph	file:
UnmodifiableGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    static class UnmodifiableGraph<V,E> extends UnmodifiableAbstractGraph<V,E> implements Serializable {$/;"	c	class:Graphs
UnmodifiableTree	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		private UnmodifiableTree(Tree<V,E> delegate) {$/;"	m	class:Graphs.UnmodifiableTree	file:
UnmodifiableTree	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    static class UnmodifiableTree<V,E> extends UnmodifiableForest<V,E>$/;"	c	class:Graphs
UnmodifiableUndirectedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		private UnmodifiableUndirectedGraph(UndirectedGraph<V,E> delegate) {$/;"	m	class:Graphs.UnmodifiableUndirectedGraph	file:
UnmodifiableUndirectedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    static class UnmodifiableUndirectedGraph<V,E> extends UnmodifiableAbstractGraph<V,E> $/;"	c	class:Graphs
UnweightedShortestPath	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^	public UnweightedShortestPath(Hypergraph<V,E> g)$/;"	m	class:UnweightedShortestPath
UnweightedShortestPath	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^public class UnweightedShortestPath<V, E> $/;"	c
VEPair	src/edu/uci/ics/jung/algorithms/scoring/util/VEPair.java	/^    public VEPair(V v, E e)$/;"	m	class:VEPair
VEPair	src/edu/uci/ics/jung/algorithms/scoring/util/VEPair.java	/^public class VEPair<V, E>$/;"	c
VERTEX_ADDED	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^		VERTEX_ADDED,$/;"	e	enum:GraphEvent.Type	file:
VERTEX_REMOVED	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^		VERTEX_REMOVED,$/;"	e	enum:GraphEvent.Type	file:
Vertex	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^		public Vertex(Graph<V,E> source, Type type, V vertex) {$/;"	m	class:GraphEvent.Vertex
Vertex	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^	public static class Vertex<V,E> extends GraphEvent<V,E> {$/;"	c	class:GraphEvent
VertexComparator	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        protected VertexComparator(Map<V,Number> distances)$/;"	m	class:DijkstraDistance.VertexComparator
VertexComparator	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    protected static class VertexComparator<V> implements Comparator<V>$/;"	c	class:DijkstraDistance
VertexData	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^		protected VertexData(E parent_edge, int depth)$/;"	m	class:OrderedKAryTree.VertexData
VertexData	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^	protected class VertexData$/;"	c	class:OrderedKAryTree
VertexPartition	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^	public VertexPartition(Graph<V,E> g, Map<V, Set<V>> partition_map) $/;"	m	class:VertexPartition
VertexPartition	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^    public VertexPartition(Graph<V,E> g, Collection<Set<V>> vertex_sets)$/;"	m	class:VertexPartition
VertexPartition	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^    public VertexPartition(Graph<V,E> g, Map<V, Set<V>> partition_map, $/;"	m	class:VertexPartition
VertexPartition	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^public class VertexPartition<V,E> $/;"	c
VertexPartitionCollapser	src/edu/uci/ics/jung/algorithms/transformation/VertexPartitionCollapser.java	/^    public VertexPartitionCollapser(Factory<Graph<CV,CE>> graph_factory, $/;"	m	class:VertexPartitionCollapser
VertexPartitionCollapser	src/edu/uci/ics/jung/algorithms/transformation/VertexPartitionCollapser.java	/^public class VertexPartitionCollapser<V,E,CV,CE> $/;"	c
VertexPredicateFilter	src/edu/uci/ics/jung/algorithms/filters/VertexPredicateFilter.java	/^    public VertexPredicateFilter(Predicate<V> vertex_pred)$/;"	m	class:VertexPredicateFilter
VertexPredicateFilter	src/edu/uci/ics/jung/algorithms/filters/VertexPredicateFilter.java	/^public class VertexPredicateFilter<V,E> implements Filter<V,E>$/;"	c
VertexScoreTransformer	src/edu/uci/ics/jung/algorithms/scoring/util/VertexScoreTransformer.java	/^    public VertexScoreTransformer(VertexScorer<V,S> vs)$/;"	m	class:VertexScoreTransformer
VertexScoreTransformer	src/edu/uci/ics/jung/algorithms/scoring/util/VertexScoreTransformer.java	/^public class VertexScoreTransformer<V, S> implements Transformer<V, S>$/;"	c
VertexScorer	src/edu/uci/ics/jung/algorithms/scoring/VertexScorer.java	/^public interface VertexScorer<V, S>$/;"	i
VisRunner	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	public VisRunner(IterativeContext process) {$/;"	m	class:VisRunner
VisRunner	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^public class VisRunner implements Relaxer, Runnable {$/;"	c
VoltageClusterer	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    public VoltageClusterer(Graph<V,E> g, int num_candidates)$/;"	m	class:VoltageClusterer
VoltageClusterer	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^public class VoltageClusterer<V,E>$/;"	c
VoltageScorer	src/edu/uci/ics/jung/algorithms/scoring/VoltageScorer.java	/^    public VoltageScorer(Hypergraph<V, E> g, Collection<V> sources, Collection<V> sinks)$/;"	m	class:VoltageScorer
VoltageScorer	src/edu/uci/ics/jung/algorithms/scoring/VoltageScorer.java	/^    public VoltageScorer(Hypergraph<V, E> g, Map<V, ? extends Number> source_voltages, $/;"	m	class:VoltageScorer
VoltageScorer	src/edu/uci/ics/jung/algorithms/scoring/VoltageScorer.java	/^    public VoltageScorer(Hypergraph<V, E> g, Transformer<E, ? extends Number> edge_weights, $/;"	m	class:VoltageScorer
VoltageScorer	src/edu/uci/ics/jung/algorithms/scoring/VoltageScorer.java	/^    public VoltageScorer(Hypergraph<V,E> g, Transformer<E, ? extends Number> edge_weights, $/;"	m	class:VoltageScorer
VoltageScorer	src/edu/uci/ics/jung/algorithms/scoring/VoltageScorer.java	/^    public VoltageScorer(Hypergraph<V,E> g, V source, V sink)$/;"	m	class:VoltageScorer
VoltageScorer	src/edu/uci/ics/jung/algorithms/scoring/VoltageScorer.java	/^public class VoltageScorer<V, E> extends AbstractIterativeScorer<V, E, Double>$/;"	c
WEIGHTED_NIPATHS_KEY	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    public final static String WEIGHTED_NIPATHS_KEY = "jung.algorithms.importance.WEIGHTED_NIPATHS_KEY";$/;"	f	class:WeightedNIPaths
WeakComponentClusterer	src/edu/uci/ics/jung/algorithms/cluster/WeakComponentClusterer.java	/^public class WeakComponentClusterer<V,E> implements Transformer<Graph<V,E>, Set<Set<V>>> $/;"	c
WeightedChoice	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^	public WeightedChoice(Map<T, ? extends Number> item_weights)$/;"	m	class:WeightedChoice
WeightedChoice	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^	public WeightedChoice(Map<T, ? extends Number> item_weights, Random random)$/;"	m	class:WeightedChoice
WeightedChoice	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^	public WeightedChoice(Map<T, ? extends Number> item_weights, Random random,$/;"	m	class:WeightedChoice
WeightedChoice	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^	public WeightedChoice(Map<T, ? extends Number> item_weights, double threshold)$/;"	m	class:WeightedChoice
WeightedChoice	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^public class WeightedChoice<T> $/;"	c
WeightedNIPaths	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    public WeightedNIPaths(DirectedGraph<V,E> graph, Factory<V> vertexFactory,$/;"	m	class:WeightedNIPaths
WeightedNIPaths	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^public class WeightedNIPaths<V,E> extends AbstractRanker<V,E> {$/;"	c
acceptDisconnectedGraph	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public void acceptDisconnectedGraph(boolean accept)$/;"	m	class:AbstractIterativeScorer
accept_disconnected_graph	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    private boolean accept_disconnected_graph;$/;"	f	class:AbstractIterativeScorer	file:
actions	src/edu/uci/ics/jung/graph/event/package.html	/^<p>Support for generating events in response to graph actions, especially mutations.$/;"	external variable declarations
adaption	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private double adaption;$/;"	f	class:ISOMLayout	file:
add	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^	public boolean add(T o)$/;"	m	class:MapBinaryHeap
add	src/edu/uci/ics/jung/graph/package.html	/^Mutations should be done via <code>{add,remove}{Edge,Vertex}<\/code>, or$/;"	f	interface:via
add	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public boolean add(T o) {$/;"	m	class:Pair
addAll	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public boolean addAll(Collection<? extends T> c) {$/;"	m	class:Pair
addChild	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public boolean addChild(E edge, V parent, V child) {$/;"	m	class:DelegateTree
addChild	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public boolean addChild(E edge, V parent, V child, EdgeType edgeType) {$/;"	m	class:DelegateTree
addEdge	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^	public abstract boolean addEdge(E edge, Pair<? extends V> endpoints, EdgeType edgeType);$/;"	m	class:AbstractGraph
addEdge	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^	public boolean addEdge(E e, V v1, V v2)$/;"	m	class:AbstractGraph
addEdge	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^	public boolean addEdge(E e, V v1, V v2, EdgeType edge_type)$/;"	m	class:AbstractGraph
addEdge	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^	public boolean addEdge(E edge, Collection<? extends V> vertices) $/;"	m	class:AbstractGraph
addEdge	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^	public boolean addEdge(E edge, Collection<? extends V> vertices, EdgeType edgeType) {$/;"	m	class:AbstractGraph
addEdge	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^	public boolean addEdge(E edge, Pair<? extends V> endpoints)$/;"	m	class:AbstractGraph
addEdge	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public boolean addEdge(E e, V v1, V v2, EdgeType edgeType) {$/;"	m	class:DelegateForest
addEdge	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public boolean addEdge(E edge, Collection<? extends V> vertices) {$/;"	m	class:DelegateForest
addEdge	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public boolean addEdge(E e, V v1, V v2) {$/;"	m	class:DelegateTree
addEdge	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public boolean addEdge(E e, V v1, V v2, EdgeType edgeType) {$/;"	m	class:DelegateTree
addEdge	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public boolean addEdge(E edge, Collection<? extends V> vertices) {$/;"	m	class:DelegateTree
addEdge	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public boolean addEdge(E edge, Pair<? extends V> endpoints, EdgeType edgeType)$/;"	m	class:DirectedSparseGraph
addEdge	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^  public boolean addEdge(E edge, Pair<? extends V> endpoints, EdgeType edgeType) $/;"	m	class:DirectedSparseMultigraph
addEdge	src/edu/uci/ics/jung/graph/Graph.java	/^    boolean addEdge(E e, V v1, V v2);$/;"	m	interface:Graph
addEdge	src/edu/uci/ics/jung/graph/Graph.java	/^    boolean addEdge(E e, V v1, V v2, EdgeType edgeType);$/;"	m	interface:Graph
addEdge	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean addEdge(E e, V v1, V v2) {$/;"	m	class:GraphDecorator
addEdge	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean addEdge(E e, V v1, V v2, EdgeType edgeType) {$/;"	m	class:GraphDecorator
addEdge	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean addEdge(E edge, Collection<? extends V> vertices) {$/;"	m	class:GraphDecorator
addEdge	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean addEdge(E edge, Collection<? extends V> vertices, EdgeType$/;"	m	class:GraphDecorator
addEdge	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    boolean addEdge(E edge, Collection<? extends V> vertices);$/;"	m	interface:Hypergraph
addEdge	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    boolean addEdge(E edge, Collection<? extends V> vertices, EdgeType $/;"	m	interface:Hypergraph
addEdge	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^	public boolean addEdge(E edge, Collection<? extends V> vertices) {$/;"	m	class:ObservableGraph
addEdge	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^  public boolean addEdge(E e, V v1, V v2) {$/;"	m	class:ObservableGraph
addEdge	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^  public boolean addEdge(E e, V v1, V v2, EdgeType edgeType) {$/;"	m	class:ObservableGraph
addEdge	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^	public boolean addEdge(E e, V parent, V child, int index) $/;"	m	class:OrderedKAryTree
addEdge	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^	public boolean addEdge(E edge, Collection<? extends V> vertices, EdgeType edge_type) $/;"	m	class:OrderedKAryTree
addEdge	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^	public boolean addEdge(E edge, Pair<? extends V> endpoints, EdgeType edgeType) $/;"	m	class:OrderedKAryTree
addEdge	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean addEdge(E e, V parent, V child)$/;"	m	class:OrderedKAryTree
addEdge	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean addEdge(E e, V v1, V v2, EdgeType edge_type) $/;"	m	class:OrderedKAryTree
addEdge	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public boolean addEdge(H hyperedge, Collection<? extends V> to_attach)$/;"	m	class:SetHypergraph
addEdge	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public boolean addEdge(H hyperedge, Collection<? extends V> to_attach, $/;"	m	class:SetHypergraph
addEdge	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public boolean addEdge(E edge, Pair<? extends V> endpoints, EdgeType edgeType)$/;"	m	class:SparseGraph
addEdge	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public boolean addEdge(E edge, Pair<? extends V> endpoints, EdgeType edgeType) {$/;"	m	class:SparseMultigraph
addEdge	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public boolean addEdge(E edge, Pair<? extends V> endpoints, EdgeType edgeType)$/;"	m	class:UndirectedSparseGraph
addEdge	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public boolean addEdge(E edge, Pair<? extends V> endpoints, EdgeType edge_type) $/;"	m	class:UndirectedSparseMultigraph
addEdge	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public boolean addEdge(E edge, V v1, V v2, EdgeType edgeType) {$/;"	m	class:UndirectedSparseMultigraph
addEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean addEdge(E e, Collection<? extends V> vertices, $/;"	m	class:Graphs.UnmodifiableAbstractGraph
addEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean addEdge(E e, V v1, V v2) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
addEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean addEdge(E e, V v1, V v2, EdgeType edgeType) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
addEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean addEdge(E hyperedge, Collection<? extends V> vertices) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
addEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean addEdge(E e, Collection<? extends V> $/;"	m	class:Graphs.SynchronizedAbstractGraph
addEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean addEdge(E e, V v1, V v2) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
addEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean addEdge(E e, V v1, V v2, EdgeType edgeType) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
addEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean addEdge(E hyperedge, Collection<? extends V> vertices) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
addFromSubTree	src/edu/uci/ics/jung/graph/util/TreeUtils.java	/^	public static <V,E> void addFromSubTree(Forest<V,E> tree, Forest<V,E> subTree, $/;"	m	class:TreeUtils
addGraphEventListener	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^	public void addGraphEventListener(GraphEventListener<V,E> l) {$/;"	m	class:ObservableGraph
addOneCandidateCluster	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    protected void addOneCandidateCluster(LinkedList<Set<V>> candidates,$/;"	m	class:VoltageClusterer
addPredecessor	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    private void addPredecessor(V predecessor,V sucessor) {$/;"	m	class:BFSDistanceLabeler	file:
addSubTree	src/edu/uci/ics/jung/graph/util/TreeUtils.java	/^	public static <V,E> void addSubTree(Forest<V,E> tree, Forest<V,E> subTree, $/;"	m	class:TreeUtils
addTree	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public void addTree(Tree<V,E> tree) {$/;"	m	class:DelegateForest
addTwoCandidateClusters	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    protected void addTwoCandidateClusters(LinkedList<Set<V>> candidates,$/;"	m	class:VoltageClusterer
addVertex	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public boolean addVertex(V vertex) {$/;"	m	class:DelegateForest
addVertex	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public boolean addVertex(V vertex) {$/;"	m	class:DelegateTree
addVertex	src/edu/uci/ics/jung/graph/DirectedOrderedSparseMultigraph.java	/^    public boolean addVertex(V vertex) {$/;"	m	class:DirectedOrderedSparseMultigraph
addVertex	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public boolean addVertex(V vertex)$/;"	m	class:DirectedSparseGraph
addVertex	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public boolean addVertex(V vertex) {$/;"	m	class:DirectedSparseMultigraph
addVertex	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean addVertex(V vertex) {$/;"	m	class:GraphDecorator
addVertex	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    boolean addVertex(V vertex);$/;"	m	interface:Hypergraph
addVertex	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^  public boolean addVertex(V vertex) {$/;"	m	class:ObservableGraph
addVertex	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean addVertex(V vertex) $/;"	m	class:OrderedKAryTree
addVertex	src/edu/uci/ics/jung/graph/OrderedSparseMultigraph.java	/^    public boolean addVertex(V vertex) {$/;"	m	class:OrderedSparseMultigraph
addVertex	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public boolean addVertex(V vertex)$/;"	m	class:SetHypergraph
addVertex	src/edu/uci/ics/jung/graph/SortedSparseMultigraph.java	/^    public boolean addVertex(V vertex) {$/;"	m	class:SortedSparseMultigraph
addVertex	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public boolean addVertex(V vertex)$/;"	m	class:SparseGraph
addVertex	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public boolean addVertex(V vertex) {$/;"	m	class:SparseMultigraph
addVertex	src/edu/uci/ics/jung/graph/UndirectedOrderedSparseMultigraph.java	/^    public boolean addVertex(V vertex) {$/;"	m	class:UndirectedOrderedSparseMultigraph
addVertex	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public boolean addVertex(V vertex)$/;"	m	class:UndirectedSparseGraph
addVertex	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public boolean addVertex(V vertex) {$/;"	m	class:UndirectedSparseMultigraph
addVertex	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean addVertex(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
addVertex	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean addVertex(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
adjust	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private synchronized void adjust() {$/;"	m	class:ISOMLayout	file:
adjustForGravity	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private boolean adjustForGravity = true;$/;"	f	class:KKLayout	file:
adjustForGravity	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	public void adjustForGravity() {$/;"	m	class:KKLayout
adjustLocations	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	private void adjustLocations(Dimension oldSize, Dimension size) {$/;"	m	class:AbstractLayout	file:
adjustVertex	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private synchronized void adjustVertex(V v, Point2D tempXYD) {$/;"	m	class:ISOMLayout	file:
afterStep	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected void afterStep() {}$/;"	m	class:AbstractIterativeScorer
afterStep	src/edu/uci/ics/jung/algorithms/scoring/HITSWithPriors.java	/^    protected void afterStep()$/;"	m	class:HITSWithPriors
afterStep	src/edu/uci/ics/jung/algorithms/scoring/PageRankWithPriors.java	/^    protected void afterStep()$/;"	m	class:PageRankWithPriors
aggregateConstraint	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    public double aggregateConstraint(V v)$/;"	m	class:StructuralHoles
alpha	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorerWithPriors.java	/^    protected double alpha;$/;"	f	class:AbstractIterativeScorerWithPriors
alreadyDone	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    protected transient Set<V> alreadyDone = new HashSet<V>();$/;"	f	class:TreeLayout
angle	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^		private double angle;$/;"	f	class:CircleLayout.CircleVertexData	file:
assignDefaultEdgeTransitionWeights	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^	protected void assignDefaultEdgeTransitionWeights() {$/;"	m	class:AbstractRanker
assignToClusters	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    protected Map<double[], Map<T, double[]>> assignToClusters(Map<T, double[]> object_locations, Set<double[]> centroids)$/;"	m	class:KMeansClusterer
attraction_constant	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private double attraction_constant;$/;"	f	class:FRLayout	file:
attraction_constant	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private double attraction_constant;$/;"	f	class:FRLayout2	file:
attraction_multiplier	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private double attraction_multiplier = 0.75;$/;"	f	class:FRLayout	file:
attraction_multiplier	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private double attraction_multiplier = 0.75;$/;"	f	class:FRLayout2	file:
authority	src/edu/uci/ics/jung/algorithms/scoring/HITS.java	/^    	public double authority;$/;"	f	class:HITS.Scores
averageCounter	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^    protected int averageCounter;$/;"	f	class:SpringLayout2
averageDelta	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^    protected Point2D averageDelta = new Point2D.Double();$/;"	f	class:SpringLayout2
averageDistances	src/edu/uci/ics/jung/algorithms/shortestpath/DistanceStatistics.java	/^    public static <V,E> Transformer<V, Double> averageDistances(Hypergraph<V,E> g)$/;"	m	class:DistanceStatistics
averageDistances	src/edu/uci/ics/jung/algorithms/shortestpath/DistanceStatistics.java	/^    public static <V,E> Transformer<V,Double> averageDistances(Hypergraph<V,E> graph, Distance<V> d)$/;"	m	class:DistanceStatistics
averaging	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^    protected boolean averaging;$/;"	f	class:DistanceCentralityScorer
basePositions	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	protected Map<V,Integer> basePositions = new HashMap<V,Integer>();$/;"	f	class:TreeLayout
buildTree	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^    protected void buildTree() {$/;"	m	class:RadialTreeLayout
buildTree	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	protected void buildTree() {$/;"	m	class:TreeLayout
buildTree	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    protected void buildTree(V v, int x) {$/;"	m	class:TreeLayout
cached	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    protected boolean cached;$/;"	f	class:DijkstraDistance
calcAttraction	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    protected void calcAttraction(E e) {$/;"	m	class:FRLayout
calcAttraction	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    protected void calcAttraction(E e) {$/;"	m	class:FRLayout2
calcDeltaM	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private double calcDeltaM(int m) {$/;"	m	class:KKLayout	file:
calcDeltaXY	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private double[] calcDeltaXY(int m) {$/;"	m	class:KKLayout	file:
calcEnergy	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private double calcEnergy() {$/;"	m	class:KKLayout	file:
calcEnergyIfExchanged	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private double calcEnergyIfExchanged(int p, int q) {$/;"	m	class:KKLayout	file:
calcPositions	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    protected synchronized void calcPositions(V v) {$/;"	m	class:FRLayout
calcPositions	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    protected synchronized void calcPositions(V v) {$/;"	m	class:FRLayout2
calcRepulsion	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    protected void calcRepulsion(V v1) {$/;"	m	class:FRLayout
calcRepulsion	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    protected void calcRepulsion(V v1) {$/;"	m	class:FRLayout2
calculateDimensionX	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    private int calculateDimensionX(Collection<V> roots) {$/;"	m	class:TreeLayout	file:
calculateDimensionX	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    private int calculateDimensionX(V v) {$/;"	m	class:TreeLayout	file:
calculateRepulsion	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    protected void calculateRepulsion() {$/;"	m	class:SpringLayout
canPossiblyCompare	src/edu/uci/ics/jung/algorithms/blockmodel/StructurallyEquivalent.java	/^	protected boolean canPossiblyCompare(V v1, V v2) {$/;"	m	class:StructurallyEquivalent
cartesianToPolar	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	public static PolarPoint cartesianToPolar(Point2D point) {$/;"	m	class:PolarPoint
cartesianToPolar	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	public static PolarPoint cartesianToPolar(double x, double y) {$/;"	m	class:PolarPoint
checkLengths	src/edu/uci/ics/jung/algorithms/util/DiscreteDistribution.java	/^    protected static void checkLengths(double[] dist, double[] reference)$/;"	m	class:DiscreteDistribution
checked	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private boolean checked = false;$/;"	f	class:FRLayout2	file:
child_edges	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^	    List<E> child_edges;$/;"	f	class:OrderedKAryTree.VertexData
circleVertexDataMap	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^	Map<V, CircleVertexData> circleVertexDataMap =$/;"	f	class:CircleLayout
classes	src/edu/uci/ics/jung/algorithms/package.html	/^equivalence classes, $/;"	external variable declarations
clear	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public void clear() {$/;"	m	class:ConstantMap
clear	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^	public void clear()$/;"	m	class:MapBinaryHeap
clear	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public void clear() {$/;"	m	class:Pair
clearParentValues	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private void clearParentValues() {$/;"	m	class:EdmondsKarpMaxFlow	file:
cluster	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    public Collection<Set<V>> cluster(int num_clusters)$/;"	m	class:VoltageClusterer
cluster	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    public Collection<Map<T, double[]>> cluster(Map<T, double[]> object_locations, int num_clusters)$/;"	m	class:KMeansClusterer
cluster_internal	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    protected Collection<Set<V>> cluster_internal(V origin, int num_clusters)$/;"	m	class:VoltageClusterer
clusteringCoefficients	src/edu/uci/ics/jung/algorithms/metrics/Metrics.java	/^    public static <V,E> Map<V, Double> clusteringCoefficients(Graph<V,E> graph)$/;"	m	class:Metrics
clustering_exponent	src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java	/^    private double clustering_exponent;$/;"	f	class:KleinbergSmallWorldGenerator	file:
codeToType	src/edu/uci/ics/jung/algorithms/metrics/TriadicCensus.java	/^	protected static final int[] codeToType = { 1, 2, 2, 3, 2, 4, 6, 8, 2, 6, 5, 7, 3, 8,$/;"	f	class:TriadicCensus
col_count	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected int col_count;$/;"	f	class:Lattice2DGenerator
collapseVertexPartitions	src/edu/uci/ics/jung/algorithms/transformation/VertexPartitionCollapser.java	/^    public Graph<CV,CE> collapseVertexPartitions(VertexPartition<V,E> partitioning)$/;"	m	class:VertexPartitionCollapser
collectDisappearingPotential	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected void collectDisappearingPotential(V v) {}$/;"	m	class:AbstractIterativeScorer
collectDisappearingPotential	src/edu/uci/ics/jung/algorithms/scoring/HITSWithPriors.java	/^    protected void collectDisappearingPotential(V v)$/;"	m	class:HITSWithPriors
collectDisappearingPotential	src/edu/uci/ics/jung/algorithms/scoring/PageRankWithPriors.java	/^    protected void collectDisappearingPotential(V v)$/;"	m	class:PageRankWithPriors
comp	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    private Comparator<T> comp;$/;"	f	class:MapBinaryHeap	file:
compare	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^        public int compare(V o1, V o2)$/;"	m	class:VoltageClusterer.MapValueArrayComparator
compare	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^		public int compare(V v1, V v2) $/;"	m	class:BetweennessCentrality.BetweennessComparator
compare	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        public int compare(V o1, V o2)$/;"	m	class:DijkstraDistance.VertexComparator
compare	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^        public int compare(T arg0, T arg1)$/;"	m	class:MapBinaryHeap.ComparableComparator
compareTo	src/edu/uci/ics/jung/algorithms/importance/Ranking.java	/^    public int compareTo(Object o) {$/;"	m	class:Ranking
componentResized	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^        public void componentResized(ComponentEvent e) {$/;"	m	class:SpringLayout.SpringDimensionChecker
computeBetweenness	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^	protected void computeBetweenness(Graph<V,E> graph) {$/;"	m	class:BetweennessCentrality
computeBetweenness	src/edu/uci/ics/jung/algorithms/importance/RandomWalkBetweenness.java	/^    protected void computeBetweenness() {$/;"	m	class:RandomWalkBetweenness
computeBetweenness	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    protected void computeBetweenness() {$/;"	m	class:RandomWalkSTBetweenness
computeBetweenness	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^	protected void computeBetweenness(Queue<V> queue, $/;"	m	class:BetweennessCentrality
computeMeanFirstPassageMatrix	src/edu/uci/ics/jung/algorithms/matrix/GraphMatrixOperations.java	/^    public static <V,E> DoubleMatrix2D computeMeanFirstPassageMatrix(Graph<V,E> G,$/;"	m	class:GraphMatrixOperations
computeMinCut	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private void computeMinCut() {$/;"	m	class:EdmondsKarpMaxFlow	file:
computePathData	src/edu/uci/ics/jung/algorithms/matrix/MatrixElementOperations.java	/^    public Number computePathData(E e1, E e2);$/;"	m	interface:MatrixElementOperations
computePathData	src/edu/uci/ics/jung/algorithms/matrix/RealMatrixElementOperations.java	/^	public Number computePathData(E e1, E e2) $/;"	m	class:RealMatrixElementOperations
computeSTBetweenness	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    public double computeSTBetweenness(V ithVertex, V source, V target) {$/;"	m	class:RandomWalkSTBetweenness
computeShortestPathsFromSource	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^	private void computeShortestPathsFromSource(V source)$/;"	m	class:UnweightedShortestPath	file:
computeVoltagePotentialMatrix	src/edu/uci/ics/jung/algorithms/matrix/GraphMatrixOperations.java	/^    public static <V,E> DoubleMatrix2D computeVoltagePotentialMatrix($/;"	m	class:GraphMatrixOperations
computeWeightedPathsFromSource	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    protected void computeWeightedPathsFromSource(V root, int depth) {$/;"	m	class:WeightedNIPaths
constraint	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    public double constraint(V v) {$/;"	m	class:StructuralHoles
contains	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    public boolean contains(Object o)$/;"	m	class:MapBinaryHeap
contains	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public boolean contains(Object o) {$/;"	m	class:Pair
containsAll	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public boolean containsAll(Collection<?> c) {$/;"	m	class:Pair
containsEdge	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public boolean containsEdge(E edge)$/;"	m	class:DirectedSparseGraph
containsEdge	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public boolean containsEdge(E edge) {$/;"	m	class:DirectedSparseMultigraph
containsEdge	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean containsEdge(E edge) {$/;"	m	class:GraphDecorator
containsEdge	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    boolean containsEdge(E edge);$/;"	m	interface:Hypergraph
containsEdge	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean containsEdge(E edge) $/;"	m	class:OrderedKAryTree
containsEdge	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public boolean containsEdge(H edge) {$/;"	m	class:SetHypergraph
containsEdge	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public boolean containsEdge(E edge)$/;"	m	class:SparseGraph
containsEdge	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public boolean containsEdge(E edge) {$/;"	m	class:SparseMultigraph
containsEdge	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public boolean containsEdge(E edge)$/;"	m	class:UndirectedSparseGraph
containsEdge	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public boolean containsEdge(E edge) {$/;"	m	class:UndirectedSparseMultigraph
containsEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean containsEdge(E edge) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
containsEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean containsEdge(E edge) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
containsKey	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public boolean containsKey(Object key) {$/;"	m	class:ConstantMap
containsValue	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public boolean containsValue(Object value) {$/;"	m	class:ConstantMap
containsVertex	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public boolean containsVertex(V vertex)$/;"	m	class:DirectedSparseGraph
containsVertex	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public boolean containsVertex(V vertex) {$/;"	m	class:DirectedSparseMultigraph
containsVertex	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean containsVertex(V vertex) {$/;"	m	class:GraphDecorator
containsVertex	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    boolean containsVertex(V vertex);$/;"	m	interface:Hypergraph
containsVertex	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean containsVertex(V vertex) $/;"	m	class:OrderedKAryTree
containsVertex	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public boolean containsVertex(V vertex) {$/;"	m	class:SetHypergraph
containsVertex	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public boolean containsVertex(V vertex)$/;"	m	class:SparseGraph
containsVertex	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public boolean containsVertex(V vertex) {$/;"	m	class:SparseMultigraph
containsVertex	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public boolean containsVertex(V vertex)$/;"	m	class:UndirectedSparseGraph
containsVertex	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public boolean containsVertex(V vertex) {$/;"	m	class:UndirectedSparseMultigraph
containsVertex	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean containsVertex(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
containsVertex	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean containsVertex(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
convergence_threshold	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    protected double convergence_threshold;$/;"	f	class:KMeansClusterer
converse_depth	src/edu/uci/ics/jung/algorithms/cluster/BicomponentClusterer.java	/^    protected int converse_depth;$/;"	f	class:BicomponentClusterer
cool	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private void cool() {$/;"	m	class:FRLayout	file:
cool	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private void cool() {$/;"	m	class:FRLayout2	file:
coolingFactor	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private double coolingFactor;$/;"	f	class:ISOMLayout	file:
cosine	src/edu/uci/ics/jung/algorithms/util/DiscreteDistribution.java	/^    public static double cosine(double[] dist, double[] reference)$/;"	m	class:DiscreteDistribution
create	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    public Graph<V,E> create()$/;"	m	class:Lattice2DGenerator
create	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    public Graph<V, E> create() {$/;"	m	class:BarabasiAlbertGenerator
create	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^    public Graph<V,E> create() {$/;"	m	class:EppsteinPowerLawGenerator
create	src/edu/uci/ics/jung/algorithms/generators/random/ErdosRenyiGenerator.java	/^	public Graph<V,E> create() {$/;"	m	class:ErdosRenyiGenerator
create	src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java	/^    public Graph<V,E> create() $/;"	m	class:KleinbergSmallWorldGenerator
create	src/edu/uci/ics/jung/algorithms/util/Indexer.java	/^	public static <T> BidiMap<T,Integer> create(Collection<T> collection) {$/;"	m	class:Indexer
create	src/edu/uci/ics/jung/algorithms/util/Indexer.java	/^	public static <T> BidiMap<T,Integer> create(Collection<T> collection, int start) {$/;"	m	class:Indexer
createAllInducedSubgraphs	src/edu/uci/ics/jung/algorithms/filters/FilterUtils.java	/^		createAllInducedSubgraphs(Collection<? extends Collection<V>> $/;"	m	class:FilterUtils
createChainPlusIsolates	src/edu/uci/ics/jung/graph/util/TestGraphs.java	/^    public static Graph<String,Number> createChainPlusIsolates(int chain_length, int isolate_count)$/;"	m	class:TestGraphs
createDirectedAcyclicGraph	src/edu/uci/ics/jung/graph/util/TestGraphs.java	/^	public static Graph<String,Number> createDirectedAcyclicGraph($/;"	m	class:TestGraphs
createEdge	src/edu/uci/ics/jung/graph/util/TestGraphs.java	/^	private static void createEdge($/;"	m	class:TestGraphs	file:
createInducedSubgraph	src/edu/uci/ics/jung/algorithms/filters/FilterUtils.java	/^	public static <V,E,G extends Hypergraph<V,E>> G createInducedSubgraph(Collection<V> $/;"	m	class:FilterUtils
createRandomEdge	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    private void createRandomEdge(Collection<V> preexistingNodes,$/;"	m	class:BarabasiAlbertGenerator	file:
createRecord	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        protected void createRecord(V w, E e, double new_dist)$/;"	m	class:DijkstraDistance.SourceData
createRecord	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^        public void createRecord(V w, E e, double new_dist)$/;"	m	class:DijkstraShortestPath.SourcePathData
createTestGraph	src/edu/uci/ics/jung/graph/util/TestGraphs.java	/^	public static Graph<String, Number> createTestGraph(boolean directed) {$/;"	m	class:TestGraphs
createVertexDegreeDiagonalMatrix	src/edu/uci/ics/jung/algorithms/matrix/GraphMatrixOperations.java	/^    public static <V,E> SparseDoubleMatrix2D createVertexDegreeDiagonalMatrix(Graph<V,E> graph)$/;"	m	class:GraphMatrixOperations
cumulative	src/edu/uci/ics/jung/algorithms/scoring/KStepMarkov.java	/^	private boolean cumulative;$/;"	f	class:KStepMarkov	file:
currentIteration	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private int currentIteration;$/;"	f	class:FRLayout	file:
currentIteration	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private int currentIteration;$/;"	f	class:FRLayout2	file:
currentIteration	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private int currentIteration;$/;"	f	class:KKLayout	file:
currentIteration	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^    protected int currentIteration;$/;"	f	class:SpringLayout2
current_values	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    private Map<V, T> current_values;$/;"	f	class:AbstractIterativeScorer	file:
d	src/edu/uci/ics/jung/algorithms/layout/util/RandomLocationTransformer.java	/^	Dimension d;$/;"	f	class:RandomLocationTransformer
degree	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public int degree(V vertex)$/;"	m	class:AbstractGraph
degree	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public int degree(V vertex) {$/;"	m	class:GraphDecorator
degree	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    int degree(V vertex);$/;"	m	interface:Hypergraph
degree	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public int degree(V vertex)$/;"	m	class:SetHypergraph
degree	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public int degree(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
degree	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized int degree(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
delegate	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	protected Layout<V,E> delegate;$/;"	f	class:AggregateLayout
delegate	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    protected Layout<V, E> delegate;$/;"	f	class:LayoutDecorator
delegate	src/edu/uci/ics/jung/algorithms/scoring/util/DelegateToEdgeTransformer.java	/^    protected Transformer<E,? extends Number> delegate;$/;"	f	class:DelegateToEdgeTransformer
delegate	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	private Map<K,V> delegate;$/;"	f	class:ConstantMap	file:
delegate	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	protected Graph<V,E> delegate;$/;"	f	class:GraphDecorator
delegate	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		protected Graph<V,E> delegate;$/;"	f	class:Graphs.SynchronizedAbstractGraph
delegate	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		protected Graph<V,E> delegate;$/;"	f	class:Graphs.UnmodifiableAbstractGraph
dependency	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^        double dependency;$/;"	f	class:BetweennessCentrality.BetweennessData
dependency	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^        double dependency;$/;"	f	class:BetweennessCentrality.BetweennessData
depth	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^		int depth;$/;"	f	class:OrderedKAryTree.VertexData
desiredPrecision	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    private double desiredPrecision = Double.MIN_VALUE;$/;"	f	class:IterativeProcess	file:
dfs_num	src/edu/uci/ics/jung/algorithms/cluster/BicomponentClusterer.java	/^    protected Map<V,Number> dfs_num;$/;"	f	class:BicomponentClusterer
diameter	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	protected double diameter;$/;"	f	class:KKLayout
diameter	src/edu/uci/ics/jung/algorithms/shortestpath/DistanceStatistics.java	/^    public static <V, E> double diameter(Hypergraph<V,E> g)$/;"	m	class:DistanceStatistics
diameter	src/edu/uci/ics/jung/algorithms/shortestpath/DistanceStatistics.java	/^    public static <V, E> double diameter(Hypergraph<V,E> g, Distance<V> d)$/;"	m	class:DistanceStatistics
diameter	src/edu/uci/ics/jung/algorithms/shortestpath/DistanceStatistics.java	/^    public static <V, E> double diameter(Hypergraph<V,E> g, Distance<V> d, boolean use_max)$/;"	m	class:DistanceStatistics
directedEdges	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    protected Set<E> directedEdges;$/;"	f	class:SparseMultigraph
directed_edges	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    protected Map<E, Pair<V>> directed_edges;    \/\/ Map of directed edges to incident vertex sets$/;"	f	class:SparseGraph
disappearing_potential	src/edu/uci/ics/jung/algorithms/scoring/HITSWithPriors.java	/^    protected HITS.Scores disappearing_potential;$/;"	f	class:HITSWithPriors
disappearing_potential	src/edu/uci/ics/jung/algorithms/scoring/PageRankWithPriors.java	/^    protected double disappearing_potential = 0.0;$/;"	f	class:PageRankWithPriors
disconnected_multiplier	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^    private double disconnected_multiplier = 0.5;$/;"	f	class:KKLayout	file:
distX	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    protected int distX = 50;$/;"	f	class:TreeLayout
distY	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    protected int distY = 50;$/;"	f	class:TreeLayout
dist_reached	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        protected double dist_reached = 0;$/;"	f	class:DijkstraDistance.SourceData
distance	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^        double distance;$/;"	f	class:BetweennessCentrality.BetweennessData
distance	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^		int distance;$/;"	f	class:ISOMLayout.ISOMVertexData
distance	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^    protected Distance<V> distance;$/;"	f	class:KKLayout
distance	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^        double distance;$/;"	f	class:BetweennessCentrality.BetweennessData
distance	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^    protected Distance<V> distance;$/;"	f	class:DistanceCentralityScorer
distanceDecorator	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    private Map<V, Number> distanceDecorator = new HashMap<V,Number>();$/;"	f	class:BFSDistanceLabeler	file:
distances	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        private Map<V,Number> distances;$/;"	f	class:DijkstraDistance.VertexComparator	file:
distances	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        protected LinkedHashMap<V,Number> distances;$/;"	f	class:DijkstraDistance.SourceData
distances	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^    private Map<V, Number> distances = new HashMap<V,Number>();$/;"	f	class:UnweightedShortestPath	file:
dm	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private double[][] dm;     \/\/ distance matrix$/;"	f	class:KKLayout	file:
doInit	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private void doInit() {$/;"	m	class:FRLayout	file:
doInit	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private void doInit() {$/;"	m	class:FRLayout2	file:
done	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public boolean done() {$/;"	m	class:AggregateLayout
done	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	public boolean done() {$/;"	m	class:DAGLayout
done	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    public boolean done() {$/;"	m	class:FRLayout
done	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    public boolean done() {$/;"	m	class:FRLayout2
done	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	public boolean done() {$/;"	m	class:ISOMLayout
done	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	public boolean done() {$/;"	m	class:KKLayout
done	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public boolean done() {$/;"	m	class:LayoutDecorator
done	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public boolean done() {$/;"	m	class:SpringLayout
done	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^    protected boolean done;$/;"	f	class:SpringLayout2
done	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^    public boolean done() {$/;"	m	class:SpringLayout2
done	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public boolean done()$/;"	m	class:AbstractIterativeScorer
done	src/edu/uci/ics/jung/algorithms/util/IterativeContext.java	/^	boolean done();$/;"	m	interface:IterativeContext
done	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    public boolean done() {$/;"	m	class:IterativeProcess
dontmove	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	private Set<V> dontmove = new HashSet<V>();$/;"	f	class:AbstractLayout	file:
dx	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^        protected double dx;$/;"	f	class:SpringLayout.SpringVertexData
dy	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^        protected double dy;$/;"	f	class:SpringLayout.SpringVertexData
e	src/edu/uci/ics/jung/algorithms/scoring/util/VEPair.java	/^    private E e;$/;"	f	class:VEPair	file:
edge	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^		protected E edge;$/;"	f	class:GraphEvent.Edge
edgeCapacityTransformer	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private Transformer<E,Number> edgeCapacityTransformer;$/;"	f	class:EdmondsKarpMaxFlow	file:
edgeData	src/edu/uci/ics/jung/algorithms/matrix/RealMatrixElementOperations.java	/^    private Map<E,Number> edgeData = new HashMap<E,Number>();$/;"	f	class:RealMatrixElementOperations	file:
edgeFactory	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private Factory<E> edgeFactory;$/;"	f	class:EdmondsKarpMaxFlow	file:
edgeFactory	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    protected Factory<E> edgeFactory;$/;"	f	class:BarabasiAlbertGenerator
edgeFactory	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^    private Factory<E> edgeFactory;$/;"	f	class:EppsteinPowerLawGenerator	file:
edgeFactory	src/edu/uci/ics/jung/algorithms/generators/random/ErdosRenyiGenerator.java	/^    Factory<E> edgeFactory;$/;"	f	class:ErdosRenyiGenerator
edgeFactory	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    private Factory<E> edgeFactory;$/;"	f	class:WeightedNIPaths	file:
edgeFlowMap	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private Map<E,Number> edgeFlowMap;$/;"	f	class:EdmondsKarpMaxFlow	file:
edgeRankScores	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected Map<Object,Map<E, Number>> edgeRankScores = $/;"	f	class:AbstractRanker
edgeType	src/edu/uci/ics/jung/algorithms/filters/KNeighborhoodFilter.java	/^	private EdgeType edgeType;$/;"	f	class:KNeighborhoodFilter	file:
edgeWeights	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    private Map<E,Number> edgeWeights = new HashMap<E,Number>();$/;"	f	class:AbstractRanker	file:
edge_comparator	src/edu/uci/ics/jung/graph/SortedSparseMultigraph.java	/^    protected Comparator<E> edge_comparator;$/;"	f	class:SortedSparseMultigraph
edge_factory	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected Factory<E> edge_factory;$/;"	f	class:Lattice2DGenerator
edge_factory	src/edu/uci/ics/jung/algorithms/transformation/VertexPartitionCollapser.java	/^    protected Factory<CE> edge_factory;$/;"	f	class:VertexPartitionCollapser
edge_index	src/edu/uci/ics/jung/graph/util/DefaultParallelEdgeIndexFunction.java	/^    protected Map<Context<Graph<V,E>,E>, Integer> edge_index = new HashMap<Context<Graph<V,E>,E>, Integer>();$/;"	f	class:DefaultParallelEdgeIndexFunction
edge_index	src/edu/uci/ics/jung/graph/util/IncidentEdgeIndexFunction.java	/^    protected Map<E, Integer> edge_index = new HashMap<E, Integer>();$/;"	f	class:IncidentEdgeIndexFunction
edge_pred	src/edu/uci/ics/jung/algorithms/filters/EdgePredicateFilter.java	/^    protected Predicate<E> edge_pred;$/;"	f	class:EdgePredicateFilter
edge_scores	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^	protected Map<E, Double> edge_scores;$/;"	f	class:BetweennessCentrality
edge_type	src/edu/uci/ics/jung/graph/AbstractTypedGraph.java	/^	protected final EdgeType edge_type;$/;"	f	class:AbstractTypedGraph
edge_vpairs	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    protected Map<E, Pair<V>> edge_vpairs;$/;"	f	class:OrderedKAryTree
edge_weight	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    protected Transformer<E, ? extends Number> edge_weight;$/;"	f	class:StructuralHoles
edge_weights	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected Transformer<VEPair<V,E>, ? extends Number> edge_weights;$/;"	f	class:AbstractIterativeScorer
edgedx	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^        protected double edgedx;$/;"	f	class:SpringLayout.SpringVertexData
edgedy	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^        protected double edgedy;$/;"	f	class:SpringLayout.SpringVertexData
edges	src/edu/uci/ics/jung/algorithms/transformation/package.html	/^edges have been converted to directed edges, or vice versa$/;"	external variable declarations
edges	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    protected Map<E, Pair<V>> edges;            \/\/ Map of edges to incident vertex pairs$/;"	f	class:DirectedSparseGraph
edges	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    protected Map<E, Pair<V>> edges;            \/\/ Map of edges to incident vertex pairs$/;"	f	class:DirectedSparseMultigraph
edges	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    protected Map<H, Set<V>> edges;    \/\/ Map of hyperedges to incident vertex sets$/;"	f	class:SetHypergraph
edges	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    protected Map<E, Pair<V>> edges;            \/\/ Map of edges to incident vertex pairs$/;"	f	class:SparseMultigraph
edges	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    protected Map<E, Pair<V>> edges;    \/\/ Map of edges to incident vertex sets$/;"	f	class:UndirectedSparseGraph
edges	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    protected Map<E, Pair<V>> edges;    \/\/ Map of edges to incident vertex sets$/;"	f	class:UndirectedSparseMultigraph
edges_removed	src/edu/uci/ics/jung/algorithms/cluster/EdgeBetweennessClusterer.java	/^    private Map<E, Pair<V>> edges_removed;$/;"	f	class:EdgeBetweennessClusterer	file:
edu.uci.ics.jung.algorithms.blockmodel	src/edu/uci/ics/jung/algorithms/blockmodel/StructurallyEquivalent.java	/^package edu.uci.ics.jung.algorithms.blockmodel;$/;"	p
edu.uci.ics.jung.algorithms.blockmodel	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^package edu.uci.ics.jung.algorithms.blockmodel;$/;"	p
edu.uci.ics.jung.algorithms.cluster	src/edu/uci/ics/jung/algorithms/cluster/BicomponentClusterer.java	/^package edu.uci.ics.jung.algorithms.cluster;$/;"	p
edu.uci.ics.jung.algorithms.cluster	src/edu/uci/ics/jung/algorithms/cluster/EdgeBetweennessClusterer.java	/^package edu.uci.ics.jung.algorithms.cluster;$/;"	p
edu.uci.ics.jung.algorithms.cluster	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^package edu.uci.ics.jung.algorithms.cluster;$/;"	p
edu.uci.ics.jung.algorithms.cluster	src/edu/uci/ics/jung/algorithms/cluster/WeakComponentClusterer.java	/^package edu.uci.ics.jung.algorithms.cluster;$/;"	p
edu.uci.ics.jung.algorithms.filters	src/edu/uci/ics/jung/algorithms/filters/EdgePredicateFilter.java	/^package edu.uci.ics.jung.algorithms.filters;$/;"	p
edu.uci.ics.jung.algorithms.filters	src/edu/uci/ics/jung/algorithms/filters/Filter.java	/^package edu.uci.ics.jung.algorithms.filters;$/;"	p
edu.uci.ics.jung.algorithms.filters	src/edu/uci/ics/jung/algorithms/filters/FilterUtils.java	/^package edu.uci.ics.jung.algorithms.filters;$/;"	p
edu.uci.ics.jung.algorithms.filters	src/edu/uci/ics/jung/algorithms/filters/KNeighborhoodFilter.java	/^package edu.uci.ics.jung.algorithms.filters;$/;"	p
edu.uci.ics.jung.algorithms.filters	src/edu/uci/ics/jung/algorithms/filters/VertexPredicateFilter.java	/^package edu.uci.ics.jung.algorithms.filters;$/;"	p
edu.uci.ics.jung.algorithms.flows	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^package edu.uci.ics.jung.algorithms.flows;$/;"	p
edu.uci.ics.jung.algorithms.generators	src/edu/uci/ics/jung/algorithms/generators/EvolvingGraphGenerator.java	/^package edu.uci.ics.jung.algorithms.generators;$/;"	p
edu.uci.ics.jung.algorithms.generators	src/edu/uci/ics/jung/algorithms/generators/GraphGenerator.java	/^package edu.uci.ics.jung.algorithms.generators;$/;"	p
edu.uci.ics.jung.algorithms.generators	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^package edu.uci.ics.jung.algorithms.generators;$/;"	p
edu.uci.ics.jung.algorithms.generators.random	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^package edu.uci.ics.jung.algorithms.generators.random;$/;"	p
edu.uci.ics.jung.algorithms.generators.random	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^package edu.uci.ics.jung.algorithms.generators.random;$/;"	p
edu.uci.ics.jung.algorithms.generators.random	src/edu/uci/ics/jung/algorithms/generators/random/ErdosRenyiGenerator.java	/^package edu.uci.ics.jung.algorithms.generators.random;$/;"	p
edu.uci.ics.jung.algorithms.generators.random	src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java	/^package edu.uci.ics.jung.algorithms.generators.random;$/;"	p
edu.uci.ics.jung.algorithms.generators.random	src/edu/uci/ics/jung/algorithms/generators/random/MixedRandomGraphGenerator.java	/^package edu.uci.ics.jung.algorithms.generators.random;$/;"	p
edu.uci.ics.jung.algorithms.importance	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^package edu.uci.ics.jung.algorithms.importance;$/;"	p
edu.uci.ics.jung.algorithms.importance	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^package edu.uci.ics.jung.algorithms.importance;$/;"	p
edu.uci.ics.jung.algorithms.importance	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^package edu.uci.ics.jung.algorithms.importance;$/;"	p
edu.uci.ics.jung.algorithms.importance	src/edu/uci/ics/jung/algorithms/importance/MarkovCentrality.java	/^package edu.uci.ics.jung.algorithms.importance;$/;"	p
edu.uci.ics.jung.algorithms.importance	src/edu/uci/ics/jung/algorithms/importance/RandomWalkBetweenness.java	/^package edu.uci.ics.jung.algorithms.importance;$/;"	p
edu.uci.ics.jung.algorithms.importance	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^package edu.uci.ics.jung.algorithms.importance;$/;"	p
edu.uci.ics.jung.algorithms.importance	src/edu/uci/ics/jung/algorithms/importance/Ranking.java	/^package edu.uci.ics.jung.algorithms.importance;$/;"	p
edu.uci.ics.jung.algorithms.importance	src/edu/uci/ics/jung/algorithms/importance/RelativeAuthorityRanker.java	/^package edu.uci.ics.jung.algorithms.importance;$/;"	p
edu.uci.ics.jung.algorithms.importance	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^package edu.uci.ics.jung.algorithms.importance;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/GraphElementAccessor.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/Layout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/RadiusGraphElementAccessor.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/StaticLayout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^package edu.uci.ics.jung.algorithms.layout;$/;"	p
edu.uci.ics.jung.algorithms.layout.util	src/edu/uci/ics/jung/algorithms/layout/util/RandomLocationTransformer.java	/^package edu.uci.ics.jung.algorithms.layout.util;$/;"	p
edu.uci.ics.jung.algorithms.layout.util	src/edu/uci/ics/jung/algorithms/layout/util/Relaxer.java	/^package edu.uci.ics.jung.algorithms.layout.util;$/;"	p
edu.uci.ics.jung.algorithms.layout.util	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^package edu.uci.ics.jung.algorithms.layout.util;$/;"	p
edu.uci.ics.jung.algorithms.matrix	src/edu/uci/ics/jung/algorithms/matrix/GraphMatrixOperations.java	/^package edu.uci.ics.jung.algorithms.matrix;$/;"	p
edu.uci.ics.jung.algorithms.matrix	src/edu/uci/ics/jung/algorithms/matrix/MatrixElementOperations.java	/^package edu.uci.ics.jung.algorithms.matrix;$/;"	p
edu.uci.ics.jung.algorithms.matrix	src/edu/uci/ics/jung/algorithms/matrix/RealMatrixElementOperations.java	/^package edu.uci.ics.jung.algorithms.matrix;$/;"	p
edu.uci.ics.jung.algorithms.metrics	src/edu/uci/ics/jung/algorithms/metrics/Metrics.java	/^package edu.uci.ics.jung.algorithms.metrics;$/;"	p
edu.uci.ics.jung.algorithms.metrics	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^package edu.uci.ics.jung.algorithms.metrics;$/;"	p
edu.uci.ics.jung.algorithms.metrics	src/edu/uci/ics/jung/algorithms/metrics/TriadicCensus.java	/^package edu.uci.ics.jung.algorithms.metrics;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorerWithPriors.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/BarycenterScorer.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/ClosenessCentrality.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/DegreeScorer.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/EdgeScorer.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/EigenvectorCentrality.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/HITS.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/HITSWithPriors.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/KStepMarkov.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/PageRank.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/PageRankWithPriors.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/VertexScorer.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring	src/edu/uci/ics/jung/algorithms/scoring/VoltageScorer.java	/^package edu.uci.ics.jung.algorithms.scoring;$/;"	p
edu.uci.ics.jung.algorithms.scoring.util	src/edu/uci/ics/jung/algorithms/scoring/util/DelegateToEdgeTransformer.java	/^package edu.uci.ics.jung.algorithms.scoring.util;$/;"	p
edu.uci.ics.jung.algorithms.scoring.util	src/edu/uci/ics/jung/algorithms/scoring/util/ScoringUtils.java	/^package edu.uci.ics.jung.algorithms.scoring.util;$/;"	p
edu.uci.ics.jung.algorithms.scoring.util	src/edu/uci/ics/jung/algorithms/scoring/util/UniformDegreeWeight.java	/^package edu.uci.ics.jung.algorithms.scoring.util;$/;"	p
edu.uci.ics.jung.algorithms.scoring.util	src/edu/uci/ics/jung/algorithms/scoring/util/UniformInOut.java	/^package edu.uci.ics.jung.algorithms.scoring.util;$/;"	p
edu.uci.ics.jung.algorithms.scoring.util	src/edu/uci/ics/jung/algorithms/scoring/util/VEPair.java	/^package edu.uci.ics.jung.algorithms.scoring.util;$/;"	p
edu.uci.ics.jung.algorithms.scoring.util	src/edu/uci/ics/jung/algorithms/scoring/util/VertexScoreTransformer.java	/^package edu.uci.ics.jung.algorithms.scoring.util;$/;"	p
edu.uci.ics.jung.algorithms.shortestpath	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^package edu.uci.ics.jung.algorithms.shortestpath;$/;"	p
edu.uci.ics.jung.algorithms.shortestpath	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^package edu.uci.ics.jung.algorithms.shortestpath;$/;"	p
edu.uci.ics.jung.algorithms.shortestpath	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^package edu.uci.ics.jung.algorithms.shortestpath;$/;"	p
edu.uci.ics.jung.algorithms.shortestpath	src/edu/uci/ics/jung/algorithms/shortestpath/Distance.java	/^package edu.uci.ics.jung.algorithms.shortestpath;$/;"	p
edu.uci.ics.jung.algorithms.shortestpath	src/edu/uci/ics/jung/algorithms/shortestpath/DistanceStatistics.java	/^package edu.uci.ics.jung.algorithms.shortestpath;$/;"	p
edu.uci.ics.jung.algorithms.shortestpath	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest.java	/^package edu.uci.ics.jung.algorithms.shortestpath;$/;"	p
edu.uci.ics.jung.algorithms.shortestpath	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest2.java	/^package edu.uci.ics.jung.algorithms.shortestpath;$/;"	p
edu.uci.ics.jung.algorithms.shortestpath	src/edu/uci/ics/jung/algorithms/shortestpath/PrimMinimumSpanningTree.java	/^package edu.uci.ics.jung.algorithms.shortestpath;$/;"	p
edu.uci.ics.jung.algorithms.shortestpath	src/edu/uci/ics/jung/algorithms/shortestpath/ShortestPath.java	/^package edu.uci.ics.jung.algorithms.shortestpath;$/;"	p
edu.uci.ics.jung.algorithms.shortestpath	src/edu/uci/ics/jung/algorithms/shortestpath/ShortestPathUtils.java	/^package edu.uci.ics.jung.algorithms.shortestpath;$/;"	p
edu.uci.ics.jung.algorithms.shortestpath	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^package edu.uci.ics.jung.algorithms.shortestpath;$/;"	p
edu.uci.ics.jung.algorithms.transformation	src/edu/uci/ics/jung/algorithms/transformation/DirectionTransformer.java	/^package edu.uci.ics.jung.algorithms.transformation;$/;"	p
edu.uci.ics.jung.algorithms.transformation	src/edu/uci/ics/jung/algorithms/transformation/FoldingTransformer.java	/^package edu.uci.ics.jung.algorithms.transformation;$/;"	p
edu.uci.ics.jung.algorithms.transformation	src/edu/uci/ics/jung/algorithms/transformation/VertexPartitionCollapser.java	/^package edu.uci.ics.jung.algorithms.transformation;$/;"	p
edu.uci.ics.jung.algorithms.util	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^package edu.uci.ics.jung.algorithms.util;$/;"	p
edu.uci.ics.jung.algorithms.util	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^package edu.uci.ics.jung.algorithms.util;$/;"	p
edu.uci.ics.jung.algorithms.util	src/edu/uci/ics/jung/algorithms/util/DiscreteDistribution.java	/^package edu.uci.ics.jung.algorithms.util;$/;"	p
edu.uci.ics.jung.algorithms.util	src/edu/uci/ics/jung/algorithms/util/Indexer.java	/^package edu.uci.ics.jung.algorithms.util;$/;"	p
edu.uci.ics.jung.algorithms.util	src/edu/uci/ics/jung/algorithms/util/IterativeContext.java	/^package edu.uci.ics.jung.algorithms.util;$/;"	p
edu.uci.ics.jung.algorithms.util	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^package edu.uci.ics.jung.algorithms.util;$/;"	p
edu.uci.ics.jung.algorithms.util	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^package edu.uci.ics.jung.algorithms.util;$/;"	p
edu.uci.ics.jung.algorithms.util	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^package edu.uci.ics.jung.algorithms.util;$/;"	p
edu.uci.ics.jung.algorithms.util	src/edu/uci/ics/jung/algorithms/util/MapSettableTransformer.java	/^package edu.uci.ics.jung.algorithms.util;$/;"	p
edu.uci.ics.jung.algorithms.util	src/edu/uci/ics/jung/algorithms/util/SelfLoopEdgePredicate.java	/^package edu.uci.ics.jung.algorithms.util;$/;"	p
edu.uci.ics.jung.algorithms.util	src/edu/uci/ics/jung/algorithms/util/SettableTransformer.java	/^package edu.uci.ics.jung.algorithms.util;$/;"	p
edu.uci.ics.jung.algorithms.util	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^package edu.uci.ics.jung.algorithms.util;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/AbstractTypedGraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/DelegateForest.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/DelegateTree.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/DirectedGraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/DirectedOrderedSparseMultigraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/Forest.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/Graph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/Hypergraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/KPartiteGraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/MultiGraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/OrderedSparseMultigraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/SortedSparseMultigraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/SparseGraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/Tree.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/UndirectedGraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/UndirectedOrderedSparseMultigraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^package edu.uci.ics.jung.graph;$/;"	p
edu.uci.ics.jung.graph.event	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^package edu.uci.ics.jung.graph.event;$/;"	p
edu.uci.ics.jung.graph.event	src/edu/uci/ics/jung/graph/event/GraphEventListener.java	/^package edu.uci.ics.jung.graph.event;$/;"	p
edu.uci.ics.jung.graph.util	src/edu/uci/ics/jung/graph/util/Context.java	/^package edu.uci.ics.jung.graph.util;$/;"	p
edu.uci.ics.jung.graph.util	src/edu/uci/ics/jung/graph/util/DefaultParallelEdgeIndexFunction.java	/^package edu.uci.ics.jung.graph.util;$/;"	p
edu.uci.ics.jung.graph.util	src/edu/uci/ics/jung/graph/util/EdgeIndexFunction.java	/^package edu.uci.ics.jung.graph.util;$/;"	p
edu.uci.ics.jung.graph.util	src/edu/uci/ics/jung/graph/util/EdgeType.java	/^package edu.uci.ics.jung.graph.util;$/;"	p
edu.uci.ics.jung.graph.util	src/edu/uci/ics/jung/graph/util/Graphs.java	/^package edu.uci.ics.jung.graph.util;$/;"	p
edu.uci.ics.jung.graph.util	src/edu/uci/ics/jung/graph/util/IncidentEdgeIndexFunction.java	/^package edu.uci.ics.jung.graph.util;$/;"	p
edu.uci.ics.jung.graph.util	src/edu/uci/ics/jung/graph/util/Pair.java	/^package edu.uci.ics.jung.graph.util;$/;"	p
edu.uci.ics.jung.graph.util	src/edu/uci/ics/jung/graph/util/TestGraphs.java	/^package edu.uci.ics.jung.graph.util;$/;"	p
edu.uci.ics.jung.graph.util	src/edu/uci/ics/jung/graph/util/TreeUtils.java	/^package edu.uci.ics.jung.graph.util;$/;"	p
effectiveSize	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    public double effectiveSize(V v)$/;"	m	class:StructuralHoles
efficiency	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    public double efficiency(V v) {$/;"	m	class:StructuralHoles
element	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^	public T element() throws NoSuchElementException $/;"	m	class:MapBinaryHeap
element	src/edu/uci/ics/jung/graph/util/Context.java	/^	public E element;$/;"	f	class:Context
elementAccessor	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^    protected GraphElementAccessor<V,E> elementAccessor =$/;"	f	class:ISOMLayout
elements	src/edu/uci/ics/jung/algorithms/package.html	/^<li\/><b>layout<\/b>: arrangement of graph elements, generally for visualization$/;"	external variable declarations
enableCaching	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public void enableCaching(boolean enable)$/;"	m	class:DijkstraDistance
enqueueItem	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^	private void enqueueItem(T key, double value, double threshold, $/;"	m	class:WeightedChoice	file:
entropy	src/edu/uci/ics/jung/algorithms/util/DiscreteDistribution.java	/^    public static double entropy(double[] dist)$/;"	m	class:DiscreteDistribution
entrySet	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public Set<Entry<K, V>> entrySet() {$/;"	m	class:ConstantMap
epoch	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private int epoch;$/;"	f	class:ISOMLayout	file:
equals	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^    public boolean equals(Object o) {$/;"	m	class:BasicMapEntry
equals	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public boolean equals(Object o) {$/;"	m	class:ConstantMap
equals	src/edu/uci/ics/jung/graph/util/Context.java	/^    public boolean equals(Object o) {$/;"	m	class:Context
equals	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public boolean equals( Object o ) {$/;"	m	class:Pair
estimatedDistances	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        protected Map<V,Number> estimatedDistances;$/;"	f	class:DijkstraDistance.SourceData
evaluate	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public void evaluate()$/;"	m	class:AbstractIterativeScorer
evaluate	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    public void evaluate() {$/;"	m	class:IterativeProcess
evaluate	src/edu/uci/ics/jung/algorithms/util/SelfLoopEdgePredicate.java	/^    public boolean evaluate(Context<Graph<V,E>,E> context) {$/;"	m	class:SelfLoopEdgePredicate
evaluateIteration	src/edu/uci/ics/jung/algorithms/importance/RandomWalkBetweenness.java	/^    protected double evaluateIteration() {$/;"	m	class:RandomWalkBetweenness
evolveGraph	src/edu/uci/ics/jung/algorithms/generators/EvolvingGraphGenerator.java	/^    void evolveGraph(int numSteps);$/;"	m	interface:EvolvingGraphGenerator
evolveGraph	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    private void evolveGraph() {$/;"	m	class:BarabasiAlbertGenerator	file:
evolveGraph	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    public void evolveGraph(int numTimeSteps) {$/;"	m	class:BarabasiAlbertGenerator
exchangeVertices	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private boolean exchangeVertices = true;$/;"	f	class:KKLayout	file:
f1_d1	src/edu/uci/ics/jung/graph/MultiGraph.java	/^  void f1_d1();$/;"	m	interface:MultiGraph
filters	src/edu/uci/ics/jung/algorithms/filters/package.html	/^<li\/><code>Filter<\/code>: an interface for graph filters$/;"	i
finalizeIterations	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    protected void finalizeIterations() {$/;"	m	class:EdmondsKarpMaxFlow
finalizeIterations	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void finalizeIterations() {$/;"	m	class:AbstractRanker
finalizeIterations	src/edu/uci/ics/jung/algorithms/importance/RelativeAuthorityRanker.java	/^    protected void finalizeIterations() {$/;"	m	class:RelativeAuthorityRanker
finalizeIterations	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    protected void finalizeIterations() {$/;"	m	class:IterativeProcess
findBiconnectedComponents	src/edu/uci/ics/jung/algorithms/cluster/BicomponentClusterer.java	/^    protected void findBiconnectedComponents(UndirectedGraph<V,E> g, V v, Set<Set<V>> bicomponents)$/;"	m	class:BicomponentClusterer
findEdge	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public E findEdge(V v1, V v2)$/;"	m	class:AbstractGraph
findEdge	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public E findEdge(V v1, V v2)$/;"	m	class:DirectedSparseGraph
findEdge	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public E findEdge(V v1, V v2) {$/;"	m	class:DirectedSparseMultigraph
findEdge	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public E findEdge(V v1, V v2) {$/;"	m	class:GraphDecorator
findEdge	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    E findEdge(V v1, V v2);$/;"	m	interface:Hypergraph
findEdge	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public E findEdge(V v1, V v2) $/;"	m	class:OrderedKAryTree
findEdge	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public H findEdge(V v1, V v2)$/;"	m	class:SetHypergraph
findEdge	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public E findEdge(V v1, V v2)$/;"	m	class:SparseGraph
findEdge	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public E findEdge(V v1, V v2)$/;"	m	class:SparseMultigraph
findEdge	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public E findEdge(V v1, V v2)$/;"	m	class:UndirectedSparseGraph
findEdge	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public E findEdge(V v1, V v2) {$/;"	m	class:UndirectedSparseMultigraph
findEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public E findEdge(V v1, V v2) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
findEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized E findEdge(V v1, V v2) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
findEdgeSet	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public Collection<E> findEdgeSet(V v1, V v2)$/;"	m	class:AbstractGraph
findEdgeSet	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public Collection<E> findEdgeSet(V v1, V v2)$/;"	m	class:DirectedSparseGraph
findEdgeSet	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public Collection<E> findEdgeSet(V v1, V v2) {$/;"	m	class:GraphDecorator
findEdgeSet	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    Collection<E> findEdgeSet(V v1, V v2);$/;"	m	interface:Hypergraph
findEdgeSet	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<E> findEdgeSet(V v1, V v2) $/;"	m	class:OrderedKAryTree
findEdgeSet	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public Collection<H> findEdgeSet(V v1, V v2)$/;"	m	class:SetHypergraph
findEdgeSet	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public Collection<E> findEdgeSet(V v1, V v2)$/;"	m	class:SparseGraph
findEdgeSet	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public Collection<E> findEdgeSet(V v1, V v2)$/;"	m	class:UndirectedSparseGraph
findEdgeSet	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public Collection<E> findEdgeSet(V v1, V v2)$/;"	m	class:Graphs.UnmodifiableAbstractGraph
findEdgeSet	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public synchronized Collection<E> findEdgeSet(V v1, V v2)$/;"	m	class:Graphs.SynchronizedAbstractGraph
findRoot	src/edu/uci/ics/jung/algorithms/shortestpath/PrimMinimumSpanningTree.java	/^    protected V findRoot(Graph<V,E> graph) {$/;"	m	class:PrimMinimumSpanningTree
fireGraphEvent	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^	protected void fireGraphEvent(GraphEvent<V,E> evt) {$/;"	m	class:ObservableGraph
first	src/edu/uci/ics/jung/graph/util/Pair.java	/^    private T first;$/;"	f	class:Pair	file:
foldHypergraphEdges	src/edu/uci/ics/jung/algorithms/transformation/FoldingTransformer.java	/^    public static <V,E> Graph<V, Collection<E>> foldHypergraphEdges(Hypergraph<V,E> h, $/;"	m	class:FoldingTransformer
foldHypergraphEdges	src/edu/uci/ics/jung/algorithms/transformation/FoldingTransformer.java	/^    public static <V,E> Graph<V,E> foldHypergraphEdges(Hypergraph<V,E> h, $/;"	m	class:FoldingTransformer
foldHypergraphVertices	src/edu/uci/ics/jung/algorithms/transformation/FoldingTransformer.java	/^    public Graph<E,Collection<V>> foldHypergraphVertices(Hypergraph<V,E> h, $/;"	m	class:FoldingTransformer
foldHypergraphVertices	src/edu/uci/ics/jung/algorithms/transformation/FoldingTransformer.java	/^    public static <V,E,F> Graph<E,F> foldHypergraphVertices(Hypergraph<V,E> h, $/;"	m	class:FoldingTransformer
foldKPartiteGraph	src/edu/uci/ics/jung/algorithms/transformation/FoldingTransformer.java	/^    public static <V,E> Graph<V, Collection<V>> foldKPartiteGraph(KPartiteGraph<V,E> g, Predicate<V> p, $/;"	m	class:FoldingTransformer
foldKPartiteGraph	src/edu/uci/ics/jung/algorithms/transformation/FoldingTransformer.java	/^    public static <V,E> Graph<V,E> foldKPartiteGraph(KPartiteGraph<V,E> g, Predicate<V> p, $/;"	m	class:FoldingTransformer
forceConstant	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private double forceConstant;$/;"	f	class:FRLayout	file:
forceConstant	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private double forceConstant;$/;"	f	class:FRLayout2	file:
force_multiplier	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    protected double force_multiplier = 1.0 \/ 3.0;$/;"	f	class:SpringLayout
forest	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest.java	/^	protected Forest<V,E> forest;$/;"	f	class:MinimumSpanningForest
forest	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest2.java	/^	protected Forest<V,E> forest;$/;"	f	class:MinimumSpanningForest2
frVertexData	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private Map<V, FRVertexData> frVertexData =$/;"	f	class:FRLayout	file:
frVertexData	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private Map<V, Point2D> frVertexData = $/;"	f	class:FRLayout2	file:
g	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    protected Graph<V,E> g;$/;"	f	class:VoltageClusterer
g	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    protected Graph<V,E> g;$/;"	f	class:StructuralHoles
g	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    protected Hypergraph<V,E> g;$/;"	f	class:DijkstraDistance
generateMixedRandomGraph	src/edu/uci/ics/jung/algorithms/generators/random/MixedRandomGraphGenerator.java	/^	public static <V,E> Graph<V, E> generateMixedRandomGraph($/;"	m	class:MixedRandomGraphGenerator
generateMixedRandomGraph	src/edu/uci/ics/jung/algorithms/generators/random/MixedRandomGraphGenerator.java	/^    public static <V,E> Graph<V,E> generateMixedRandomGraph($/;"	m	class:MixedRandomGraphGenerator
get	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public Point2D get(Layout<V,E> layout) {$/;"	m	class:AggregateLayout
get	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public V get(Object key) {$/;"	m	class:ConstantMap
getAdjustForGravity	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	public boolean getAdjustForGravity() {$/;"	m	class:KKLayout
getAdjustedIncidentCount	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected int getAdjustedIncidentCount(E e) $/;"	m	class:AbstractIterativeScorer
getAlpha	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorerWithPriors.java	/^    public double getAlpha()$/;"	m	class:AbstractIterativeScorerWithPriors
getAngle	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^		protected double getAngle() {$/;"	m	class:CircleLayout.CircleVertexData
getCenter	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^	public Point2D getCenter(V v) {$/;"	m	class:BalloonLayout
getCenter	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	public Point2D getCenter() {$/;"	m	class:TreeLayout
getChild	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public V getChild(V vertex, int index)$/;"	m	class:OrderedKAryTree
getChildCount	src/edu/uci/ics/jung/graph/DelegateForest.java	/^    public int getChildCount(V vertex)$/;"	m	class:DelegateForest
getChildCount	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public int getChildCount(V parent) {$/;"	m	class:DelegateTree
getChildCount	src/edu/uci/ics/jung/graph/Forest.java	/^    public int getChildCount(V vertex);$/;"	m	interface:Forest
getChildCount	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public int getChildCount(V vertex) {$/;"	m	class:OrderedKAryTree
getChildCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public int getChildCount(V vertex)$/;"	m	class:Graphs.SynchronizedForest
getChildCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public int getChildCount(V vertex)$/;"	m	class:Graphs.UnmodifiableForest
getChildEdge	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public E getChildEdge(V vertex, int index) $/;"	m	class:OrderedKAryTree
getChildEdges	src/edu/uci/ics/jung/graph/DelegateForest.java	/^    public Collection<E> getChildEdges(V vertex)$/;"	m	class:DelegateForest
getChildEdges	src/edu/uci/ics/jung/graph/DelegateTree.java	/^  public Collection<E> getChildEdges(V vertex) {$/;"	m	class:DelegateTree
getChildEdges	src/edu/uci/ics/jung/graph/Forest.java	/^    public Collection<E> getChildEdges(V vertex);$/;"	m	interface:Forest
getChildEdges	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<E> getChildEdges(V vertex) $/;"	m	class:OrderedKAryTree
getChildEdges	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public Collection<E> getChildEdges(V vertex)$/;"	m	class:Graphs.SynchronizedForest
getChildEdges	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public Collection<E> getChildEdges(V vertex)$/;"	m	class:Graphs.UnmodifiableForest
getChildren	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public Collection<V> getChildren(V v) {$/;"	m	class:DelegateForest
getChildren	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public Collection<V> getChildren(V parent) {$/;"	m	class:DelegateTree
getChildren	src/edu/uci/ics/jung/graph/Forest.java	/^    public Collection<V> getChildren(V vertex);$/;"	m	interface:Forest
getChildren	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<V> getChildren(V vertex) $/;"	m	class:OrderedKAryTree
getChildren	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public Collection<V> getChildren(V vertex)$/;"	m	class:Graphs.SynchronizedForest
getChildren	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public Collection<V> getChildren(V vertex)$/;"	m	class:Graphs.UnmodifiableForest
getCircleData	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^	protected CircleVertexData getCircleData(V v) {$/;"	m	class:CircleLayout
getCol	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected int getCol(int i)$/;"	m	class:Lattice2DGenerator
getCommunity	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    public Collection<Set<V>> getCommunity(V v)$/;"	m	class:VoltageClusterer
getConnectionCount	src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java	/^    public int getConnectionCount()$/;"	m	class:KleinbergSmallWorldGenerator
getConvergenceThreshold	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    public double getConvergenceThreshold()$/;"	m	class:KMeansClusterer
getCoordinates	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	private Point2D getCoordinates(V v) {$/;"	m	class:AbstractLayout	file:
getCounts	src/edu/uci/ics/jung/algorithms/metrics/TriadicCensus.java	/^    public static <V,E> long[] getCounts(DirectedGraph<V,E> g) {$/;"	m	class:TriadicCensus
getCurrentRankScore	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^    protected double getCurrentRankScore(V v) {$/;"	m	class:KStepMarkov
getCurrentValue	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected T getCurrentValue(V v)$/;"	m	class:AbstractIterativeScorer
getDefaultEdgeType	src/edu/uci/ics/jung/graph/AbstractTypedGraph.java	/^	public EdgeType getDefaultEdgeType()$/;"	m	class:AbstractTypedGraph
getDefaultEdgeType	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public EdgeType getDefaultEdgeType() $/;"	m	class:GraphDecorator
getDefaultEdgeType	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    EdgeType getDefaultEdgeType();$/;"	m	interface:Hypergraph
getDefaultEdgeType	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^	public EdgeType getDefaultEdgeType() $/;"	m	class:SetHypergraph
getDefaultEdgeType	src/edu/uci/ics/jung/graph/SparseGraph.java	/^	public EdgeType getDefaultEdgeType() $/;"	m	class:SparseGraph
getDefaultEdgeType	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^	public EdgeType getDefaultEdgeType() $/;"	m	class:SparseMultigraph
getDefaultEdgeType	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public EdgeType getDefaultEdgeType()$/;"	m	class:Graphs.SynchronizedAbstractGraph
getDefaultEdgeType	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public EdgeType getDefaultEdgeType()$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getDelegate	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public Layout<V, E> getDelegate() {$/;"	m	class:AggregateLayout
getDelegate	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public Layout<V,E> getDelegate() {$/;"	m	class:LayoutDecorator
getDemoGraph	src/edu/uci/ics/jung/graph/util/TestGraphs.java	/^	public static Graph<String, Number> getDemoGraph() {$/;"	m	class:TestGraphs
getDepth	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public int getDepth(V v) {$/;"	m	class:DelegateForest
getDepth	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public int getDepth(V v) {$/;"	m	class:DelegateTree
getDepth	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public int getDepth(V vertex) $/;"	m	class:OrderedKAryTree
getDepth	src/edu/uci/ics/jung/graph/Tree.java	/^    public int getDepth(V vertex);$/;"	m	interface:Tree
getDepth	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public int getDepth(V vertex) {$/;"	m	class:Graphs.UnmodifiableTree
getDepth	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized int getDepth(V vertex) {$/;"	m	class:Graphs.SynchronizedTree
getDesiredPrecision	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    public double getDesiredPrecision() {$/;"	m	class:IterativeProcess
getDest	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public V getDest(E directed_edge)$/;"	m	class:DirectedSparseGraph
getDest	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public V getDest(E edge) {$/;"	m	class:DirectedSparseMultigraph
getDest	src/edu/uci/ics/jung/graph/Graph.java	/^    V getDest(E directed_edge);$/;"	m	interface:Graph
getDest	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public V getDest(E directed_edge) {$/;"	m	class:GraphDecorator
getDest	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    V getDest(E directed_edge);$/;"	m	interface:Hypergraph
getDest	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public V getDest(E directed_edge) $/;"	m	class:OrderedKAryTree
getDest	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^	public V getDest(H directed_edge) $/;"	m	class:SetHypergraph
getDest	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public V getDest(E directed_edge)$/;"	m	class:SparseGraph
getDest	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public V getDest(E edge) {$/;"	m	class:SparseMultigraph
getDest	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public V getDest(E directed_edge)$/;"	m	class:UndirectedSparseGraph
getDest	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public V getDest(E directed_edge) {$/;"	m	class:UndirectedSparseMultigraph
getDest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public V getDest(E directed_edge) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getDest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized V getDest(E directed_edge) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getDest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	    public V getDest(E directed_edge) {$/;"	m	class:Graphs.UnmodifiableDirectedGraph
getDest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	    public synchronized V getDest(E directed_edge) {$/;"	m	class:Graphs.SynchronizedDirectedGraph
getDistance	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    public int getDistance(Hypergraph<V,E> g, V v) {$/;"	m	class:BFSDistanceLabeler
getDistance	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public Number getDistance(V source, V target)$/;"	m	class:DijkstraDistance
getDistance	src/edu/uci/ics/jung/algorithms/shortestpath/Distance.java	/^     Number getDistance(V source, V target);$/;"	m	interface:Distance
getDistance	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^	public Number getDistance(V source, V target)$/;"	m	class:UnweightedShortestPath
getDistanceDecorator	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    public Map<V, Number> getDistanceDecorator() {$/;"	m	class:BFSDistanceLabeler
getDistanceMap	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public LinkedHashMap<V,Number> getDistanceMap(V source, int numDests)$/;"	m	class:DijkstraDistance
getDistanceMap	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public Map<V,Number> getDistanceMap(V source)$/;"	m	class:DijkstraDistance
getDistanceMap	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public Map<V,Number> getDistanceMap(V source, Collection<V> targets)$/;"	m	class:DijkstraDistance
getDistanceMap	src/edu/uci/ics/jung/algorithms/shortestpath/Distance.java	/^     Map<V,Number> getDistanceMap(V source);$/;"	m	interface:Distance
getDistanceMap	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^	public Map<V,Number> getDistanceMap(V source)$/;"	m	class:UnweightedShortestPath
getE	src/edu/uci/ics/jung/algorithms/scoring/util/VEPair.java	/^    public E getE()$/;"	m	class:VEPair
getEdge	src/edu/uci/ics/jung/algorithms/layout/GraphElementAccessor.java	/^    E getEdge(Layout<V,E> layout, double x, double y);$/;"	m	interface:GraphElementAccessor
getEdge	src/edu/uci/ics/jung/algorithms/layout/RadiusGraphElementAccessor.java	/^	public E getEdge(Layout<V,E> layout, double x, double y) {$/;"	m	class:RadiusGraphElementAccessor
getEdge	src/edu/uci/ics/jung/algorithms/layout/RadiusGraphElementAccessor.java	/^	public E getEdge(Layout<V,E> layout, double x, double y, double maxDistance) {$/;"	m	class:RadiusGraphElementAccessor
getEdge	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^		public E getEdge() {$/;"	m	class:GraphEvent.Edge
getEdgeCount	src/edu/uci/ics/jung/graph/AbstractTypedGraph.java	/^    public int getEdgeCount(EdgeType edge_type)$/;"	m	class:AbstractTypedGraph
getEdgeCount	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public int getEdgeCount()$/;"	m	class:DirectedSparseGraph
getEdgeCount	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^	public int getEdgeCount() {$/;"	m	class:DirectedSparseMultigraph
getEdgeCount	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public int getEdgeCount() {$/;"	m	class:GraphDecorator
getEdgeCount	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public int getEdgeCount(EdgeType edge_type) $/;"	m	class:GraphDecorator
getEdgeCount	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    int getEdgeCount();$/;"	m	interface:Hypergraph
getEdgeCount	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    int getEdgeCount(EdgeType edge_type);$/;"	m	interface:Hypergraph
getEdgeCount	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public int getEdgeCount() $/;"	m	class:OrderedKAryTree
getEdgeCount	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public int getEdgeCount()$/;"	m	class:SetHypergraph
getEdgeCount	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public int getEdgeCount(EdgeType edge_type)$/;"	m	class:SetHypergraph
getEdgeCount	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public int getEdgeCount()$/;"	m	class:SparseGraph
getEdgeCount	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public int getEdgeCount(EdgeType edge_type)$/;"	m	class:SparseGraph
getEdgeCount	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^	public int getEdgeCount() {$/;"	m	class:SparseMultigraph
getEdgeCount	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public int getEdgeCount(EdgeType edge_type)$/;"	m	class:SparseMultigraph
getEdgeCount	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public int getEdgeCount()$/;"	m	class:UndirectedSparseGraph
getEdgeCount	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public int getEdgeCount() {$/;"	m	class:UndirectedSparseMultigraph
getEdgeCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public int getEdgeCount() {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getEdgeCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized int getEdgeCount() {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getEdgeCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized int getEdgeCount(EdgeType edge_type) $/;"	m	class:Graphs.SynchronizedAbstractGraph
getEdgeCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public int getEdgeCount(EdgeType edge_type) $/;"	m	class:Graphs.UnmodifiableAbstractGraph
getEdgeData	src/edu/uci/ics/jung/algorithms/matrix/MatrixElementOperations.java	/^    public Map<E,Number> getEdgeData();$/;"	m	interface:MatrixElementOperations
getEdgeData	src/edu/uci/ics/jung/algorithms/matrix/RealMatrixElementOperations.java	/^	public Map<E, Number> getEdgeData() {$/;"	m	class:RealMatrixElementOperations
getEdgeRankScore	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public double getEdgeRankScore(E e) {$/;"	m	class:AbstractRanker
getEdgeRankScore	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public double getEdgeRankScore(E e, Object key) {$/;"	m	class:AbstractRanker
getEdgeRankScores	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^	public Map<E, Number> getEdgeRankScores(Object key) {$/;"	m	class:AbstractRanker
getEdgeRankScores	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^	public Map<Object,Map<E, Number>> getEdgeRankScores() {$/;"	m	class:AbstractRanker
getEdgeScore	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^	public Double getEdgeScore(E e) $/;"	m	class:BetweennessCentrality
getEdgeScore	src/edu/uci/ics/jung/algorithms/scoring/EdgeScorer.java	/^    public S getEdgeScore(E e);$/;"	m	interface:EdgeScorer
getEdgeType	src/edu/uci/ics/jung/graph/AbstractTypedGraph.java	/^	public EdgeType getEdgeType(E e)$/;"	m	class:AbstractTypedGraph
getEdgeType	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public EdgeType getEdgeType(E edge) {$/;"	m	class:GraphDecorator
getEdgeType	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    EdgeType getEdgeType(E edge); $/;"	m	interface:Hypergraph
getEdgeType	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public EdgeType getEdgeType(H edge)$/;"	m	class:SetHypergraph
getEdgeType	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public EdgeType getEdgeType(E edge)$/;"	m	class:SparseGraph
getEdgeType	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public EdgeType getEdgeType(E edge) {$/;"	m	class:SparseMultigraph
getEdgeType	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public EdgeType getEdgeType(E edge) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getEdgeType	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized EdgeType getEdgeType(E edge) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getEdgeWeight	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected double getEdgeWeight(E e) {$/;"	m	class:AbstractRanker
getEdgeWeight	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected Number getEdgeWeight(V v, E e)$/;"	m	class:AbstractIterativeScorer
getEdgeWeights	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^	public Map<E, Number> getEdgeWeights() {$/;"	m	class:AbstractRanker
getEdgeWeights	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public Transformer<VEPair<V,E>, ? extends Number> getEdgeWeights()$/;"	m	class:AbstractIterativeScorer
getEdges	src/edu/uci/ics/jung/graph/AbstractTypedGraph.java	/^	public Collection<E> getEdges(EdgeType edge_type) $/;"	m	class:AbstractTypedGraph
getEdges	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public Collection<E> getEdges()$/;"	m	class:DirectedSparseGraph
getEdges	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public Collection<E> getEdges() {$/;"	m	class:DirectedSparseMultigraph
getEdges	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public Collection<E> getEdges() {$/;"	m	class:GraphDecorator
getEdges	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public Collection<E> getEdges(EdgeType edgeType) {$/;"	m	class:GraphDecorator
getEdges	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    Collection<E> getEdges();$/;"	m	interface:Hypergraph
getEdges	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    Collection<E> getEdges(EdgeType edge_type);$/;"	m	interface:Hypergraph
getEdges	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<E> getEdges() $/;"	m	class:OrderedKAryTree
getEdges	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public Collection<H> getEdges()$/;"	m	class:SetHypergraph
getEdges	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public Collection<H> getEdges(EdgeType edge_type)$/;"	m	class:SetHypergraph
getEdges	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public Collection<E> getEdges()$/;"	m	class:SparseGraph
getEdges	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public Collection<E> getEdges(EdgeType edgeType)$/;"	m	class:SparseGraph
getEdges	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^	public Collection<E> getEdges(EdgeType edgeType) {$/;"	m	class:SparseMultigraph
getEdges	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public Collection<E> getEdges()$/;"	m	class:SparseMultigraph
getEdges	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public Collection<E> getEdges()$/;"	m	class:UndirectedSparseGraph
getEdges	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public Collection<E> getEdges() {$/;"	m	class:UndirectedSparseMultigraph
getEdges	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public Collection<E> getEdges() {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getEdges	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public Collection<E> getEdges(EdgeType edgeType) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getEdges	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized Collection<E> getEdges() {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getEdges	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized Collection<E> getEdges(EdgeType edgeType) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getEdgesRemoved	src/edu/uci/ics/jung/algorithms/cluster/EdgeBetweennessClusterer.java	/^    public List<E> getEdgesRemoved() $/;"	m	class:EdgeBetweennessClusterer
getEdgesToCheck	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    protected Collection<E> getEdgesToCheck(V v)$/;"	m	class:DijkstraDistance
getEndpoints	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public Pair<V> getEndpoints(E edge)$/;"	m	class:DirectedSparseGraph
getEndpoints	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public Pair<V> getEndpoints(E edge) {$/;"	m	class:DirectedSparseMultigraph
getEndpoints	src/edu/uci/ics/jung/graph/Graph.java	/^    Pair<V> getEndpoints(E edge);$/;"	m	interface:Graph
getEndpoints	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public Pair<V> getEndpoints(E edge) {$/;"	m	class:GraphDecorator
getEndpoints	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Pair<V> getEndpoints(E edge) $/;"	m	class:OrderedKAryTree
getEndpoints	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public Pair<V> getEndpoints(E edge)$/;"	m	class:SparseGraph
getEndpoints	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public Pair<V> getEndpoints(E edge)$/;"	m	class:SparseMultigraph
getEndpoints	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public Pair<V> getEndpoints(E edge)$/;"	m	class:UndirectedSparseGraph
getEndpoints	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public Pair<V> getEndpoints(E edge) {$/;"	m	class:UndirectedSparseMultigraph
getEndpoints	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public Pair<V> getEndpoints(E edge) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getEndpoints	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized Pair<V> getEndpoints(E edge) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getEquivalentPairs	src/edu/uci/ics/jung/algorithms/blockmodel/StructurallyEquivalent.java	/^	protected Set<Pair<V>> getEquivalentPairs(Graph<V,?> g) {$/;"	m	class:StructurallyEquivalent
getExchangeVertices	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	public boolean getExchangeVertices() {$/;"	m	class:KKLayout
getFRData	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    protected FRVertexData getFRData(V v) {$/;"	m	class:FRLayout
getFactory	src/edu/uci/ics/jung/graph/DelegateTree.java	/^    public static final <V,E> Factory<Tree<V,E>> getFactory() {$/;"	m	class:DelegateTree
getFactory	src/edu/uci/ics/jung/graph/DirectedOrderedSparseMultigraph.java	/^	public static <V,E> Factory<DirectedGraph<V,E>> getFactory() {$/;"	m	class:DirectedOrderedSparseMultigraph
getFactory	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^   public static final <V,E> Factory<DirectedGraph<V,E>> getFactory() {$/;"	m	class:DirectedSparseGraph
getFactory	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^	public static <V,E> Factory<DirectedGraph<V,E>> getFactory() {$/;"	m	class:DirectedSparseMultigraph
getFactory	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public static <V,E> Factory<DirectedGraph<V,E>> getFactory(final int order) {$/;"	m	class:OrderedKAryTree
getFactory	src/edu/uci/ics/jung/graph/OrderedSparseMultigraph.java	/^	public static <V,E> Factory<Graph<V,E>> getFactory() { $/;"	m	class:OrderedSparseMultigraph
getFactory	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public static <V,H> Factory<Hypergraph<V,H>> getFactory() {$/;"	m	class:SetHypergraph
getFactory	src/edu/uci/ics/jung/graph/SortedSparseMultigraph.java	/^	public static <V,E> Factory<Graph<V,E>> getFactory() $/;"	m	class:SortedSparseMultigraph
getFactory	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public static <V,E> Factory<Graph<V,E>> getFactory() $/;"	m	class:SparseGraph
getFactory	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^	public static <V,E> Factory<Graph<V,E>> getFactory() { $/;"	m	class:SparseMultigraph
getFactory	src/edu/uci/ics/jung/graph/UndirectedOrderedSparseMultigraph.java	/^	public static <V,E> Factory<UndirectedGraph<V,E>> getFactory() {$/;"	m	class:UndirectedOrderedSparseMultigraph
getFactory	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public static <V,E> Factory<UndirectedGraph<V,E>> getFactory() {$/;"	m	class:UndirectedSparseGraph
getFactory	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public static <V,E> Factory<UndirectedGraph<V,E>> getFactory() {$/;"	m	class:UndirectedSparseMultigraph
getFirst	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public T getFirst() $/;"	m	class:Pair
getFlowGraph	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    public DirectedGraph<V,E> getFlowGraph() {$/;"	m	class:EdmondsKarpMaxFlow
getForceMultiplier	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public double getForceMultiplier() {$/;"	m	class:SpringLayout
getForest	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest.java	/^	public Forest<V,E> getForest() {$/;"	m	class:MinimumSpanningForest
getForest	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest2.java	/^	public Forest<V,E> getForest() {$/;"	m	class:MinimumSpanningForest2
getGraph	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^	public Graph<V,E> getGraph() $/;"	m	class:VertexPartition
getGraph	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected Graph<V,E> getGraph() {$/;"	m	class:AbstractRanker
getGraph	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	public Graph<V, E> getGraph() {$/;"	m	class:AbstractLayout
getGraph	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public Graph<V, E> getGraph() {$/;"	m	class:AggregateLayout
getGraph	src/edu/uci/ics/jung/algorithms/layout/Layout.java	/^	Graph<V,E> getGraph();$/;"	m	interface:Layout
getGraph	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public Graph<V, E> getGraph() {$/;"	m	class:LayoutDecorator
getGraph	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	public Graph<V,E> getGraph() {$/;"	m	class:TreeLayout
getGridEdgeCount	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    public int getGridEdgeCount()$/;"	m	class:Lattice2DGenerator
getHITSUniformRootPrior	src/edu/uci/ics/jung/algorithms/scoring/util/ScoringUtils.java	/^    public static <V> Transformer<V, HITS.Scores> getHITSUniformRootPrior(Collection<V> roots)$/;"	m	class:ScoringUtils
getHeight	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public int getHeight() {$/;"	m	class:DelegateForest
getHeight	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public int getHeight() {$/;"	m	class:DelegateTree
getHeight	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public int getHeight() $/;"	m	class:OrderedKAryTree
getHeight	src/edu/uci/ics/jung/graph/Tree.java	/^    public int getHeight();$/;"	m	interface:Tree
getHeight	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public int getHeight() {$/;"	m	class:Graphs.UnmodifiableTree
getHeight	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized int getHeight() {$/;"	m	class:Graphs.SynchronizedTree
getISOMVertexData	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	protected ISOMVertexData getISOMVertexData(V v) {$/;"	m	class:ISOMLayout
getInEdges	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public Collection<E> getInEdges(V vertex)$/;"	m	class:DirectedSparseGraph
getInEdges	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public Collection<E> getInEdges(V vertex) {$/;"	m	class:DirectedSparseMultigraph
getInEdges	src/edu/uci/ics/jung/graph/Graph.java	/^    Collection<E> getInEdges(V vertex);$/;"	m	interface:Graph
getInEdges	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public Collection<E> getInEdges(V vertex) {$/;"	m	class:GraphDecorator
getInEdges	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    Collection<E> getInEdges(V vertex);$/;"	m	interface:Hypergraph
getInEdges	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<E> getInEdges(V vertex) $/;"	m	class:OrderedKAryTree
getInEdges	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^	public Collection<H> getInEdges(V vertex) $/;"	m	class:SetHypergraph
getInEdges	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public Collection<E> getInEdges(V vertex)$/;"	m	class:SparseGraph
getInEdges	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public Collection<E> getInEdges(V vertex)$/;"	m	class:SparseMultigraph
getInEdges	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public Collection<E> getInEdges(V vertex)$/;"	m	class:UndirectedSparseGraph
getInEdges	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public Collection<E> getInEdges(V vertex) {$/;"	m	class:UndirectedSparseMultigraph
getInEdges	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public Collection<E> getInEdges(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getInEdges	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized Collection<E> getInEdges(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getIncidentCount	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public int getIncidentCount(E edge)$/;"	m	class:AbstractGraph
getIncidentCount	src/edu/uci/ics/jung/graph/DelegateForest.java	/^    public int getIncidentCount(E edge)$/;"	m	class:DelegateForest
getIncidentCount	src/edu/uci/ics/jung/graph/DelegateTree.java	/^    public int getIncidentCount(E edge)$/;"	m	class:DelegateTree
getIncidentCount	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public int getIncidentCount(E edge) {$/;"	m	class:GraphDecorator
getIncidentCount	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    int getIncidentCount(E edge);$/;"	m	interface:Hypergraph
getIncidentCount	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public int getIncidentCount(E edge) $/;"	m	class:OrderedKAryTree
getIncidentCount	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public int getIncidentCount(H edge)$/;"	m	class:SetHypergraph
getIncidentCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public int getIncidentCount(E edge)$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getIncidentCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public synchronized int getIncidentCount(E edge)$/;"	m	class:Graphs.SynchronizedAbstractGraph
getIncidentEdges	src/edu/uci/ics/jung/graph/DirectedOrderedSparseMultigraph.java	/^    public Collection<E> getIncidentEdges(V vertex) {$/;"	m	class:DirectedOrderedSparseMultigraph
getIncidentEdges	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public Collection<E> getIncidentEdges(V vertex)$/;"	m	class:DirectedSparseGraph
getIncidentEdges	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public Collection<E> getIncidentEdges(V vertex) {$/;"	m	class:DirectedSparseMultigraph
getIncidentEdges	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public Collection<E> getIncidentEdges(V vertex) {$/;"	m	class:GraphDecorator
getIncidentEdges	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    Collection<E> getIncidentEdges(V vertex);$/;"	m	interface:Hypergraph
getIncidentEdges	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<E> getIncidentEdges(V vertex) $/;"	m	class:OrderedKAryTree
getIncidentEdges	src/edu/uci/ics/jung/graph/OrderedSparseMultigraph.java	/^    public Collection<E> getIncidentEdges(V vertex)$/;"	m	class:OrderedSparseMultigraph
getIncidentEdges	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public Collection<H> getIncidentEdges(V vertex)$/;"	m	class:SetHypergraph
getIncidentEdges	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public Collection<E> getIncidentEdges(V vertex)$/;"	m	class:SparseGraph
getIncidentEdges	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public Collection<E> getIncidentEdges(V vertex)$/;"	m	class:SparseMultigraph
getIncidentEdges	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public Collection<E> getIncidentEdges(V vertex)$/;"	m	class:UndirectedSparseGraph
getIncidentEdges	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public Collection<E> getIncidentEdges(V vertex) {$/;"	m	class:UndirectedSparseMultigraph
getIncidentEdges	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public Collection<E> getIncidentEdges(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getIncidentEdges	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized Collection<E> getIncidentEdges(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getIncidentVertices	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public Collection<V> getIncidentVertices(E edge)$/;"	m	class:AbstractGraph
getIncidentVertices	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public Collection<V> getIncidentVertices(E edge) {$/;"	m	class:GraphDecorator
getIncidentVertices	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    Collection<V> getIncidentVertices(E edge);$/;"	m	interface:Hypergraph
getIncidentVertices	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<V> getIncidentVertices(E edge) $/;"	m	class:OrderedKAryTree
getIncidentVertices	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public Collection<V> getIncidentVertices(H edge)$/;"	m	class:SetHypergraph
getIncidentVertices	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public Collection<V> getIncidentVertices(E edge) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getIncidentVertices	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized Collection<V> getIncidentVertices(E edge) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getIncident_internal	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    protected Collection<E> getIncident_internal(V vertex)$/;"	m	class:UndirectedSparseMultigraph
getIncomingEdge	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^	public E getIncomingEdge(V source, V target)$/;"	m	class:DijkstraShortestPath
getIncomingEdgeMap	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^	public LinkedHashMap<V,E> getIncomingEdgeMap(V source, int numDests)$/;"	m	class:DijkstraShortestPath
getIncomingEdgeMap	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^    public Map<V,E> getIncomingEdgeMap(V source)$/;"	m	class:DijkstraShortestPath
getIncomingEdgeMap	src/edu/uci/ics/jung/algorithms/shortestpath/ShortestPath.java	/^     Map<V,E> getIncomingEdgeMap(V source);$/;"	m	interface:ShortestPath
getIncomingEdgeMap	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^	public Map<V,E> getIncomingEdgeMap(V source)$/;"	m	class:UnweightedShortestPath
getIncoming_internal	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    protected Collection<E> getIncoming_internal(V vertex)$/;"	m	class:DirectedSparseGraph
getIncoming_internal	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    protected Collection<E> getIncoming_internal(V vertex)$/;"	m	class:DirectedSparseMultigraph
getIncoming_internal	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    protected Collection<E> getIncoming_internal(V vertex)$/;"	m	class:SparseMultigraph
getIndex	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected int getIndex(int i, int j)$/;"	m	class:Lattice2DGenerator
getIndex	src/edu/uci/ics/jung/graph/util/DefaultParallelEdgeIndexFunction.java	/^    protected int getIndex(Graph<V,E> graph, E e, V v) {$/;"	m	class:DefaultParallelEdgeIndexFunction
getIndex	src/edu/uci/ics/jung/graph/util/DefaultParallelEdgeIndexFunction.java	/^    protected int getIndex(Graph<V,E> graph, E e, V v, V u) {$/;"	m	class:DefaultParallelEdgeIndexFunction
getIndex	src/edu/uci/ics/jung/graph/util/DefaultParallelEdgeIndexFunction.java	/^    public int getIndex(Graph<V,E> graph, E e)$/;"	m	class:DefaultParallelEdgeIndexFunction
getIndex	src/edu/uci/ics/jung/graph/util/EdgeIndexFunction.java	/^    int getIndex(Graph<V,E> graph, E e);$/;"	m	interface:EdgeIndexFunction
getIndex	src/edu/uci/ics/jung/graph/util/IncidentEdgeIndexFunction.java	/^    protected int getIndex(Graph<V,E> graph, E e, V u, V v) {$/;"	m	class:IncidentEdgeIndexFunction
getIndex	src/edu/uci/ics/jung/graph/util/IncidentEdgeIndexFunction.java	/^    protected int getIndex(Graph<V,E> graph, E e, V v) {$/;"	m	class:IncidentEdgeIndexFunction
getIndex	src/edu/uci/ics/jung/graph/util/IncidentEdgeIndexFunction.java	/^    public int getIndex(Graph<V,E> graph, E e)$/;"	m	class:IncidentEdgeIndexFunction
getIndexer	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    protected BidiMap<V,Integer> getIndexer() {$/;"	m	class:RandomWalkSTBetweenness
getInstance	src/edu/uci/ics/jung/graph/util/Context.java	/^	public static <G,E> Context<G,E> getInstance(G graph, E element) {$/;"	m	class:Context
getInstance	src/edu/uci/ics/jung/graph/util/DefaultParallelEdgeIndexFunction.java	/^    public static <V,E> DefaultParallelEdgeIndexFunction<V,E> getInstance() {$/;"	m	class:DefaultParallelEdgeIndexFunction
getInstance	src/edu/uci/ics/jung/graph/util/IncidentEdgeIndexFunction.java	/^    public static <V,E> IncidentEdgeIndexFunction<V,E> getInstance() {$/;"	m	class:IncidentEdgeIndexFunction
getIterations	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public int getIterations()$/;"	m	class:AbstractIterativeScorer
getIterations	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    public int getIterations() {$/;"	m	class:IterativeProcess
getKey	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^    public K getKey() {$/;"	m	class:BasicMapEntry
getLayouts	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public Map<Layout<V,E>,Point2D> getLayouts() {$/;"	m	class:AggregateLayout
getMaxFlow	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    public int getMaxFlow() {$/;"	m	class:EdmondsKarpMaxFlow
getMaxIterations	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public int getMaxIterations()$/;"	m	class:AbstractIterativeScorer
getMaxIterations	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    public int getMaxIterations()$/;"	m	class:KMeansClusterer
getMaxXY	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^	private Point2D getMaxXY() {$/;"	m	class:RadialTreeLayout	file:
getMaximumIterations	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    public int getMaximumIterations() {$/;"	m	class:IterativeProcess
getMessage	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^        public String getMessage()$/;"	m	class:KMeansClusterer.NotEnoughClustersException
getMinCutEdges	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    public Set<E> getMinCutEdges() {$/;"	m	class:EdmondsKarpMaxFlow
getNeighborCount	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public int getNeighborCount(V vertex)$/;"	m	class:AbstractGraph
getNeighborCount	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public int getNeighborCount(V vertex) {$/;"	m	class:GraphDecorator
getNeighborCount	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    int getNeighborCount(V vertex);$/;"	m	interface:Hypergraph
getNeighborCount	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public int getNeighborCount(V vertex) $/;"	m	class:OrderedKAryTree
getNeighborCount	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public int getNeighborCount(V vertex)$/;"	m	class:SetHypergraph
getNeighborCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public int getNeighborCount(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getNeighborCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized int getNeighborCount(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getNeighbors	src/edu/uci/ics/jung/graph/DirectedOrderedSparseMultigraph.java	/^    public Collection<V> getNeighbors(V vertex) {$/;"	m	class:DirectedOrderedSparseMultigraph
getNeighbors	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public Collection<V> getNeighbors(V vertex)$/;"	m	class:DirectedSparseGraph
getNeighbors	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public Collection<V> getNeighbors(V vertex) {$/;"	m	class:DirectedSparseMultigraph
getNeighbors	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public Collection<V> getNeighbors(V vertex) {$/;"	m	class:GraphDecorator
getNeighbors	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    Collection<V> getNeighbors(V vertex);$/;"	m	interface:Hypergraph
getNeighbors	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<V> getNeighbors(V vertex) $/;"	m	class:OrderedKAryTree
getNeighbors	src/edu/uci/ics/jung/graph/OrderedSparseMultigraph.java	/^    public Collection<V> getNeighbors(V vertex)$/;"	m	class:OrderedSparseMultigraph
getNeighbors	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public Collection<V> getNeighbors(V vertex)$/;"	m	class:SetHypergraph
getNeighbors	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public Collection<V> getNeighbors(V vertex)$/;"	m	class:SparseGraph
getNeighbors	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public Collection<V> getNeighbors(V vertex)$/;"	m	class:SparseMultigraph
getNeighbors	src/edu/uci/ics/jung/graph/UndirectedOrderedSparseMultigraph.java	/^    public Collection<V> getNeighbors(V vertex) {$/;"	m	class:UndirectedOrderedSparseMultigraph
getNeighbors	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public Collection<V> getNeighbors(V vertex)$/;"	m	class:UndirectedSparseGraph
getNeighbors	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public Collection<V> getNeighbors(V vertex) {$/;"	m	class:UndirectedSparseMultigraph
getNeighbors	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public Collection<V> getNeighbors(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getNeighbors	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized Collection<V> getNeighbors(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getNextVertex	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        protected Map.Entry<V,Number> getNextVertex()$/;"	m	class:DijkstraDistance.SourceData
getNextVertex	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^        public Map.Entry<V,Number> getNextVertex()$/;"	m	class:DijkstraShortestPath.SourcePathData
getNodesInSinkPartition	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    public Set<V> getNodesInSinkPartition() {$/;"	m	class:EdmondsKarpMaxFlow
getNodesInSourcePartition	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    public Set<V> getNodesInSourcePartition() {$/;"	m	class:EdmondsKarpMaxFlow
getObjectCounts	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    protected Map<V, double[]> getObjectCounts(Collection<Set<V>> candidates, V seed)$/;"	m	class:VoltageClusterer
getOneComponentGraph	src/edu/uci/ics/jung/graph/util/TestGraphs.java	/^	public static Graph<String,Number> getOneComponentGraph() {$/;"	m	class:TestGraphs
getOpposite	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public V getOpposite(V vertex, E edge)$/;"	m	class:AbstractGraph
getOpposite	src/edu/uci/ics/jung/graph/Graph.java	/^    V getOpposite(V vertex, E edge); $/;"	m	interface:Graph
getOpposite	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public V getOpposite(V vertex, E edge) {$/;"	m	class:GraphDecorator
getOpposite	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public V getOpposite(V vertex, E edge) $/;"	m	class:OrderedKAryTree
getOpposite	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public V getOpposite(V vertex, E edge) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getOpposite	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized V getOpposite(V vertex, E edge) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getOutEdges	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public Collection<E> getOutEdges(V vertex)$/;"	m	class:DirectedSparseGraph
getOutEdges	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public Collection<E> getOutEdges(V vertex) {$/;"	m	class:DirectedSparseMultigraph
getOutEdges	src/edu/uci/ics/jung/graph/Graph.java	/^    Collection<E> getOutEdges(V vertex);$/;"	m	interface:Graph
getOutEdges	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public Collection<E> getOutEdges(V vertex) {$/;"	m	class:GraphDecorator
getOutEdges	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    Collection<E> getOutEdges(V vertex);$/;"	m	interface:Hypergraph
getOutEdges	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<E> getOutEdges(V vertex) $/;"	m	class:OrderedKAryTree
getOutEdges	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^	public Collection<H> getOutEdges(V vertex) $/;"	m	class:SetHypergraph
getOutEdges	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public Collection<E> getOutEdges(V vertex)$/;"	m	class:SparseGraph
getOutEdges	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public Collection<E> getOutEdges(V vertex)$/;"	m	class:SparseMultigraph
getOutEdges	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public Collection<E> getOutEdges(V vertex)$/;"	m	class:UndirectedSparseGraph
getOutEdges	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public Collection<E> getOutEdges(V vertex) {$/;"	m	class:UndirectedSparseMultigraph
getOutEdges	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public Collection<E> getOutEdges(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getOutEdges	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized Collection<E> getOutEdges(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getOutgoing_internal	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    protected Collection<E> getOutgoing_internal(V vertex)$/;"	m	class:DirectedSparseGraph
getOutgoing_internal	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    protected Collection<E> getOutgoing_internal(V vertex)$/;"	m	class:DirectedSparseMultigraph
getOutgoing_internal	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    protected Collection<E> getOutgoing_internal(V vertex)$/;"	m	class:SparseMultigraph
getOutputValue	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected T getOutputValue(V v)$/;"	m	class:AbstractIterativeScorer
getParent	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public V getParent(V child) {$/;"	m	class:DelegateForest
getParent	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public V getParent(V child) {$/;"	m	class:DelegateTree
getParent	src/edu/uci/ics/jung/graph/Forest.java	/^    public V getParent(V vertex);$/;"	m	interface:Forest
getParent	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public V getParent(V vertex) $/;"	m	class:OrderedKAryTree
getParent	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public V getParent(V vertex)$/;"	m	class:Graphs.SynchronizedForest
getParent	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public V getParent(V vertex)$/;"	m	class:Graphs.UnmodifiableForest
getParentEdge	src/edu/uci/ics/jung/graph/DelegateForest.java	/^    public E getParentEdge(V vertex)$/;"	m	class:DelegateForest
getParentEdge	src/edu/uci/ics/jung/graph/DelegateTree.java	/^  public E getParentEdge(V vertex) {$/;"	m	class:DelegateTree
getParentEdge	src/edu/uci/ics/jung/graph/Forest.java	/^    public E getParentEdge(V vertex);$/;"	m	interface:Forest
getParentEdge	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public E getParentEdge(V vertex) $/;"	m	class:OrderedKAryTree
getParentEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public E getParentEdge(V vertex)$/;"	m	class:Graphs.SynchronizedForest
getParentEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^        public E getParentEdge(V vertex)$/;"	m	class:Graphs.UnmodifiableForest
getPartitions	src/edu/uci/ics/jung/graph/KPartiteGraph.java	/^    public Collection<Predicate<V>> getPartitions();$/;"	m	interface:KPartiteGraph
getPath	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^	public List<E> getPath(V source, V target)$/;"	m	class:DijkstraShortestPath
getPath	src/edu/uci/ics/jung/algorithms/shortestpath/ShortestPathUtils.java	/^    public static <V, E> List<E> getPath(Graph<V,E> graph, ShortestPath<V,E> sp, V source, V target)$/;"	m	class:ShortestPathUtils
getPath	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public List<V> getPath(V child) {$/;"	m	class:DelegateForest
getPath	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public List<V> getPath(V vertex) {$/;"	m	class:DelegateTree
getPolarLocations	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^	public Map<V,PolarPoint> getPolarLocations() {$/;"	m	class:RadialTreeLayout
getPrecision	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    public double getPrecision() {$/;"	m	class:IterativeProcess
getPredecessorCount	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public int getPredecessorCount(V vertex)$/;"	m	class:AbstractGraph
getPredecessorCount	src/edu/uci/ics/jung/graph/Graph.java	/^    int getPredecessorCount(V vertex);$/;"	m	interface:Graph
getPredecessorCount	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public int getPredecessorCount(V vertex) {$/;"	m	class:GraphDecorator
getPredecessorCount	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public int getPredecessorCount(V vertex) $/;"	m	class:OrderedKAryTree
getPredecessorCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public int getPredecessorCount(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getPredecessorCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized int getPredecessorCount(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getPredecessors	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    public Set<V> getPredecessors(V v) {$/;"	m	class:BFSDistanceLabeler
getPredecessors	src/edu/uci/ics/jung/graph/DirectedOrderedSparseMultigraph.java	/^    public Collection<V> getPredecessors(V vertex) {$/;"	m	class:DirectedOrderedSparseMultigraph
getPredecessors	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public Collection<V> getPredecessors(V vertex)$/;"	m	class:DirectedSparseGraph
getPredecessors	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public Collection<V> getPredecessors(V vertex) {$/;"	m	class:DirectedSparseMultigraph
getPredecessors	src/edu/uci/ics/jung/graph/Graph.java	/^    Collection<V> getPredecessors(V vertex);$/;"	m	interface:Graph
getPredecessors	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public Collection<V> getPredecessors(V vertex) {$/;"	m	class:GraphDecorator
getPredecessors	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    Collection<V> getPredecessors(V vertex);$/;"	m	interface:Hypergraph
getPredecessors	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<V> getPredecessors(V vertex) $/;"	m	class:OrderedKAryTree
getPredecessors	src/edu/uci/ics/jung/graph/OrderedSparseMultigraph.java	/^    public Collection<V> getPredecessors(V vertex)$/;"	m	class:OrderedSparseMultigraph
getPredecessors	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^	public Collection<V> getPredecessors(V vertex) $/;"	m	class:SetHypergraph
getPredecessors	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public Collection<V> getPredecessors(V vertex)$/;"	m	class:SparseGraph
getPredecessors	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public Collection<V> getPredecessors(V vertex)$/;"	m	class:SparseMultigraph
getPredecessors	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public Collection<V> getPredecessors(V vertex)$/;"	m	class:UndirectedSparseGraph
getPredecessors	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public Collection<V> getPredecessors(V vertex) {$/;"	m	class:UndirectedSparseMultigraph
getPredecessors	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public Collection<V> getPredecessors(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getPredecessors	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized Collection<V> getPredecessors(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getPreds_internal	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    protected Collection<V> getPreds_internal(V vertex)$/;"	m	class:DirectedSparseGraph
getPriorRankScore	src/edu/uci/ics/jung/algorithms/importance/RelativeAuthorityRanker.java	/^    protected double getPriorRankScore(V v) {$/;"	m	class:RelativeAuthorityRanker
getPriors	src/edu/uci/ics/jung/algorithms/importance/RelativeAuthorityRanker.java	/^    protected Set<V> getPriors() { return mPriors; }$/;"	m	class:RelativeAuthorityRanker
getRadii	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^	public Map<V, Double> getRadii() {$/;"	m	class:BalloonLayout
getRadius	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^	public double getRadius() {$/;"	m	class:CircleLayout
getRadius	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	public double getRadius() { return radius; }$/;"	m	class:PolarPoint
getRankScoreKey	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    abstract public Object getRankScoreKey();$/;"	m	class:AbstractRanker
getRankScoreKey	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^    public String getRankScoreKey() {$/;"	m	class:BetweennessCentrality
getRankScoreKey	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^    public String getRankScoreKey() {$/;"	m	class:KStepMarkov
getRankScoreKey	src/edu/uci/ics/jung/algorithms/importance/MarkovCentrality.java	/^    public String getRankScoreKey() {$/;"	m	class:MarkovCentrality
getRankScoreKey	src/edu/uci/ics/jung/algorithms/importance/RandomWalkBetweenness.java	/^    public String getRankScoreKey() {$/;"	m	class:RandomWalkBetweenness
getRankScoreKey	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    public String getRankScoreKey() {$/;"	m	class:RandomWalkSTBetweenness
getRankScoreKey	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    public String getRankScoreKey() {$/;"	m	class:WeightedNIPaths
getRankScores	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public List<Double> getRankScores(int topKRankings) {$/;"	m	class:AbstractRanker
getRanked	src/edu/uci/ics/jung/algorithms/importance/Ranking.java	/^	public V getRanked() {$/;"	m	class:Ranking
getRankings	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public List<Ranking<?>> getRankings() {$/;"	m	class:AbstractRanker
getRepulsionRange	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public int getRepulsionRange() {$/;"	m	class:SpringLayout
getRoot	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public V getRoot() {$/;"	m	class:DelegateForest
getRoot	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public V getRoot() {$/;"	m	class:DelegateTree
getRoot	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public V getRoot() $/;"	m	class:OrderedKAryTree
getRoot	src/edu/uci/ics/jung/graph/Tree.java	/^    public V getRoot();$/;"	m	interface:Tree
getRoot	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public V getRoot() {$/;"	m	class:Graphs.UnmodifiableTree
getRoot	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized V getRoot() {$/;"	m	class:Graphs.SynchronizedTree
getRoots	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public Collection<V> getRoots() {$/;"	m	class:DelegateForest
getRoots	src/edu/uci/ics/jung/graph/util/TreeUtils.java	/^	public static <V,E> List<V> getRoots(Forest<V,E> forest) $/;"	m	class:TreeUtils
getRow	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected int getRow(int i)$/;"	m	class:Lattice2DGenerator
getSecond	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public T getSecond() $/;"	m	class:Pair
getSeedCandidates	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    protected List<V> getSeedCandidates(Collection<Set<V>> candidates)$/;"	m	class:VoltageClusterer
getSetToCollapsedVertexTransformer	src/edu/uci/ics/jung/algorithms/transformation/VertexPartitionCollapser.java	/^    public Transformer<Set<V>, CV> getSetToCollapsedVertexTransformer()$/;"	m	class:VertexPartitionCollapser
getSize	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	public Dimension getSize() {$/;"	m	class:AbstractLayout
getSize	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public Dimension getSize() {$/;"	m	class:AggregateLayout
getSize	src/edu/uci/ics/jung/algorithms/layout/Layout.java	/^	Dimension getSize();$/;"	m	interface:Layout
getSize	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public Dimension getSize() {$/;"	m	class:LayoutDecorator
getSize	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	public Dimension getSize() {$/;"	m	class:TreeLayout
getSleepTime	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	public long getSleepTime() {$/;"	m	class:VisRunner
getSmallGraph	src/edu/uci/ics/jung/graph/util/TestGraphs.java	/^    public static Graph<String, Number> getSmallGraph() {$/;"	m	class:TestGraphs
getSource	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public V getSource(E directed_edge)$/;"	m	class:DirectedSparseGraph
getSource	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public V getSource(E edge) {$/;"	m	class:DirectedSparseMultigraph
getSource	src/edu/uci/ics/jung/graph/Graph.java	/^    V getSource(E directed_edge);$/;"	m	interface:Graph
getSource	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public V getSource(E directed_edge) {$/;"	m	class:GraphDecorator
getSource	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    V getSource(E directed_edge);$/;"	m	interface:Hypergraph
getSource	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public V getSource(E directed_edge) $/;"	m	class:OrderedKAryTree
getSource	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^	public V getSource(H directed_edge) $/;"	m	class:SetHypergraph
getSource	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public V getSource(E directed_edge)$/;"	m	class:SparseGraph
getSource	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public V getSource(E edge) {$/;"	m	class:SparseMultigraph
getSource	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public V getSource(E directed_edge)$/;"	m	class:UndirectedSparseGraph
getSource	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public V getSource(E directed_edge) {$/;"	m	class:UndirectedSparseMultigraph
getSource	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^	public Graph<V, E> getSource() {$/;"	m	class:GraphEvent
getSource	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public V getSource(E directed_edge) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getSource	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized V getSource(E directed_edge) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getSource	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    	public V getSource(E directed_edge) {$/;"	m	class:Graphs.UnmodifiableDirectedGraph
getSource	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    	public synchronized V getSource(E directed_edge) {$/;"	m	class:Graphs.SynchronizedDirectedGraph
getSourceData	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    protected SourceData getSourceData(V source)$/;"	m	class:DijkstraDistance
getSourceData	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^    protected SourceData getSourceData(V source)$/;"	m	class:DijkstraShortestPath
getStationaryDistribution	src/edu/uci/ics/jung/algorithms/importance/MarkovCentrality.java	/^    private DoubleMatrix1D getStationaryDistribution() {$/;"	m	class:MarkovCentrality	file:
getStatus	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	public String getStatus() {$/;"	m	class:ISOMLayout
getStatus	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	public String getStatus() {$/;"	m	class:KKLayout
getStretch	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public double getStretch() {$/;"	m	class:SpringLayout
getSubTree	src/edu/uci/ics/jung/graph/util/TreeUtils.java	/^	public static <V,E> Tree<V,E> getSubTree(Forest<V,E> forest, V root) throws InstantiationException, IllegalAccessException $/;"	m	class:TreeUtils
getSuccessorCount	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public int getSuccessorCount(V vertex)$/;"	m	class:AbstractGraph
getSuccessorCount	src/edu/uci/ics/jung/graph/Graph.java	/^    int getSuccessorCount(V vertex);$/;"	m	interface:Graph
getSuccessorCount	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public int getSuccessorCount(V vertex) {$/;"	m	class:GraphDecorator
getSuccessorCount	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public int getSuccessorCount(V vertex) $/;"	m	class:OrderedKAryTree
getSuccessorCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public int getSuccessorCount(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getSuccessorCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized int getSuccessorCount(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getSuccessors	src/edu/uci/ics/jung/graph/DirectedOrderedSparseMultigraph.java	/^    public Collection<V> getSuccessors(V vertex) {$/;"	m	class:DirectedOrderedSparseMultigraph
getSuccessors	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public Collection<V> getSuccessors(V vertex)$/;"	m	class:DirectedSparseGraph
getSuccessors	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public Collection<V> getSuccessors(V vertex) {$/;"	m	class:DirectedSparseMultigraph
getSuccessors	src/edu/uci/ics/jung/graph/Graph.java	/^    Collection<V> getSuccessors(V vertex);$/;"	m	interface:Graph
getSuccessors	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public Collection<V> getSuccessors(V vertex) {$/;"	m	class:GraphDecorator
getSuccessors	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    Collection<V> getSuccessors(V vertex);$/;"	m	interface:Hypergraph
getSuccessors	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<V> getSuccessors(V vertex) $/;"	m	class:OrderedKAryTree
getSuccessors	src/edu/uci/ics/jung/graph/OrderedSparseMultigraph.java	/^    public Collection<V> getSuccessors(V vertex)$/;"	m	class:OrderedSparseMultigraph
getSuccessors	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^	public Collection<V> getSuccessors(V vertex) $/;"	m	class:SetHypergraph
getSuccessors	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public Collection<V> getSuccessors(V vertex)$/;"	m	class:SparseGraph
getSuccessors	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public Collection<V> getSuccessors(V vertex)$/;"	m	class:SparseMultigraph
getSuccessors	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public Collection<V> getSuccessors(V vertex)$/;"	m	class:UndirectedSparseGraph
getSuccessors	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public Collection<V> getSuccessors(V vertex) {$/;"	m	class:UndirectedSparseMultigraph
getSuccessors	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public Collection<V> getSuccessors(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getSuccessors	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized Collection<V> getSuccessors(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getSuccs_internal	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    protected Collection<V> getSuccs_internal(V vertex)$/;"	m	class:DirectedSparseGraph
getTheta	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	public double getTheta() { return theta; }$/;"	m	class:PolarPoint
getTolerance	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public double getTolerance()$/;"	m	class:AbstractIterativeScorer
getTrees	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public Collection<Tree<V, E>> getTrees() {$/;"	m	class:DelegateForest
getTrees	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public Collection<Tree<V, E>> getTrees() {$/;"	m	class:DelegateTree
getTrees	src/edu/uci/ics/jung/graph/Forest.java	/^	Collection<Tree<V,E>> getTrees();$/;"	m	interface:Forest
getTrees	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<Tree<V, E>> getTrees() $/;"	m	class:OrderedKAryTree
getTrees	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public Collection<Tree<V, E>> getTrees() {$/;"	m	class:Graphs.UnmodifiableForest
getTrees	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized Collection<Tree<V, E>> getTrees() {$/;"	m	class:Graphs.SynchronizedForest
getTrees	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    	public Collection<Tree<V, E>> getTrees() {$/;"	m	class:Graphs.UnmodifiableTree
getType	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^	public Type getType() {$/;"	m	class:GraphEvent
getUniformRootPrior	src/edu/uci/ics/jung/algorithms/scoring/util/ScoringUtils.java	/^    public static <V> Transformer<V, Double> getUniformRootPrior(Collection<V> roots)$/;"	m	class:ScoringUtils
getUnvisitedVertices	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    public Set<V> getUnvisitedVertices() {$/;"	m	class:BFSDistanceLabeler
getV	src/edu/uci/ics/jung/algorithms/scoring/util/VEPair.java	/^    public V getV()$/;"	m	class:VEPair
getValidatedEndpoints	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    protected Pair<V> getValidatedEndpoints(E edge, Pair<? extends V> endpoints)$/;"	m	class:AbstractGraph
getValue	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^    public V getValue() {$/;"	m	class:BasicMapEntry
getVertex	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected V getVertex(int i)$/;"	m	class:Lattice2DGenerator
getVertex	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected V getVertex(int i, int j)$/;"	m	class:Lattice2DGenerator
getVertex	src/edu/uci/ics/jung/algorithms/layout/GraphElementAccessor.java	/^    V getVertex(Layout<V,E> layout, double x, double y);$/;"	m	interface:GraphElementAccessor
getVertex	src/edu/uci/ics/jung/algorithms/layout/RadiusGraphElementAccessor.java	/^	public V getVertex(Layout<V,E> layout, double x, double y) {$/;"	m	class:RadiusGraphElementAccessor
getVertex	src/edu/uci/ics/jung/algorithms/layout/RadiusGraphElementAccessor.java	/^	public V getVertex(Layout<V,E> layout, double x, double y, double maxDistance) {$/;"	m	class:RadiusGraphElementAccessor
getVertex	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^		public V getVertex() {$/;"	m	class:GraphEvent.Vertex
getVertexCount	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^	protected int getVertexCount() {$/;"	m	class:AbstractRanker
getVertexCount	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public int getVertexCount()$/;"	m	class:DirectedSparseGraph
getVertexCount	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^	public int getVertexCount() {$/;"	m	class:DirectedSparseMultigraph
getVertexCount	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public int getVertexCount() {$/;"	m	class:GraphDecorator
getVertexCount	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    int getVertexCount();$/;"	m	interface:Hypergraph
getVertexCount	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public int getVertexCount() $/;"	m	class:OrderedKAryTree
getVertexCount	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public int getVertexCount()$/;"	m	class:SetHypergraph
getVertexCount	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public int getVertexCount()$/;"	m	class:SparseGraph
getVertexCount	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^	public int getVertexCount() {$/;"	m	class:SparseMultigraph
getVertexCount	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public int getVertexCount()$/;"	m	class:UndirectedSparseGraph
getVertexCount	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public int getVertexCount() {$/;"	m	class:UndirectedSparseMultigraph
getVertexCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public int getVertexCount() {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getVertexCount	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized int getVertexCount() {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getVertexPartitions	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^	public Collection<Set<V>> getVertexPartitions() $/;"	m	class:VertexPartition
getVertexPrior	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorerWithPriors.java	/^    protected S getVertexPrior(V v)$/;"	m	class:AbstractIterativeScorerWithPriors
getVertexPriors	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorerWithPriors.java	/^    public Transformer<V, ? extends S> getVertexPriors()$/;"	m	class:AbstractIterativeScorerWithPriors
getVertexRankScore	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public double getVertexRankScore(V v) {$/;"	m	class:AbstractRanker
getVertexRankScore	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public double getVertexRankScore(V v, Object key) {$/;"	m	class:AbstractRanker
getVertexRankScore	src/edu/uci/ics/jung/algorithms/importance/MarkovCentrality.java	/^    public double getVertexRankScore(V vert) {$/;"	m	class:MarkovCentrality
getVertexRankScores	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^	public Map<Object,Map<V, Number>> getVertexRankScores() {$/;"	m	class:AbstractRanker
getVertexRankScores	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^	public Map<V, Number> getVertexRankScores(Object key) {$/;"	m	class:AbstractRanker
getVertexScore	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public T getVertexScore(V v)$/;"	m	class:AbstractIterativeScorer
getVertexScore	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^	public Double getVertexScore(V v) $/;"	m	class:BetweennessCentrality
getVertexScore	src/edu/uci/ics/jung/algorithms/scoring/DegreeScorer.java	/^    public Integer getVertexScore(V v) $/;"	m	class:DegreeScorer
getVertexScore	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^	public Double getVertexScore(V v) $/;"	m	class:DistanceCentralityScorer
getVertexScore	src/edu/uci/ics/jung/algorithms/scoring/VertexScorer.java	/^    public S getVertexScore(V v);$/;"	m	interface:VertexScorer
getVertexToPartitionMap	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^	public Map<V,Set<V>> getVertexToPartitionMap() $/;"	m	class:VertexPartition
getVertices	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^	protected Collection<V> getVertices() {$/;"	m	class:AbstractRanker
getVertices	src/edu/uci/ics/jung/algorithms/layout/GraphElementAccessor.java	/^    Collection<V> getVertices(Layout<V,E> layout, Shape rectangle);$/;"	m	interface:GraphElementAccessor
getVertices	src/edu/uci/ics/jung/algorithms/layout/RadiusGraphElementAccessor.java	/^	public Collection<V> getVertices(Layout<V,E> layout, Shape rectangle) {$/;"	m	class:RadiusGraphElementAccessor
getVertices	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public Collection<V> getVertices()$/;"	m	class:DirectedSparseGraph
getVertices	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public Collection<V> getVertices() {$/;"	m	class:DirectedSparseMultigraph
getVertices	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public Collection<V> getVertices() {$/;"	m	class:GraphDecorator
getVertices	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    Collection<V> getVertices();$/;"	m	interface:Hypergraph
getVertices	src/edu/uci/ics/jung/graph/KPartiteGraph.java	/^    public Collection<V> getVertices(Predicate<V> partition);$/;"	m	interface:KPartiteGraph
getVertices	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public Collection<V> getVertices() $/;"	m	class:OrderedKAryTree
getVertices	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public Collection<V> getVertices()$/;"	m	class:SetHypergraph
getVertices	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public Collection<V> getVertices()$/;"	m	class:SparseGraph
getVertices	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public Collection<V> getVertices()$/;"	m	class:SparseMultigraph
getVertices	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public Collection<V> getVertices()$/;"	m	class:UndirectedSparseGraph
getVertices	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public Collection<V> getVertices() {$/;"	m	class:UndirectedSparseMultigraph
getVertices	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public Collection<V> getVertices() {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
getVertices	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized Collection<V> getVertices() {$/;"	m	class:Graphs.SynchronizedAbstractGraph
getVerticesInOrderVisited	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    public List<V> getVerticesInOrderVisited() {$/;"	m	class:BFSDistanceLabeler
getVoltageMatrix	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    protected DoubleMatrix2D getVoltageMatrix() {$/;"	m	class:RandomWalkSTBetweenness
getX	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	public double getX(V v) {$/;"	m	class:AbstractLayout
getY	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	public double getY(V v) {$/;"	m	class:AbstractLayout
graph	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^	private Graph<V,E> graph;$/;"	f	class:VertexPartition	file:
graph	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	protected Graph<V, E> graph;$/;"	f	class:AbstractLayout
graph	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	protected Forest<V,E> graph;$/;"	f	class:TreeLayout
graph	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected Hypergraph<V,E> graph;$/;"	f	class:AbstractIterativeScorer
graph	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^	protected Graph<V,E> graph;$/;"	f	class:BetweennessCentrality
graph	src/edu/uci/ics/jung/algorithms/scoring/DegreeScorer.java	/^    protected Hypergraph<V,?> graph;$/;"	f	class:DegreeScorer
graph	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^    protected Hypergraph<V, E> graph;$/;"	f	class:DistanceCentralityScorer
graph	src/edu/uci/ics/jung/algorithms/scoring/util/UniformDegreeWeight.java	/^    private Hypergraph<V, E> graph;$/;"	f	class:UniformDegreeWeight	file:
graph	src/edu/uci/ics/jung/algorithms/scoring/util/UniformInOut.java	/^    protected Graph<V,E> graph;$/;"	f	class:UniformInOut
graph	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest.java	/^	protected Graph<V,E> graph;$/;"	f	class:MinimumSpanningForest
graph	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest2.java	/^	protected Graph<V,E> graph;$/;"	f	class:MinimumSpanningForest2
graph	src/edu/uci/ics/jung/graph/util/Context.java	/^	public G graph;$/;"	f	class:Context
graphFactory	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    protected Factory<Graph<V,E>> graphFactory;$/;"	f	class:BarabasiAlbertGenerator
graphFactory	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^    private Factory<Graph<V,E>> graphFactory;$/;"	f	class:EppsteinPowerLawGenerator	file:
graphFactory	src/edu/uci/ics/jung/algorithms/generators/random/ErdosRenyiGenerator.java	/^    Factory<UndirectedGraph<V,E>> graphFactory;$/;"	f	class:ErdosRenyiGenerator
graphHeight	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	static int graphHeight;$/;"	f	class:DAGLayout
graphToSparseMatrix	src/edu/uci/ics/jung/algorithms/matrix/GraphMatrixOperations.java	/^    public static <V,E> SparseDoubleMatrix2D graphToSparseMatrix(Graph<V,E> g)$/;"	m	class:GraphMatrixOperations
graphToSparseMatrix	src/edu/uci/ics/jung/algorithms/matrix/GraphMatrixOperations.java	/^    public static <V,E> SparseDoubleMatrix2D graphToSparseMatrix(Graph<V,E> g, Map<E,Number> nev)$/;"	m	class:GraphMatrixOperations
graph_factory	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected Factory<? extends Graph<V, E>> graph_factory;$/;"	f	class:Lattice2DGenerator
graph_factory	src/edu/uci/ics/jung/algorithms/transformation/VertexPartitionCollapser.java	/^    protected Factory<Graph<CV,CE>> graph_factory;$/;"	f	class:VertexPartitionCollapser
growSubTree	src/edu/uci/ics/jung/graph/util/TreeUtils.java	/^	public static <V,E> void growSubTree(Forest<V,E> tree, Forest<V,E> subTree, V root) {$/;"	m	class:TreeUtils
gt	src/edu/uci/ics/jung/graph/util/package.html	/^<li\/><code>Pair&lt;T&gt;<\/code>: an implementation of <code>Collection<\/code> designed for $/;"	external variable declarations
handleGraphEvent	src/edu/uci/ics/jung/graph/event/GraphEventListener.java	/^	void handleGraphEvent(GraphEvent<V,E> evt);$/;"	m	interface:GraphEventListener
hasAugmentingPath	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    protected boolean hasAugmentingPath() {$/;"	m	class:EdmondsKarpMaxFlow
hasConverged	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    public boolean hasConverged() {$/;"	m	class:IterativeProcess
hasEqualEdgeType	src/edu/uci/ics/jung/graph/AbstractTypedGraph.java	/^    protected boolean hasEqualEdgeType(EdgeType edge_type)$/;"	m	class:AbstractTypedGraph
hasNext	src/edu/uci/ics/jung/graph/util/Pair.java	/^        public boolean hasNext()$/;"	m	class:Pair.PairIterator
hashCode	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^    public int hashCode() {$/;"	m	class:BasicMapEntry
hashCode	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public int hashCode() {$/;"	m	class:ConstantMap
hashCode	src/edu/uci/ics/jung/graph/util/Context.java	/^	public int hashCode() {$/;"	m	class:Context
hashCode	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public int hashCode() $/;"	m	class:Pair
heap	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^	private Vector<T> heap = new Vector<T>();            \/\/ holds the heap as an implicit binary tree$/;"	f	class:MapBinaryHeap	file:
heavy	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^		T heavy;$/;"	f	class:WeightedChoice.ItemPair
height	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    protected int height;$/;"	f	class:OrderedKAryTree
hierarchy	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    public double hierarchy(V v)$/;"	m	class:StructuralHoles
high	src/edu/uci/ics/jung/algorithms/cluster/BicomponentClusterer.java	/^    protected Map<V,Number> high;$/;"	f	class:BicomponentClusterer
hub	src/edu/uci/ics/jung/algorithms/scoring/HITS.java	/^    	public double hub;$/;"	f	class:HITS.Scores
hyperedges_are_self_loops	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected boolean hyperedges_are_self_loops = false;$/;"	f	class:AbstractIterativeScorer
ignore_missing	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^    protected boolean ignore_missing;$/;"	f	class:DistanceCentralityScorer
ignore_self_distances	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^    protected boolean ignore_self_distances;$/;"	f	class:DistanceCentralityScorer
inDegree	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public int inDegree(V vertex)$/;"	m	class:AbstractGraph
inDegree	src/edu/uci/ics/jung/graph/Graph.java	/^    int inDegree(V vertex);$/;"	m	interface:Graph
inDegree	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public int inDegree(V vertex) {$/;"	m	class:GraphDecorator
inDegree	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    int inDegree(V vertex);$/;"	m	interface:Hypergraph
inDegree	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public int inDegree(V vertex) $/;"	m	class:OrderedKAryTree
inDegree	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^	public int inDegree(V vertex) $/;"	m	class:SetHypergraph
inDegree	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public int inDegree(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
inDegree	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized int inDegree(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
incomingEdges	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^        List<E> incomingEdges;$/;"	f	class:BetweennessCentrality.BetweennessData
incomingEdges	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^		protected LinkedHashMap<V,E> incomingEdges;$/;"	f	class:DijkstraShortestPath.SourcePathData
incrementRankScore	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^    protected void incrementRankScore(V v, double rankValue) {$/;"	m	class:KStepMarkov
incrementRankScore	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    protected void incrementRankScore(V v, double rankValue) {$/;"	m	class:WeightedNIPaths
incrementsLeft	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	int incrementsLeft;$/;"	f	class:DAGLayout
index_vertex	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    protected Map<V,Integer> index_vertex;$/;"	f	class:BarabasiAlbertGenerator
init_vertices	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    protected int init_vertices;$/;"	f	class:BarabasiAlbertGenerator
initialAdaption	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private double initialAdaption;$/;"	f	class:ISOMLayout	file:
initialize	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    private void initialize(Set<V> seedVertices) {$/;"	m	class:BarabasiAlbertGenerator	file:
initialize	src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java	/^    private void initialize()$/;"	m	class:KleinbergSmallWorldGenerator	file:
initialize	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void initialize(Graph<V,E> graph, boolean isNodeRanker, $/;"	m	class:AbstractRanker
initialize	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public void initialize() {$/;"	m	class:AggregateLayout
initialize	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^	public void initialize() $/;"	m	class:CircleLayout
initialize	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	public void initialize() {$/;"	m	class:DAGLayout
initialize	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    public void initialize() {$/;"	m	class:FRLayout
initialize	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    public void initialize() {$/;"	m	class:FRLayout2
initialize	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	public void initialize() {$/;"	m	class:ISOMLayout
initialize	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^    public void initialize() {$/;"	m	class:KKLayout
initialize	src/edu/uci/ics/jung/algorithms/layout/Layout.java	/^	void initialize();$/;"	m	interface:Layout
initialize	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^	public void initialize() {$/;"	m	class:LayoutDecorator
initialize	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public void initialize() {$/;"	m	class:SpringLayout
initialize	src/edu/uci/ics/jung/algorithms/layout/StaticLayout.java	/^    public void initialize() {}$/;"	m	class:StaticLayout
initialize	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	public void initialize() {$/;"	m	class:TreeLayout
initialize	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected void initialize()$/;"	m	class:AbstractIterativeScorer
initialize	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorerWithPriors.java	/^    public void initialize()$/;"	m	class:AbstractIterativeScorerWithPriors
initialize	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^	protected void initialize(Graph<V,E> graph)$/;"	m	class:BetweennessCentrality
initialize	src/edu/uci/ics/jung/algorithms/scoring/KStepMarkov.java	/^	private void initialize(int steps)$/;"	m	class:KStepMarkov	file:
initialize	src/edu/uci/ics/jung/algorithms/scoring/VoltageScorer.java	/^    public void initialize()$/;"	m	class:VoltageScorer
initialize	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    protected void initialize(Hypergraph<V,E> g, Set<V> rootSet) {$/;"	m	class:BFSDistanceLabeler
initialize	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    private void initialize(Comparator<T> comp)$/;"	m	class:MapBinaryHeap	file:
initializeData	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^    private void initializeData(Graph<V,E> g, Map<V,BetweennessData> decorator) {$/;"	m	class:BetweennessCentrality	file:
initializeGraph	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^    protected Graph<V,E> initializeGraph() {$/;"	m	class:EppsteinPowerLawGenerator
initializeIterations	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    protected void initializeIterations() {$/;"	m	class:EdmondsKarpMaxFlow
initializeIterations	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    protected void initializeIterations() {$/;"	m	class:IterativeProcess
initializeLocation	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	private void initializeLocation($/;"	m	class:DAGLayout	file:
initializeRankings	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^    protected void initializeRankings() {$/;"	m	class:KStepMarkov
initialized	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	protected boolean initialized;$/;"	f	class:AbstractLayout
innerBounds	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private Rectangle2D innerBounds = new Rectangle2D.Double();$/;"	f	class:FRLayout2	file:
instance	src/edu/uci/ics/jung/graph/util/Context.java	/^	private static Context instance = new Context();$/;"	f	class:Context	file:
isDest	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public boolean isDest(V vertex, E edge)$/;"	m	class:DirectedSparseGraph
isDest	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public boolean isDest(V vertex, E edge) {$/;"	m	class:DirectedSparseMultigraph
isDest	src/edu/uci/ics/jung/graph/Graph.java	/^    boolean isDest(V vertex, E edge);$/;"	m	interface:Graph
isDest	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean isDest(V vertex, E edge) {$/;"	m	class:GraphDecorator
isDest	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean isDest(V vertex, E edge) $/;"	m	class:OrderedKAryTree
isDest	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public boolean isDest(V vertex, E edge)$/;"	m	class:SparseGraph
isDest	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public boolean isDest(V vertex, E edge) {$/;"	m	class:SparseMultigraph
isDest	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public boolean isDest(V vertex, E edge)$/;"	m	class:UndirectedSparseGraph
isDest	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public boolean isDest(V vertex, E edge) {$/;"	m	class:UndirectedSparseMultigraph
isDest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean isDest(V vertex, E edge) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
isDest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean isDest(V vertex, E edge) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
isDest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	    public synchronized boolean isDest(V vertex, E edge) {$/;"	m	class:Graphs.SynchronizedDirectedGraph
isDest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    	public boolean isDest(V vertex, E edge) {$/;"	m	class:Graphs.UnmodifiableDirectedGraph
isDisconnectedGraphOK	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public boolean isDisconnectedGraphOK()$/;"	m	class:AbstractIterativeScorer
isEmpty	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public boolean isEmpty() {$/;"	m	class:ConstantMap
isEmpty	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^	public boolean isEmpty()$/;"	m	class:MapBinaryHeap
isEmpty	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public boolean isEmpty() {$/;"	m	class:Pair
isIncident	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public boolean isIncident(V vertex, E edge)$/;"	m	class:AbstractGraph
isIncident	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean isIncident(V vertex, E edge) {$/;"	m	class:GraphDecorator
isIncident	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    boolean isIncident(V vertex, E edge);$/;"	m	interface:Hypergraph
isIncident	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean isIncident(V vertex, E edge) $/;"	m	class:OrderedKAryTree
isIncident	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public boolean isIncident(V vertex, H edge)$/;"	m	class:SetHypergraph
isIncident	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean isIncident(V vertex, E edge) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
isIncident	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean isIncident(V vertex, E edge) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
isIncremental	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    public boolean isIncremental() {$/;"	m	class:FRLayout
isIncremental	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    public boolean isIncremental() {$/;"	m	class:FRLayout2
isIncremental	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	public boolean isIncremental() {$/;"	m	class:ISOMLayout
isIncremental	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	public boolean isIncremental() {$/;"	m	class:KKLayout
isIncremental	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public boolean isIncremental() {$/;"	m	class:SpringLayout
isInternal	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public boolean isInternal(V v) {$/;"	m	class:DelegateForest
isInternal	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public boolean isInternal(V v) {$/;"	m	class:DelegateTree
isLeaf	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public boolean isLeaf(V v) {$/;"	m	class:DelegateForest
isLeaf	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public boolean isLeaf(V v) {$/;"	m	class:DelegateTree
isLeaf	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean isLeaf(V vertex)$/;"	m	class:OrderedKAryTree
isLocked	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^    public boolean isLocked(V v) {$/;"	m	class:AbstractLayout
isLocked	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public boolean isLocked(V v) {$/;"	m	class:AggregateLayout
isLocked	src/edu/uci/ics/jung/algorithms/layout/Layout.java	/^    boolean isLocked(V v);$/;"	m	interface:Layout
isLocked	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public boolean isLocked(V v) {$/;"	m	class:LayoutDecorator
isLocked	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	public boolean isLocked(V v) {$/;"	m	class:TreeLayout
isNeighbor	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public boolean isNeighbor(V v1, V v2)$/;"	m	class:AbstractGraph
isNeighbor	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean isNeighbor(V v1, V v2) {$/;"	m	class:GraphDecorator
isNeighbor	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    boolean isNeighbor(V v1, V v2);$/;"	m	interface:Hypergraph
isNeighbor	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean isNeighbor(V v1, V v2) $/;"	m	class:OrderedKAryTree
isNeighbor	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public boolean isNeighbor(V v1, V v2)$/;"	m	class:SetHypergraph
isNeighbor	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean isNeighbor(V v1, V v2) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
isNeighbor	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean isNeighbor(V v1, V v2) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
isPredecessor	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public boolean isPredecessor(V v1, V v2)$/;"	m	class:AbstractGraph
isPredecessor	src/edu/uci/ics/jung/graph/Graph.java	/^    boolean isPredecessor(V v1, V v2);$/;"	m	interface:Graph
isPredecessor	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean isPredecessor(V v1, V v2) {$/;"	m	class:GraphDecorator
isPredecessor	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean isPredecessor(V v1, V v2) $/;"	m	class:OrderedKAryTree
isPredecessor	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean isPredecessor(V v1, V v2) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
isPredecessor	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean isPredecessor(V v1, V v2) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
isRankingEdges	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public boolean isRankingEdges() {$/;"	m	class:AbstractRanker
isRankingNodes	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public boolean isRankingNodes() {$/;"	m	class:AbstractRanker
isRoot	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public boolean isRoot(V v) {$/;"	m	class:DelegateForest
isRoot	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public boolean isRoot(V v) {$/;"	m	class:DelegateTree
isRoot	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean isRoot(V vertex)$/;"	m	class:OrderedKAryTree
isSource	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public boolean isSource(V vertex, E edge)$/;"	m	class:DirectedSparseGraph
isSource	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public boolean isSource(V vertex, E edge) {$/;"	m	class:DirectedSparseMultigraph
isSource	src/edu/uci/ics/jung/graph/Graph.java	/^    boolean isSource(V vertex, E edge);$/;"	m	interface:Graph
isSource	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean isSource(V vertex, E edge) {$/;"	m	class:GraphDecorator
isSource	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean isSource(V vertex, E edge) $/;"	m	class:OrderedKAryTree
isSource	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public boolean isSource(V vertex, E edge)$/;"	m	class:SparseGraph
isSource	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public boolean isSource(V vertex, E edge) {$/;"	m	class:SparseMultigraph
isSource	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public boolean isSource(V vertex, E edge)$/;"	m	class:UndirectedSparseGraph
isSource	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public boolean isSource(V vertex, E edge) {$/;"	m	class:UndirectedSparseMultigraph
isSource	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean isSource(V vertex, E edge) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
isSource	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean isSource(V vertex, E edge) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
isSource	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    	public boolean isSource(V vertex, E edge) {$/;"	m	class:Graphs.UnmodifiableDirectedGraph
isSource	src/edu/uci/ics/jung/graph/util/Graphs.java	/^    	public synchronized boolean isSource(V vertex, E edge) {$/;"	m	class:Graphs.SynchronizedDirectedGraph
isStructurallyEquivalent	src/edu/uci/ics/jung/algorithms/blockmodel/StructurallyEquivalent.java	/^	protected boolean isStructurallyEquivalent(Graph<V,?> g, V v1, V v2) {$/;"	m	class:StructurallyEquivalent
isSuccessor	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public boolean isSuccessor(V v1, V v2)$/;"	m	class:AbstractGraph
isSuccessor	src/edu/uci/ics/jung/graph/Graph.java	/^    boolean isSuccessor(V v1, V v2);$/;"	m	interface:Graph
isSuccessor	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean isSuccessor(V v1, V v2) {$/;"	m	class:GraphDecorator
isSuccessor	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean isSuccessor(V v1, V v2) $/;"	m	class:OrderedKAryTree
isSuccessor	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean isSuccessor(V v1, V v2) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
isSuccessor	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean isSuccessor(V v1, V v2) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
is_directed	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected boolean is_directed;$/;"	f	class:Lattice2DGenerator
is_toroidal	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected boolean is_toroidal;$/;"	f	class:Lattice2DGenerator
isomVertexData	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	Map<V, ISOMVertexData> isomVertexData =$/;"	f	class:ISOMLayout
item_pairs	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^	private List<ItemPair> item_pairs;$/;"	f	class:WeightedChoice	file:
iterations	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    private int iterations;$/;"	f	class:IterativeProcess	file:
iterator	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    public Iterator<T> iterator()$/;"	m	class:MapBinaryHeap
iterator	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public Iterator<T> iterator() {$/;"	m	class:Pair
key	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^    final K key;$/;"	f	class:BasicMapEntry
keySet	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public Set<K> keySet() {$/;"	m	class:ConstantMap
kmc	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    protected KMeansClusterer<V> kmc;$/;"	f	class:VoltageClusterer
lChild	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    private int lChild(int i)$/;"	m	class:MapBinaryHeap	file:
labelDistances	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    public void labelDistances(Hypergraph<V,E> graph, Set<V> rootSet) {$/;"	m	class:BFSDistanceLabeler
labelDistances	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    public void labelDistances(Hypergraph<V,E> graph, V root) {$/;"	m	class:BFSDistanceLabeler
layouts	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	protected Map<Layout<V,E>,Point2D> layouts = new HashMap<Layout<V,E>,Point2D>();$/;"	f	class:AggregateLayout
lengthFunction	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    protected Transformer<E, Integer> lengthFunction;$/;"	f	class:SpringLayout
length_factor	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^    private double length_factor = 0.9;$/;"	f	class:KKLayout	file:
light	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^		T light;$/;"	f	class:WeightedChoice.ItemPair
link	src/edu/uci/ics/jung/algorithms/metrics/TriadicCensus.java	/^	protected static <V,E> boolean link(Graph<V,E> g, V a, V b) {$/;"	m	class:TriadicCensus
listenerList	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^	List<GraphEventListener<V,E>> listenerList = $/;"	f	class:ObservableGraph
localConstraint	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    public double localConstraint(V v1, V v2) $/;"	m	class:StructuralHoles
locations	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^    protected Map<V, Point2D> locations = $/;"	f	class:AbstractLayout
locations	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    protected Map<V, Point2D> locations = $/;"	f	class:TreeLayout
lock	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	public void lock(V v, boolean state) {$/;"	m	class:AbstractLayout
lock	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	public void lock(boolean lock) {$/;"	m	class:AbstractLayout
lock	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public void lock(V v, boolean state) {$/;"	m	class:AggregateLayout
lock	src/edu/uci/ics/jung/algorithms/layout/Layout.java	/^	void lock(V v, boolean state);$/;"	m	interface:Layout
lock	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public void lock(V v, boolean state) {$/;"	m	class:LayoutDecorator
lock	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	public void lock(V v, boolean state) {$/;"	m	class:TreeLayout
loopCountMax	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^    protected int loopCountMax = 4;$/;"	f	class:SpringLayout2
lt	src/edu/uci/ics/jung/graph/util/package.html	/^<li\/><code>Pair&lt;T&gt;<\/code>: an implementation of <code>Collection<\/code> designed for $/;"	external variable declarations
mAlpha	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    private double mAlpha;$/;"	f	class:WeightedNIPaths	file:
mCurrentList	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    private List<V> mCurrentList;$/;"	f	class:BFSDistanceLabeler	file:
mDistanceMap	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^	private Map<V,Map<V,Number>> mDistanceMap;$/;"	f	class:UnweightedShortestPath	file:
mEdgeConnectionProbability	src/edu/uci/ics/jung/algorithms/generators/random/ErdosRenyiGenerator.java	/^    private double mEdgeConnectionProbability;$/;"	f	class:ErdosRenyiGenerator	file:
mElapsedTimeSteps	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    private int mElapsedTimeSteps;$/;"	f	class:BarabasiAlbertGenerator	file:
mFlowGraph	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private DirectedGraph<V,E> mFlowGraph;$/;"	f	class:EdmondsKarpMaxFlow	file:
mGraph	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    private Graph<V, E> mGraph = null;$/;"	f	class:BarabasiAlbertGenerator	file:
mGraph	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    private Graph<V,E> mGraph;$/;"	f	class:AbstractRanker	file:
mGraph	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^	private Hypergraph<V,E> mGraph;$/;"	f	class:UnweightedShortestPath	file:
mIncomingEdgeMap	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^	private Map<V,Map<V,E>> mIncomingEdgeMap;$/;"	f	class:UnweightedShortestPath	file:
mIndexer	src/edu/uci/ics/jung/algorithms/importance/MarkovCentrality.java	/^    private BidiMap<V,Integer> mIndexer;$/;"	f	class:MarkovCentrality	file:
mIndexer	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    private BidiMap<V,Integer> mIndexer;$/;"	f	class:RandomWalkSTBetweenness	file:
mMaxDegree	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^    private double mMaxDegree;$/;"	f	class:EppsteinPowerLawGenerator	file:
mMaxDepth	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    private int mMaxDepth;$/;"	f	class:WeightedNIPaths	file:
mMaxFlow	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private int mMaxFlow;$/;"	f	class:EdmondsKarpMaxFlow	file:
mMaxIterations	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private int mMaxIterations = 700;$/;"	f	class:FRLayout	file:
mMinCutEdges	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private Set<E> mMinCutEdges;$/;"	f	class:EdmondsKarpMaxFlow	file:
mNormalizeRankings	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    private boolean mNormalizeRankings;$/;"	f	class:AbstractRanker	file:
mNumEdges	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^    private int mNumEdges;$/;"	f	class:EppsteinPowerLawGenerator	file:
mNumEdgesToAttachPerStep	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    private int mNumEdgesToAttachPerStep;$/;"	f	class:BarabasiAlbertGenerator	file:
mNumEdgesToRemove	src/edu/uci/ics/jung/algorithms/cluster/EdgeBetweennessClusterer.java	/^    private int mNumEdgesToRemove;$/;"	f	class:EdgeBetweennessClusterer	file:
mNumIterations	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^    private int mNumIterations;$/;"	f	class:EppsteinPowerLawGenerator	file:
mNumSteps	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^    private int mNumSteps;$/;"	f	class:KStepMarkov	file:
mNumVertices	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^    private int mNumVertices;$/;"	f	class:EppsteinPowerLawGenerator	file:
mNumVertices	src/edu/uci/ics/jung/algorithms/generators/random/ErdosRenyiGenerator.java	/^    private int mNumVertices;$/;"	f	class:ErdosRenyiGenerator	file:
mOriginalGraph	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private DirectedGraph<V,E> mOriginalGraph;$/;"	f	class:EdmondsKarpMaxFlow	file:
mPredecessorMap	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    private Map<V,HashSet<V>> mPredecessorMap;$/;"	f	class:BFSDistanceLabeler	file:
mPreviousRankingsMap	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^    HashMap<V,Number> mPreviousRankingsMap;$/;"	f	class:KStepMarkov
mPriors	src/edu/uci/ics/jung/algorithms/importance/RelativeAuthorityRanker.java	/^    private Set<V> mPriors;$/;"	f	class:RelativeAuthorityRanker	file:
mPriors	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    private Set<V> mPriors;$/;"	f	class:WeightedNIPaths	file:
mRandom	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    private Random mRandom;$/;"	f	class:BarabasiAlbertGenerator	file:
mRandom	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^    private Random mRandom;$/;"	f	class:EppsteinPowerLawGenerator	file:
mRandom	src/edu/uci/ics/jung/algorithms/generators/random/ErdosRenyiGenerator.java	/^    private Random mRandom;$/;"	f	class:ErdosRenyiGenerator	file:
mRankEdges	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    private boolean mRankEdges;$/;"	f	class:AbstractRanker	file:
mRankNodes	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    private boolean mRankNodes;$/;"	f	class:AbstractRanker	file:
mRankings	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    private List<Ranking<?>> mRankings;$/;"	f	class:AbstractRanker	file:
mRankings	src/edu/uci/ics/jung/algorithms/importance/MarkovCentrality.java	/^    private DoubleMatrix1D mRankings;$/;"	f	class:MarkovCentrality	file:
mRemoveRankScoresOnFinalize	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    private boolean mRemoveRankScoresOnFinalize;$/;"	f	class:AbstractRanker	file:
mSinkPartitionNodes	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private Set<V> mSinkPartitionNodes;$/;"	f	class:EdmondsKarpMaxFlow	file:
mSource	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    V mSource;$/;"	f	class:RandomWalkSTBetweenness
mSourcePartitionNodes	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private Set<V> mSourcePartitionNodes;$/;"	f	class:EdmondsKarpMaxFlow	file:
mTarget	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    V mTarget;$/;"	f	class:RandomWalkSTBetweenness
mUnvisitedVertices	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    private Set<V> mUnvisitedVertices;$/;"	f	class:BFSDistanceLabeler	file:
mVerticesInOrderVisited	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    private List<V> mVerticesInOrderVisited;$/;"	f	class:BFSDistanceLabeler	file:
mVoltageMatrix	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    private DoubleMatrix2D mVoltageMatrix;$/;"	f	class:RandomWalkSTBetweenness	file:
m_currentPoint	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    protected transient Point m_currentPoint = new Point();$/;"	f	class:TreeLayout
manualSuspend	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	protected boolean manualSuspend;$/;"	f	class:VisRunner
map	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^        private Map<V, double[]> map;$/;"	f	class:VoltageClusterer.MapValueArrayComparator	file:
map	src/edu/uci/ics/jung/algorithms/util/MapSettableTransformer.java	/^    protected Map<I,O> map;$/;"	f	class:MapSettableTransformer
mapTo1DMatrix	src/edu/uci/ics/jung/algorithms/matrix/GraphMatrixOperations.java	/^    public static <V> DoubleMatrix1D mapTo1DMatrix(Map<V,Number> map)$/;"	m	class:GraphMatrixOperations
matrices	src/edu/uci/ics/jung/algorithms/matrix/package.html	/^from Colt matrices, and some matrix algorithms.$/;"	external variable declarations
matrixToGraph	src/edu/uci/ics/jung/algorithms/matrix/GraphMatrixOperations.java	/^    public static <V,E> Graph<V,E> matrixToGraph(DoubleMatrix2D matrix, $/;"	m	class:GraphMatrixOperations
matrixToGraph	src/edu/uci/ics/jung/algorithms/matrix/GraphMatrixOperations.java	/^    public static <V,E> Graph<V,E> matrixToGraph(DoubleMatrix2D matrix,$/;"	m	class:GraphMatrixOperations
maxDistance	src/edu/uci/ics/jung/algorithms/layout/RadiusGraphElementAccessor.java	/^    protected double maxDistance;$/;"	f	class:RadiusGraphElementAccessor
maxEpoch	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private int maxEpoch;$/;"	f	class:ISOMLayout	file:
maxIterations	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private int maxIterations = 700;$/;"	f	class:FRLayout2	file:
maxIterations	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^    private int maxIterations = 2000;$/;"	f	class:KKLayout	file:
maxScaledMutualEdgeWeight	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    protected double maxScaledMutualEdgeWeight(V v1, V v2)$/;"	m	class:StructuralHoles
max_delta	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected double max_delta;$/;"	f	class:AbstractIterativeScorer
max_dimension	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private double max_dimension;$/;"	f	class:FRLayout	file:
max_dimension	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private double max_dimension;$/;"	f	class:FRLayout2	file:
max_distance	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    protected double max_distance;$/;"	f	class:DijkstraDistance
max_iterations	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected int max_iterations;$/;"	f	class:AbstractIterativeScorer
max_iterations	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    protected int max_iterations;$/;"	f	class:KMeansClusterer
max_targets	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    protected int max_targets;$/;"	f	class:DijkstraDistance
maximumIterations	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    private int maximumIterations = 50;$/;"	f	class:IterativeProcess	file:
mean	src/edu/uci/ics/jung/algorithms/util/DiscreteDistribution.java	/^    public static double[] mean(Collection<double[]> distributions)$/;"	m	class:DiscreteDistribution
mean	src/edu/uci/ics/jung/algorithms/util/DiscreteDistribution.java	/^    public static double[] mean(double[][] distributions)$/;"	m	class:DiscreteDistribution
meanSquareVel	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	double meanSquareVel;$/;"	f	class:DAGLayout
mergePaths	src/edu/uci/ics/jung/algorithms/matrix/MatrixElementOperations.java	/^    public void mergePaths(E e, Object pathData); $/;"	m	interface:MatrixElementOperations
mergePaths	src/edu/uci/ics/jung/algorithms/matrix/RealMatrixElementOperations.java	/^	public void mergePaths(E e, Object pathData) $/;"	m	class:RealMatrixElementOperations
minAdaption	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private double minAdaption;$/;"	f	class:ISOMLayout	file:
minLevels	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	private Map<V,Number> minLevels = new HashMap<V,Number>();$/;"	f	class:DAGLayout	file:
minRadius	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private int minRadius;$/;"	f	class:ISOMLayout	file:
mod	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected int mod(int i, int modulus) $/;"	m	class:Lattice2DGenerator
moveNodes	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	protected void moveNodes() {$/;"	m	class:DAGLayout
moveNodes	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    protected void moveNodes()$/;"	m	class:SpringLayout
moveNodes	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^    protected void moveNodes() {$/;"	m	class:SpringLayout2
mutualWeight	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    protected double mutualWeight(V v1, V v2)$/;"	m	class:StructuralHoles
nev	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    protected Transformer<E,? extends Number> nev;$/;"	f	class:DijkstraDistance
newVertexEncountered	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    private void newVertexEncountered(int sourcePathIndex, V dest, V root) {$/;"	m	class:WeightedNIPaths	file:
next	src/edu/uci/ics/jung/graph/util/Pair.java	/^        public T next()$/;"	m	class:Pair.PairIterator
nextItem	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^	public T nextItem()$/;"	m	class:WeightedChoice
norm	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^        protected double norm()$/;"	m	class:FRLayout.FRVertexData
normalize	src/edu/uci/ics/jung/algorithms/util/DiscreteDistribution.java	/^    public static void normalize(double[] counts, double alpha)$/;"	m	class:DiscreteDistribution
normalizeEdgeTransitionWeights	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void normalizeEdgeTransitionWeights() {$/;"	m	class:AbstractRanker
normalizeRankings	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void normalizeRankings() {$/;"	m	class:AbstractRanker
normalizeScores	src/edu/uci/ics/jung/algorithms/scoring/HITSWithPriors.java	/^	protected void normalizeScores() {$/;"	m	class:HITSWithPriors
normalizedMutualEdgeWeight	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    protected double normalizedMutualEdgeWeight(V v1, V v2)$/;"	m	class:StructuralHoles
numIterations	src/edu/uci/ics/jung/algorithms/generators/EvolvingGraphGenerator.java	/^    int numIterations();$/;"	m	interface:EvolvingGraphGenerator
numIterations	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    public int numIterations() {$/;"	m	class:BarabasiAlbertGenerator
numPartitions	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^	public int numPartitions() $/;"	m	class:VertexPartition
numRoots	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	static int numRoots;$/;"	f	class:DAGLayout
numSPs	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^        double numSPs;$/;"	f	class:BetweennessCentrality.BetweennessData
numSPs	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^        double numSPs;$/;"	f	class:BetweennessCentrality.BetweennessData
num_candidates	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    protected int num_candidates;$/;"	f	class:VoltageClusterer
num_connections	src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java	/^    private int num_connections = 1;$/;"	f	class:KleinbergSmallWorldGenerator	file:
object_indices	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    private Map<T,Integer> object_indices = new HashMap<T,Integer>(); \/\/ maps each object in the heap to its index in the heap$/;"	f	class:MapBinaryHeap	file:
offer	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^	public boolean offer(T o) $/;"	m	class:MapBinaryHeap
offset	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^        protected void offset(double x, double y)$/;"	m	class:FRLayout.FRVertexData
offsetVertex	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	protected void offsetVertex(V v, double xOffset, double yOffset) {$/;"	m	class:AbstractLayout
onFinalize	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void onFinalize(Object e) {}$/;"	m	class:AbstractRanker
onFinalize	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    protected void onFinalize(Object udc) {$/;"	m	class:WeightedNIPaths
order	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    protected int order;$/;"	f	class:OrderedKAryTree
ordering	src/edu/uci/ics/jung/graph/package.html	/^natural ordering, or a specified <code>Comparator<\/code>$/;"	external variable declarations
organizationalMeasure	src/edu/uci/ics/jung/algorithms/metrics/StructuralHoles.java	/^    protected double organizationalMeasure(Graph<V,E> g, V v) {$/;"	m	class:StructuralHoles
originalPos	src/edu/uci/ics/jung/algorithms/importance/Ranking.java	/^    public int originalPos;$/;"	f	class:Ranking
outDegree	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public int outDegree(V vertex)$/;"	m	class:AbstractGraph
outDegree	src/edu/uci/ics/jung/graph/Graph.java	/^    int outDegree(V vertex);$/;"	m	interface:Graph
outDegree	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public int outDegree(V vertex) {$/;"	m	class:GraphDecorator
outDegree	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    int outDegree(V vertex);$/;"	m	interface:Hypergraph
outDegree	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public int outDegree(V vertex) $/;"	m	class:OrderedKAryTree
outDegree	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^	public int outDegree(V vertex) $/;"	m	class:SetHypergraph
outDegree	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public int outDegree(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
outDegree	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized int outDegree(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
output	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    private Map<V, T> output;$/;"	f	class:AbstractIterativeScorer	file:
output	src/edu/uci/ics/jung/algorithms/scoring/DistanceCentralityScorer.java	/^    protected Map<V, Double> output;$/;"	f	class:DistanceCentralityScorer
output_reversed	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected boolean output_reversed;$/;"	f	class:AbstractIterativeScorer
pairs	src/edu/uci/ics/jung/graph/util/TestGraphs.java	/^	public static String[][] pairs = { { "a", "b", "3" }, {$/;"	f	class:TestGraphs
parent	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    private int parent(int i)$/;"	m	class:MapBinaryHeap	file:
parentCapacityMap	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private Map<V,Number> parentCapacityMap = new HashMap<V,Number>();$/;"	f	class:EdmondsKarpMaxFlow	file:
parentMap	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private Map<V,V> parentMap = new HashMap<V,V>();$/;"	f	class:EdmondsKarpMaxFlow	file:
parent_edge	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^		E parent_edge;$/;"	f	class:OrderedKAryTree.VertexData
parents	src/edu/uci/ics/jung/algorithms/cluster/BicomponentClusterer.java	/^    protected Map<V,V> parents;$/;"	f	class:BicomponentClusterer
pathIndices	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    private Map<E,Number> pathIndices = new HashMap<E,Number>();$/;"	f	class:WeightedNIPaths	file:
pathsSeenMap	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    private Map<V,Set<Number>> pathsSeenMap = new HashMap<V,Set<Number>>();$/;"	f	class:WeightedNIPaths	file:
pause	src/edu/uci/ics/jung/algorithms/layout/util/Relaxer.java	/^	void pause();$/;"	m	interface:Relaxer
pause	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	public void pause() {$/;"	m	class:VisRunner
pauseObject	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	public Object pauseObject = new String("PAUSE OBJECT");$/;"	f	class:VisRunner
peek	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^	public T peek()$/;"	m	class:MapBinaryHeap
percolateDown	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    private void percolateDown(int cur)$/;"	m	class:MapBinaryHeap	file:
percolateUp	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    private int percolateUp(int cur, T o)$/;"	m	class:MapBinaryHeap	file:
polarLocations	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^    protected Map<V,PolarPoint> polarLocations =$/;"	f	class:BalloonLayout
polarLocations	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^    protected Map<V,PolarPoint> polarLocations;$/;"	f	class:RadialTreeLayout
polarToCartesian	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	public static Point2D polarToCartesian(PolarPoint polar) {$/;"	m	class:PolarPoint
polarToCartesian	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	public static Point2D polarToCartesian(double theta, double radius) {$/;"	m	class:PolarPoint
poll	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^	public T poll() $/;"	m	class:MapBinaryHeap
pop	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    public T pop() throws NoSuchElementException$/;"	m	class:MapBinaryHeap
populateTarget	src/edu/uci/ics/jung/algorithms/transformation/FoldingTransformer.java	/^    private static <S,T> void populateTarget(Graph<S, Collection<T>> target, T e,$/;"	m	class:FoldingTransformer	file:
position	src/edu/uci/ics/jung/graph/util/Pair.java	/^        int position;$/;"	f	class:Pair.PairIterator
precision	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    private double precision;$/;"	f	class:IterativeProcess	file:
predecessors	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^        List<V> predecessors;$/;"	f	class:BetweennessCentrality.BetweennessData
prerelax	src/edu/uci/ics/jung/algorithms/layout/util/Relaxer.java	/^	void prerelax();$/;"	m	interface:Relaxer
prerelax	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	public void prerelax() {$/;"	m	class:VisRunner
printRankings	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public void printRankings(boolean verbose,boolean printScore) {$/;"	m	class:AbstractRanker
priorRankScoreMap	src/edu/uci/ics/jung/algorithms/importance/RelativeAuthorityRanker.java	/^    protected Map<V,Number> priorRankScoreMap = new HashMap<V,Number>();$/;"	f	class:RelativeAuthorityRanker
process	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	protected IterativeContext process;$/;"	f	class:VisRunner
propagateMinimumLevel	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	public void propagateMinimumLevel(V v) {$/;"	m	class:DAGLayout
properties	src/edu/uci/ics/jung/algorithms/package.html	/^centrality, etc.) to vertices\/edges based on topological properties,$/;"	external variable declarations
put	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public void put(Layout<V,E> layout, Point2D center) {$/;"	m	class:AggregateLayout
put	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public V put(K key, V value) {$/;"	m	class:ConstantMap
putAll	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public void putAll(Map<? extends K, ? extends V> t) {$/;"	m	class:ConstantMap
queue	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private List<V> queue = new ArrayList<V>();$/;"	f	class:ISOMLayout	file:
rChild	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    private int rChild(int i)$/;"	m	class:MapBinaryHeap	file:
radii	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^    protected Map<V,Double> radii = new HashMap<V,Double>();$/;"	f	class:BalloonLayout
radius	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^	private double radius;$/;"	f	class:CircleLayout	file:
radius	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private int radius;$/;"	f	class:ISOMLayout	file:
radius	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	double radius;$/;"	f	class:PolarPoint
radiusConstantTime	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private int radiusConstantTime;$/;"	f	class:ISOMLayout	file:
radiusK	src/edu/uci/ics/jung/algorithms/filters/KNeighborhoodFilter.java	/^	private int radiusK;$/;"	f	class:KNeighborhoodFilter	file:
rand	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    protected Random rand;$/;"	f	class:VoltageClusterer
rand	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    protected Random rand;$/;"	f	class:KMeansClusterer
random	src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java	/^    private Random random;$/;"	f	class:KleinbergSmallWorldGenerator	file:
random	src/edu/uci/ics/jung/algorithms/layout/util/RandomLocationTransformer.java	/^	Random random;$/;"	f	class:RandomLocationTransformer
random	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^	private Random random;$/;"	f	class:WeightedChoice	file:
rankScore	src/edu/uci/ics/jung/algorithms/importance/Ranking.java	/^    public double rankScore;$/;"	f	class:Ranking
ranked	src/edu/uci/ics/jung/algorithms/importance/Ranking.java	/^    private V ranked;$/;"	f	class:Ranking	file:
reached_max	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        protected boolean reached_max = false;$/;"	f	class:DijkstraDistance.SourceData
recordAccess	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^    void recordAccess(HashMap<K,V> m) {$/;"	m	class:BasicMapEntry
recordRemoval	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^    void recordRemoval(HashMap<K,V> m) {$/;"	m	class:BasicMapEntry
relativePrecision	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    public double relativePrecision(double epsilon, double x) {$/;"	m	class:IterativeProcess
relax	src/edu/uci/ics/jung/algorithms/layout/util/Relaxer.java	/^	void relax();$/;"	m	interface:Relaxer
relax	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	public void relax() {$/;"	m	class:VisRunner
relaxEdges	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	protected void relaxEdges() {$/;"	m	class:DAGLayout
relaxEdges	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    protected void relaxEdges() {$/;"	m	class:SpringLayout
remove	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public void remove(Layout<V,E> layout) {$/;"	m	class:AggregateLayout
remove	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public V remove(Object key) {$/;"	m	class:ConstantMap
remove	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^	public T remove() $/;"	m	class:MapBinaryHeap
remove	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    public boolean remove(Object o)$/;"	m	class:MapBinaryHeap
remove	src/edu/uci/ics/jung/graph/util/Pair.java	/^        public void remove()$/;"	m	class:Pair.PairIterator
remove	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public boolean remove(Object o) {$/;"	m	class:Pair
removeAll	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public void removeAll() {$/;"	m	class:AggregateLayout
removeAll	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    public boolean removeAll(Collection<?> c)$/;"	m	class:MapBinaryHeap
removeAll	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public boolean removeAll(Collection<?> c) {$/;"	m	class:Pair
removeChild	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public boolean removeChild(V orphan) {$/;"	m	class:DelegateForest
removeChild	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public boolean removeChild(V orphan) {$/;"	m	class:DelegateTree
removeEdge	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public boolean removeEdge(E edge) {$/;"	m	class:DelegateForest
removeEdge	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public boolean removeEdge(E edge, boolean remove_subtree)$/;"	m	class:DelegateForest
removeEdge	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public boolean removeEdge(E edge) {$/;"	m	class:DirectedSparseGraph
removeEdge	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public boolean removeEdge(E edge) {$/;"	m	class:DirectedSparseMultigraph
removeEdge	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean removeEdge(E edge) {$/;"	m	class:GraphDecorator
removeEdge	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    boolean removeEdge(E edge);$/;"	m	interface:Hypergraph
removeEdge	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^  public boolean removeEdge(E edge) {$/;"	m	class:ObservableGraph
removeEdge	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean removeEdge(E edge) $/;"	m	class:OrderedKAryTree
removeEdge	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public boolean removeEdge(H hyperedge)$/;"	m	class:SetHypergraph
removeEdge	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public boolean removeEdge(E edge)$/;"	m	class:SparseGraph
removeEdge	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public boolean removeEdge(E edge)$/;"	m	class:SparseMultigraph
removeEdge	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public boolean removeEdge(E edge)$/;"	m	class:UndirectedSparseGraph
removeEdge	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public boolean removeEdge(E edge) {$/;"	m	class:UndirectedSparseMultigraph
removeEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean removeEdge(E edge) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
removeEdge	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean removeEdge(E edge) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
removeEdgeRankScore	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void removeEdgeRankScore(E e) {$/;"	m	class:AbstractRanker
removeEdgeRankScore	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void removeEdgeRankScore(E e, Object key) {$/;"	m	class:AbstractRanker
removeGraphEventListener	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^	public void removeGraphEventListener(GraphEventListener<V,E> l) {$/;"	m	class:ObservableGraph
removeVertex	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public boolean removeVertex(V vertex) {$/;"	m	class:DelegateForest
removeVertex	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public boolean removeVertex(V vertex, boolean remove_subtrees)$/;"	m	class:DelegateForest
removeVertex	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public boolean removeVertex(V vertex) {$/;"	m	class:DelegateTree
removeVertex	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    public boolean removeVertex(V vertex) {$/;"	m	class:DirectedSparseGraph
removeVertex	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^    public boolean removeVertex(V vertex) {$/;"	m	class:DirectedSparseMultigraph
removeVertex	src/edu/uci/ics/jung/graph/GraphDecorator.java	/^	public boolean removeVertex(V vertex) {$/;"	m	class:GraphDecorator
removeVertex	src/edu/uci/ics/jung/graph/Hypergraph.java	/^    boolean removeVertex(V vertex);$/;"	m	interface:Hypergraph
removeVertex	src/edu/uci/ics/jung/graph/ObservableGraph.java	/^	public boolean removeVertex(V vertex) {$/;"	m	class:ObservableGraph
removeVertex	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    public boolean removeVertex(V vertex) $/;"	m	class:OrderedKAryTree
removeVertex	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    public boolean removeVertex(V vertex)$/;"	m	class:SetHypergraph
removeVertex	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    public boolean removeVertex(V vertex)$/;"	m	class:SparseGraph
removeVertex	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    public boolean removeVertex(V vertex) {$/;"	m	class:SparseMultigraph
removeVertex	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    public boolean removeVertex(V vertex)$/;"	m	class:UndirectedSparseGraph
removeVertex	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    public boolean removeVertex(V vertex) {$/;"	m	class:UndirectedSparseMultigraph
removeVertex	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public boolean removeVertex(V vertex) {$/;"	m	class:Graphs.UnmodifiableAbstractGraph
removeVertex	src/edu/uci/ics/jung/graph/util/Graphs.java	/^		public synchronized boolean removeVertex(V vertex) {$/;"	m	class:Graphs.SynchronizedAbstractGraph
removeVertexRankScore	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void removeVertexRankScore(V v) {$/;"	m	class:AbstractRanker
removeVertexRankScore	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void removeVertexRankScore(V v, Object key) {$/;"	m	class:AbstractRanker
repulsion_constant	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private double repulsion_constant;$/;"	f	class:FRLayout	file:
repulsion_constant	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private double repulsion_constant;$/;"	f	class:FRLayout2	file:
repulsion_multiplier	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private double repulsion_multiplier = 0.75;$/;"	f	class:FRLayout	file:
repulsion_multiplier	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private double repulsion_multiplier = 0.75;$/;"	f	class:FRLayout2	file:
repulsion_range_sq	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    protected int repulsion_range_sq = 100 * 100;$/;"	f	class:SpringLayout
repulsiondx	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^        protected double repulsiondx;$/;"	f	class:SpringLayout.SpringVertexData
repulsiondy	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^        protected double repulsiondy;$/;"	f	class:SpringLayout.SpringVertexData
reset	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public void reset() {$/;"	m	class:AbstractRanker
reset	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public void reset() {$/;"	m	class:AggregateLayout
reset	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^	public void reset() {$/;"	m	class:CircleLayout
reset	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^	public void reset() {$/;"	m	class:FRLayout
reset	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^	public void reset() {$/;"	m	class:FRLayout2
reset	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	public void reset() {$/;"	m	class:ISOMLayout
reset	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	public void reset() {$/;"	m	class:KKLayout
reset	src/edu/uci/ics/jung/algorithms/layout/Layout.java	/^	void reset();$/;"	m	interface:Layout
reset	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public void reset() {$/;"	m	class:LayoutDecorator
reset	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^	public void reset() {$/;"	m	class:SpringLayout
reset	src/edu/uci/ics/jung/algorithms/layout/StaticLayout.java	/^	public void reset() {}$/;"	m	class:StaticLayout
reset	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	public void reset() {$/;"	m	class:TreeLayout
reset	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public void reset()$/;"	m	class:DijkstraDistance
reset	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public void reset(V source)$/;"	m	class:DijkstraDistance
reset	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^    public void reset()$/;"	m	class:UnweightedShortestPath
reset	src/edu/uci/ics/jung/algorithms/shortestpath/UnweightedShortestPath.java	/^    public void reset(V v)$/;"	m	class:UnweightedShortestPath
reset	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    public void reset() {$/;"	m	class:IterativeProcess
reset	src/edu/uci/ics/jung/graph/util/DefaultParallelEdgeIndexFunction.java	/^    public void reset()$/;"	m	class:DefaultParallelEdgeIndexFunction
reset	src/edu/uci/ics/jung/graph/util/DefaultParallelEdgeIndexFunction.java	/^    public void reset(Graph<V,E> graph, E e) {$/;"	m	class:DefaultParallelEdgeIndexFunction
reset	src/edu/uci/ics/jung/graph/util/EdgeIndexFunction.java	/^    void reset();$/;"	m	interface:EdgeIndexFunction
reset	src/edu/uci/ics/jung/graph/util/EdgeIndexFunction.java	/^    void reset(Graph<V,E> g, E edge);$/;"	m	interface:EdgeIndexFunction
reset	src/edu/uci/ics/jung/graph/util/IncidentEdgeIndexFunction.java	/^    public void reset()$/;"	m	class:IncidentEdgeIndexFunction
reset	src/edu/uci/ics/jung/graph/util/IncidentEdgeIndexFunction.java	/^    public void reset(Graph<V,E> graph, E e) {$/;"	m	class:IncidentEdgeIndexFunction
residualCapacityMap	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private Map<E,Number> residualCapacityMap = new HashMap<E,Number>();$/;"	f	class:EdmondsKarpMaxFlow	file:
restoreVertex	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        protected void restoreVertex(V v, double dist) $/;"	m	class:DijkstraDistance.SourceData
restoreVertex	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^        public void restoreVertex(V v, double dist)$/;"	m	class:DijkstraShortestPath.SourcePathData
resume	src/edu/uci/ics/jung/algorithms/layout/util/Relaxer.java	/^	void resume();$/;"	m	interface:Relaxer
resume	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	public void resume() {$/;"	m	class:VisRunner
retainAll	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    public boolean retainAll(Collection<?> c)$/;"	m	class:MapBinaryHeap
retainAll	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public boolean retainAll(Collection<?> c) {$/;"	m	class:Pair
root	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	protected V root;$/;"	f	class:DelegateTree
root	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    protected V root;$/;"	f	class:OrderedKAryTree
rootNodes	src/edu/uci/ics/jung/algorithms/filters/KNeighborhoodFilter.java	/^	private Set<V> rootNodes;$/;"	f	class:KNeighborhoodFilter	file:
roots	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    private Map<Object,V> roots = new HashMap<Object,V>();$/;"	f	class:WeightedNIPaths	file:
row_count	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected int row_count;$/;"	f	class:Lattice2DGenerator
run	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	public void run() {$/;"	m	class:VisRunner
running	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	protected boolean running;$/;"	f	class:VisRunner
second	src/edu/uci/ics/jung/graph/util/Pair.java	/^    private T second;$/;"	f	class:Pair	file:
set	src/edu/uci/ics/jung/algorithms/util/MapSettableTransformer.java	/^    public void set(I input, O output)$/;"	m	class:MapSettableTransformer
set	src/edu/uci/ics/jung/algorithms/util/SettableTransformer.java	/^    public void set(I input, O output);$/;"	m	interface:SettableTransformer
setAdjustForGravity	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	public void setAdjustForGravity(boolean on) {$/;"	m	class:KKLayout
setAngle	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^		protected void setAngle(double angle) {$/;"	m	class:CircleLayout.CircleVertexData
setAttractionMultiplier	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^	public void setAttractionMultiplier(double attraction) {$/;"	m	class:FRLayout
setAttractionMultiplier	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^	public void setAttractionMultiplier(double attraction) {$/;"	m	class:FRLayout2
setConnectionCount	src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java	/^    public void setConnectionCount(int num_connections)$/;"	m	class:KleinbergSmallWorldGenerator
setConvergenceThreshold	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    public void setConvergenceThreshold(double convergence_threshold)$/;"	m	class:KMeansClusterer
setCumulative	src/edu/uci/ics/jung/algorithms/scoring/KStepMarkov.java	/^	public void setCumulative(boolean cumulative)$/;"	m	class:KStepMarkov
setCurrentPositionFor	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^    protected void setCurrentPositionFor(V vertex) {$/;"	m	class:RadialTreeLayout
setCurrentPositionFor	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    protected void setCurrentPositionFor(V vertex) {$/;"	m	class:TreeLayout
setCurrentRankScore	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^    protected void setCurrentRankScore(V v, double rankValue) {$/;"	m	class:KStepMarkov
setCurrentValue	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected void setCurrentValue(V v, T value)$/;"	m	class:AbstractIterativeScorer
setDelegate	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public void setDelegate(Layout<V, E> delegate) {$/;"	m	class:AggregateLayout
setDelegate	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public void setDelegate(Layout<V,E> delegate) {$/;"	m	class:LayoutDecorator
setDesiredPrecision	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    public void setDesiredPrecision(double prec) throws IllegalArgumentException {$/;"	m	class:IterativeProcess
setDisconnectedDistanceMultiplier	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^    public void setDisconnectedDistanceMultiplier(double disconnected_multiplier){$/;"	m	class:KKLayout
setEdgeRankScore	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void setEdgeRankScore(E e, double rankValue) {$/;"	m	class:AbstractRanker
setEdgeRankScore	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void setEdgeRankScore(E e, double rankValue, Object key) {$/;"	m	class:AbstractRanker
setEdgeWeight	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void setEdgeWeight(E e, double weight) {$/;"	m	class:AbstractRanker
setEdgeWeights	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public void setEdgeWeights(Map<E,Number> edgeWeights) {$/;"	m	class:AbstractRanker
setEdgeWeights	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public void setEdgeWeights(Transformer<E, ? extends Number> edge_weights)$/;"	m	class:AbstractIterativeScorer
setExchangeVertices	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	public void setExchangeVertices(boolean on) {$/;"	m	class:KKLayout
setForceMultiplier	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public void setForceMultiplier(double force) {$/;"	m	class:SpringLayout
setGraph	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^    public void setGraph(Graph<V,E> graph) {$/;"	m	class:AbstractLayout
setGraph	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public void setGraph(Graph<V, E> graph) {$/;"	m	class:AggregateLayout
setGraph	src/edu/uci/ics/jung/algorithms/layout/Layout.java	/^    void setGraph(Graph<V,E> graph);$/;"	m	interface:Layout
setGraph	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public void setGraph(Graph<V, E> graph) {$/;"	m	class:LayoutDecorator
setGraph	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	public void setGraph(Graph<V,E> graph) {$/;"	m	class:TreeLayout
setHyperedgesAreSelfLoops	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public void setHyperedgesAreSelfLoops(boolean arg) $/;"	m	class:AbstractIterativeScorer
setInitializer	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^    public void setInitializer(Transformer<V,Point2D> initializer) {$/;"	m	class:AbstractLayout
setInitializer	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public void setInitializer(Transformer<V, Point2D> initializer) {$/;"	m	class:AggregateLayout
setInitializer	src/edu/uci/ics/jung/algorithms/layout/Layout.java	/^	void setInitializer(Transformer<V,Point2D> initializer);$/;"	m	interface:Layout
setInitializer	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^	public void setInitializer(Transformer<V, Point2D> initializer) {$/;"	m	class:LayoutDecorator
setInitializer	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	public void setInitializer(Transformer<V, Point2D> initializer) {$/;"	m	class:TreeLayout
setLengthFactor	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^    public void setLengthFactor(double length_factor){$/;"	m	class:KKLayout
setLocation	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	public void setLocation(V picked, Point2D p) {$/;"	m	class:AbstractLayout
setLocation	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	public void setLocation(V picked, double x, double y) {$/;"	m	class:AbstractLayout
setLocation	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public void setLocation(V v, Point2D location) {$/;"	m	class:AggregateLayout
setLocation	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^    public void setLocation(V v, Point2D location) {$/;"	m	class:BalloonLayout
setLocation	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	public void setLocation(V picked, Point2D p) {$/;"	m	class:DAGLayout
setLocation	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	public void setLocation(V picked, double x, double y) {$/;"	m	class:DAGLayout
setLocation	src/edu/uci/ics/jung/algorithms/layout/Layout.java	/^	void setLocation(V v, Point2D location);$/;"	m	interface:Layout
setLocation	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^	public void setLocation(V v, Point2D location) {$/;"	m	class:LayoutDecorator
setLocation	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	public void setLocation(PolarPoint p) {$/;"	m	class:PolarPoint
setLocation	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^    public void setLocation(V v, Point2D location)$/;"	m	class:RadialTreeLayout
setLocation	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	public void setLocation(V v, Point2D location) {$/;"	m	class:TreeLayout
setMaxDistance	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public void setMaxDistance(double max_dist)$/;"	m	class:DijkstraDistance
setMaxIterations	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    public void setMaxIterations(int maxIterations) {$/;"	m	class:FRLayout
setMaxIterations	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    public void setMaxIterations(int maxIterations) {$/;"	m	class:FRLayout2
setMaxIterations	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^    public void setMaxIterations(int maxIterations) {$/;"	m	class:KKLayout
setMaxIterations	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public void setMaxIterations(int max_iterations)$/;"	m	class:AbstractIterativeScorer
setMaxIterations	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    public void setMaxIterations(int max_iterations)$/;"	m	class:KMeansClusterer
setMaxTargets	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    public void setMaxTargets(int max_targets)$/;"	m	class:DijkstraDistance
setMaximumIterations	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    public void setMaximumIterations(int maxIter) throws IllegalArgumentException {$/;"	m	class:IterativeProcess
setNormalizeRankings	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public void setNormalizeRankings(boolean normalizeRankings) {$/;"	m	class:AbstractRanker
setOutputValue	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected void setOutputValue(V v, T value)$/;"	m	class:AbstractIterativeScorer
setPolars	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^    protected void setPolars(List<V> kids, Point2D parentLocation, double parentRadius) {$/;"	m	class:BalloonLayout
setPrecision	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^	public void setPrecision(double precision) {$/;"	m	class:IterativeProcess
setPriorRankScore	src/edu/uci/ics/jung/algorithms/importance/RelativeAuthorityRanker.java	/^    public void setPriorRankScore(V v, double value) {$/;"	m	class:RelativeAuthorityRanker
setPriors	src/edu/uci/ics/jung/algorithms/importance/RelativeAuthorityRanker.java	/^    protected void setPriors(Set<V> priors) { mPriors = priors; }$/;"	m	class:RelativeAuthorityRanker
setRadialLocations	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^	private void setRadialLocations() {$/;"	m	class:RadialTreeLayout	file:
setRadius	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^	public void setRadius(double radius) {$/;"	m	class:CircleLayout
setRadius	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	public void setRadius(double radius) { this.radius = radius; }$/;"	m	class:PolarPoint
setRandom	src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java	/^    public void setRandom(Random random)$/;"	m	class:KleinbergSmallWorldGenerator
setRandomSeed	src/edu/uci/ics/jung/algorithms/cluster/VoltageClusterer.java	/^    protected void setRandomSeed(int random_seed)$/;"	m	class:VoltageClusterer
setRandomSeed	src/edu/uci/ics/jung/algorithms/generators/random/KleinbergSmallWorldGenerator.java	/^    public void setRandomSeed(long seed) $/;"	m	class:KleinbergSmallWorldGenerator
setRandomSeed	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^	public void setRandomSeed(long seed)$/;"	m	class:WeightedChoice
setRanked	src/edu/uci/ics/jung/algorithms/importance/Ranking.java	/^	public void setRanked(V ranked) {$/;"	m	class:Ranking
setRemoveRankScoresOnFinalize	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    public void setRemoveRankScoresOnFinalize(boolean removeRankScoresOnFinalize) {$/;"	m	class:AbstractRanker
setRepulsionMultiplier	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    public void setRepulsionMultiplier(double repulsion) {$/;"	m	class:FRLayout
setRepulsionMultiplier	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    public void setRepulsionMultiplier(double repulsion) {$/;"	m	class:FRLayout2
setRepulsionRange	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public void setRepulsionRange(int range) {$/;"	m	class:SpringLayout
setRoot	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	public void setRoot(Graph<V,E> g) {$/;"	m	class:DAGLayout
setRoot	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	public void setRoot(V v) {$/;"	m	class:DAGLayout
setRoot	src/edu/uci/ics/jung/graph/DelegateForest.java	/^	public void setRoot(V root) {$/;"	m	class:DelegateForest
setRoot	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public void setRoot(V root) {$/;"	m	class:DelegateTree
setRootPolar	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^    protected void setRootPolar(V root) {$/;"	m	class:BalloonLayout
setRootPolars	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^    protected void setRootPolars() $/;"	m	class:BalloonLayout
setSeed	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^    public void setSeed(long seed) {$/;"	m	class:EppsteinPowerLawGenerator
setSeed	src/edu/uci/ics/jung/algorithms/generators/random/ErdosRenyiGenerator.java	/^    public void setSeed(long seed) {$/;"	m	class:ErdosRenyiGenerator
setSeed	src/edu/uci/ics/jung/algorithms/util/KMeansClusterer.java	/^    public void setSeed(int random_seed)$/;"	m	class:KMeansClusterer
setSize	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	public void setSize(Dimension size) {$/;"	m	class:AbstractLayout
setSize	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public void setSize(Dimension d) {$/;"	m	class:AggregateLayout
setSize	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^    public void setSize(Dimension size) {$/;"	m	class:BalloonLayout
setSize	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	public void setSize(Dimension size) {$/;"	m	class:DAGLayout
setSize	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^	public void setSize(Dimension size) {$/;"	m	class:FRLayout
setSize	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^	public void setSize(Dimension size) {$/;"	m	class:FRLayout2
setSize	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	public void setSize(Dimension size) {$/;"	m	class:KKLayout
setSize	src/edu/uci/ics/jung/algorithms/layout/Layout.java	/^	void setSize(Dimension d);$/;"	m	interface:Layout
setSize	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public void setSize(Dimension d) {$/;"	m	class:LayoutDecorator
setSize	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^    public void setSize(Dimension size) {$/;"	m	class:RadialTreeLayout
setSize	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^	public void setSize(Dimension size) {$/;"	m	class:SpringLayout
setSize	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^    public void setSize(Dimension size) {$/;"	m	class:TreeLayout
setSleepTime	src/edu/uci/ics/jung/algorithms/layout/util/Relaxer.java	/^	void setSleepTime(long i);$/;"	m	interface:Relaxer
setSleepTime	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	public void setSleepTime(long sleepTime) {$/;"	m	class:VisRunner
setStretch	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public void setStretch(double stretch) {$/;"	m	class:SpringLayout
setTheta	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	public void setTheta(double theta) { this.theta = theta; }$/;"	m	class:PolarPoint
setTolerance	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public void setTolerance(double tolerance)$/;"	m	class:AbstractIterativeScorer
setUp	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    protected void setUp() {$/;"	m	class:RandomWalkSTBetweenness
setValue	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^    public V setValue(V newValue) {$/;"	m	class:BasicMapEntry
setVertexComparator	src/edu/uci/ics/jung/graph/SortedSparseMultigraph.java	/^    public void setVertexComparator(Comparator<V> vertex_comparator)$/;"	m	class:SortedSparseMultigraph
setVertexOrder	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^	public void setVertexOrder(Comparator<V> comparator)$/;"	m	class:CircleLayout
setVertexOrder	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^	public void setVertexOrder(List<V> vertex_list)$/;"	m	class:CircleLayout
setVertexRankScore	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void setVertexRankScore(V v, double rankValue) {$/;"	m	class:AbstractRanker
setVertexRankScore	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected void setVertexRankScore(V v, double rankValue, Object key) {$/;"	m	class:AbstractRanker
set_collapsedv	src/edu/uci/ics/jung/algorithms/transformation/VertexPartitionCollapser.java	/^    protected Map<Set<V>, CV> set_collapsedv;$/;"	f	class:VertexPartitionCollapser
sets	src/edu/uci/ics/jung/algorithms/transformation/package.html	/^partition of its vertices into disjoint sets, into a graph in which each $/;"	external variable declarations
shouldCount	src/edu/uci/ics/jung/algorithms/metrics/TriadicCensus.java	/^	protected static <V,E> boolean shouldCount(Graph<V,E> g, List<V> id, V u, V v, V w) {$/;"	m	class:TriadicCensus
singleSourceShortestPath	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    protected LinkedHashMap<V,Number> singleSourceShortestPath(V source, Collection<V> targets, int numDests)$/;"	m	class:DijkstraDistance
sinks	src/edu/uci/ics/jung/algorithms/scoring/VoltageScorer.java	/^    protected Collection<V> sinks;$/;"	f	class:VoltageScorer
size	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	protected Dimension size;$/;"	f	class:AbstractLayout
size	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	protected Dimension size = new Dimension(600,600);$/;"	f	class:TreeLayout
size	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public int size() {$/;"	m	class:ConstantMap
size	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    public int size() $/;"	m	class:MapBinaryHeap
size	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public int size() {$/;"	m	class:Pair
sleepTime	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	protected long sleepTime = 100L;$/;"	f	class:VisRunner
source	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private V source;$/;"	f	class:EdmondsKarpMaxFlow	file:
source	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^	protected Graph<V,E> source;$/;"	f	class:GraphEvent
sourceMap	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^    protected Map<V,SourceData> sourceMap;   \/\/ a map of source vertices to an instance of SourceData$/;"	f	class:DijkstraDistance
source_voltages	src/edu/uci/ics/jung/algorithms/scoring/VoltageScorer.java	/^    protected Map<V, ? extends Number> source_voltages;$/;"	f	class:VoltageScorer
springVertexData	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    protected Map<V, SpringVertexData> springVertexData =$/;"	f	class:SpringLayout
square	src/edu/uci/ics/jung/algorithms/matrix/GraphMatrixOperations.java	/^	public static <V,E> Graph<V,E> square(Graph<V,E> g, $/;"	m	class:GraphMatrixOperations
squaredError	src/edu/uci/ics/jung/algorithms/util/DiscreteDistribution.java	/^    public static double squaredError(double[] dist, double[] reference)$/;"	m	class:DiscreteDistribution
stack	src/edu/uci/ics/jung/algorithms/cluster/BicomponentClusterer.java	/^    protected Stack<E> stack;$/;"	f	class:BicomponentClusterer
status	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private String status = null;$/;"	f	class:ISOMLayout	file:
status	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private String status = "KKLayout";$/;"	f	class:KKLayout	file:
step	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    public void step() {$/;"	m	class:EdmondsKarpMaxFlow
step	src/edu/uci/ics/jung/algorithms/importance/BetweennessCentrality.java	/^    public void step() {$/;"	m	class:BetweennessCentrality
step	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^    public void step() {$/;"	m	class:KStepMarkov
step	src/edu/uci/ics/jung/algorithms/importance/MarkovCentrality.java	/^    public void step() {$/;"	m	class:MarkovCentrality
step	src/edu/uci/ics/jung/algorithms/importance/RandomWalkSTBetweenness.java	/^    public void step() {$/;"	m	class:RandomWalkSTBetweenness
step	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    public void step() {$/;"	m	class:WeightedNIPaths
step	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public void step() {$/;"	m	class:AggregateLayout
step	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    public synchronized void step() {$/;"	m	class:FRLayout
step	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    public synchronized void step() {$/;"	m	class:FRLayout2
step	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	public void step() {$/;"	m	class:ISOMLayout
step	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	public void step() {$/;"	m	class:KKLayout
step	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public void step() {$/;"	m	class:LayoutDecorator
step	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    public void step() {$/;"	m	class:SpringLayout
step	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^    public void step() {$/;"	m	class:SpringLayout2
step	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    public void step()$/;"	m	class:AbstractIterativeScorer
step	src/edu/uci/ics/jung/algorithms/util/IterativeContext.java	/^	void step();$/;"	m	interface:IterativeContext
step	src/edu/uci/ics/jung/algorithms/util/IterativeProcess.java	/^    abstract public void step();$/;"	m	class:IterativeProcess
stop	src/edu/uci/ics/jung/algorithms/layout/util/Relaxer.java	/^	void stop();$/;"	m	interface:Relaxer
stop	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	protected boolean stop;$/;"	f	class:VisRunner
stop	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	public synchronized void stop() {$/;"	m	class:VisRunner
stoppingIncrements	src/edu/uci/ics/jung/algorithms/layout/DAGLayout.java	/^	boolean stoppingIncrements = false;$/;"	f	class:DAGLayout
stretch	src/edu/uci/ics/jung/algorithms/layout/SpringLayout.java	/^    protected double stretch = 0.70;$/;"	f	class:SpringLayout
swap	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    private void swap(int i, int j)$/;"	m	class:MapBinaryHeap	file:
swapOutputForCurrent	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected void swapOutputForCurrent()$/;"	m	class:AbstractIterativeScorer
symmetricKL	src/edu/uci/ics/jung/algorithms/util/DiscreteDistribution.java	/^    public static double symmetricKL(double[] dist, double[] reference)$/;"	m	class:DiscreteDistribution
synchronizedDirectedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	public static <V,E> DirectedGraph<V,E> synchronizedDirectedGraph(DirectedGraph<V,E> graph) {$/;"	m	class:Graphs
synchronizedForest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	public static <V,E> SynchronizedForest<V,E> synchronizedForest(Forest<V,E> forest) {$/;"	m	class:Graphs
synchronizedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	public static <V,E> Graph<V,E> synchronizedGraph(Graph<V,E> graph) {$/;"	m	class:Graphs
synchronizedTree	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	public static <V,E> SynchronizedTree<V,E> synchronizedTree(Tree<V,E> tree) {$/;"	m	class:Graphs
synchronizedUndirectedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	public static <V,E> UndirectedGraph<V,E> synchronizedUndirectedGraph(UndirectedGraph<V,E> graph) {$/;"	m	class:Graphs
target	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private V target;$/;"	f	class:EdmondsKarpMaxFlow	file:
temperature	src/edu/uci/ics/jung/algorithms/layout/FRLayout.java	/^    private double temperature;$/;"	f	class:FRLayout	file:
temperature	src/edu/uci/ics/jung/algorithms/layout/FRLayout2.java	/^    private double temperature;$/;"	f	class:FRLayout2	file:
tentativeIncomingEdges	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^        protected Map<V,E> tentativeIncomingEdges;$/;"	f	class:DijkstraShortestPath.SourcePathData
testAverageDeltas	src/edu/uci/ics/jung/algorithms/layout/SpringLayout2.java	/^    private void testAverageDeltas() {$/;"	m	class:SpringLayout2	file:
theta	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	double theta;$/;"	f	class:PolarPoint
thread	src/edu/uci/ics/jung/algorithms/layout/util/VisRunner.java	/^	protected Thread thread;$/;"	f	class:VisRunner
toArray	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public <S> S[] toArray(S[] a) {$/;"	m	class:Pair
toArray	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public Object[] toArray() {$/;"	m	class:Pair
toDirected	src/edu/uci/ics/jung/algorithms/transformation/DirectionTransformer.java	/^    public static <V,E> Graph<V,E> toDirected(Graph<V,E> graph, Factory<DirectedGraph<V,E>> graph_factory,$/;"	m	class:DirectionTransformer
toString	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^  	public String toString() $/;"	m	class:VertexPartition
toString	src/edu/uci/ics/jung/algorithms/importance/Ranking.java	/^    public String toString() {$/;"	m	class:Ranking
toString	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^		public String toString() {$/;"	m	class:CircleLayout.CircleVertexData
toString	src/edu/uci/ics/jung/algorithms/layout/PolarPoint.java	/^	public String toString() {$/;"	m	class:PolarPoint
toString	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^        public String toString()$/;"	m	class:BetweennessCentrality.BetweennessData
toString	src/edu/uci/ics/jung/algorithms/scoring/HITS.java	/^        public String toString()$/;"	m	class:HITS.Scores
toString	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^    public String toString() {$/;"	m	class:BasicMapEntry
toString	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^        public String toString()$/;"	m	class:WeightedChoice.ItemPair
toString	src/edu/uci/ics/jung/graph/AbstractGraph.java	/^    public String toString() {$/;"	m	class:AbstractGraph
toString	src/edu/uci/ics/jung/graph/DelegateTree.java	/^	public String toString() {$/;"	m	class:DelegateTree
toString	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^	    public String toString() {$/;"	m	class:GraphEvent.Vertex
toString	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^    	public String toString() {$/;"	m	class:GraphEvent.Edge
toString	src/edu/uci/ics/jung/graph/util/Pair.java	/^    public String toString()$/;"	m	class:Pair
toUndirected	src/edu/uci/ics/jung/algorithms/transformation/DirectionTransformer.java	/^    public static <V,E> UndirectedGraph<V,E> toUndirected(Graph<V,E> graph, $/;"	m	class:DirectionTransformer
tolerance	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected double tolerance;$/;"	f	class:AbstractIterativeScorer
total_iterations	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected int total_iterations;$/;"	f	class:AbstractIterativeScorer
transform	src/edu/uci/ics/jung/algorithms/blockmodel/StructurallyEquivalent.java	/^	public VertexPartition<V,E> transform(Graph<V,E> g) $/;"	m	class:StructurallyEquivalent
transform	src/edu/uci/ics/jung/algorithms/cluster/BicomponentClusterer.java	/^    public Set<Set<V>> transform(UndirectedGraph<V,E> theGraph) $/;"	m	class:BicomponentClusterer
transform	src/edu/uci/ics/jung/algorithms/cluster/EdgeBetweennessClusterer.java	/^    public Set<Set<V>> transform(Graph<V,E> graph) {$/;"	m	class:EdgeBetweennessClusterer
transform	src/edu/uci/ics/jung/algorithms/cluster/WeakComponentClusterer.java	/^    public Set<Set<V>> transform(Graph<V,E> graph) {$/;"	m	class:WeakComponentClusterer
transform	src/edu/uci/ics/jung/algorithms/filters/EdgePredicateFilter.java	/^    public Graph<V,E> transform(Graph<V,E> g)$/;"	m	class:EdgePredicateFilter
transform	src/edu/uci/ics/jung/algorithms/filters/KNeighborhoodFilter.java	/^	public Graph<V,E> transform(Graph<V,E> graph) {$/;"	m	class:KNeighborhoodFilter
transform	src/edu/uci/ics/jung/algorithms/filters/VertexPredicateFilter.java	/^	public Graph<V,E> transform(Graph<V,E> g)$/;"	m	class:VertexPredicateFilter
transform	src/edu/uci/ics/jung/algorithms/layout/AbstractLayout.java	/^	public Point2D transform(V v) {$/;"	m	class:AbstractLayout
transform	src/edu/uci/ics/jung/algorithms/layout/AggregateLayout.java	/^	public Point2D transform(V v) {$/;"	m	class:AggregateLayout
transform	src/edu/uci/ics/jung/algorithms/layout/BalloonLayout.java	/^    public Point2D transform(V v) {$/;"	m	class:BalloonLayout
transform	src/edu/uci/ics/jung/algorithms/layout/LayoutDecorator.java	/^    public Point2D transform(V v) {$/;"	m	class:LayoutDecorator
transform	src/edu/uci/ics/jung/algorithms/layout/RadialTreeLayout.java	/^    public Point2D transform(V v) {$/;"	m	class:RadialTreeLayout
transform	src/edu/uci/ics/jung/algorithms/layout/TreeLayout.java	/^	public Point2D transform(V v) {$/;"	m	class:TreeLayout
transform	src/edu/uci/ics/jung/algorithms/layout/util/RandomLocationTransformer.java	/^    public Point2D transform(V v) {$/;"	m	class:RandomLocationTransformer
transform	src/edu/uci/ics/jung/algorithms/scoring/util/DelegateToEdgeTransformer.java	/^    public Number transform(VEPair<V,E> arg0)$/;"	m	class:DelegateToEdgeTransformer
transform	src/edu/uci/ics/jung/algorithms/scoring/util/UniformDegreeWeight.java	/^	public Double transform(VEPair<V, E> ve_pair) $/;"	m	class:UniformDegreeWeight
transform	src/edu/uci/ics/jung/algorithms/scoring/util/UniformInOut.java	/^    public Double transform(VEPair<V,E> ve_pair)$/;"	m	class:UniformInOut
transform	src/edu/uci/ics/jung/algorithms/scoring/util/VertexScoreTransformer.java	/^    public S transform(V v)$/;"	m	class:VertexScoreTransformer
transform	src/edu/uci/ics/jung/algorithms/shortestpath/PrimMinimumSpanningTree.java	/^    public Graph<V,E> transform(Graph<V,E> graph) {$/;"	m	class:PrimMinimumSpanningTree
transform	src/edu/uci/ics/jung/algorithms/util/MapSettableTransformer.java	/^    public O transform(I input)$/;"	m	class:MapSettableTransformer
treeFactory	src/edu/uci/ics/jung/algorithms/shortestpath/PrimMinimumSpanningTree.java	/^	protected Factory<? extends Graph<V,E>> treeFactory;$/;"	f	class:PrimMinimumSpanningTree
triCode	src/edu/uci/ics/jung/algorithms/metrics/TriadicCensus.java	/^	public static <V,E> int triCode(Graph<V,E> g, V u, V v, V w) {$/;"	m	class:TriadicCensus
triType	src/edu/uci/ics/jung/algorithms/metrics/TriadicCensus.java	/^	public static int triType( int triCode ) {$/;"	m	class:TriadicCensus
type	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^	protected Type type;$/;"	f	class:GraphEvent
types	src/edu/uci/ics/jung/graph/package.html	/^<p>Interfaces for the JUNG graph types, and some representative implementations.<\/p>$/;"	external variable declarations
undirected_edges	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    protected Map<E, Pair<V>> undirected_edges;    \/\/ Map of undirected edges to incident vertex sets$/;"	f	class:SparseGraph
unknownVertices	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        protected MapBinaryHeap<V> unknownVertices;$/;"	f	class:DijkstraDistance.SourceData
unmodifiableDirectedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	public static <V,E> DirectedGraph<V,E> unmodifiableDirectedGraph(DirectedGraph<V,E> graph) {$/;"	m	class:Graphs
unmodifiableForest	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	public static <V,E> UnmodifiableForest<V,E> unmodifiableForest(Forest<V,E> forest) {$/;"	m	class:Graphs
unmodifiableGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	public static <V,E> Graph<V,E> unmodifiableGraph(Graph<V,E> graph) {$/;"	m	class:Graphs
unmodifiableTree	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	public static <V,E> UnmodifiableTree<V,E> unmodifiableTree(Tree<V,E> tree) {$/;"	m	class:Graphs
unmodifiableUndirectedGraph	src/edu/uci/ics/jung/graph/util/Graphs.java	/^	public static <V,E> UndirectedGraph<V,E> unmodifiableUndirectedGraph(UndirectedGraph<V,E> graph) {$/;"	m	class:Graphs
update	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected abstract double update(V v);$/;"	m	class:AbstractIterativeScorer
update	src/edu/uci/ics/jung/algorithms/scoring/HITSWithPriors.java	/^    protected double update(V v)$/;"	m	class:HITSWithPriors
update	src/edu/uci/ics/jung/algorithms/scoring/KStepMarkov.java	/^    public double update(V v)$/;"	m	class:KStepMarkov
update	src/edu/uci/ics/jung/algorithms/scoring/PageRankWithPriors.java	/^    public double update(V v)$/;"	m	class:PageRankWithPriors
update	src/edu/uci/ics/jung/algorithms/scoring/VoltageScorer.java	/^    public double update(V v)$/;"	m	class:VoltageScorer
update	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraDistance.java	/^        protected void update(V dest, E tentative_edge, double new_dist)$/;"	m	class:DijkstraDistance.SourceData
update	src/edu/uci/ics/jung/algorithms/shortestpath/DijkstraShortestPath.java	/^        public void update(V dest, E tentative_edge, double new_dist)$/;"	m	class:DijkstraShortestPath.SourcePathData
update	src/edu/uci/ics/jung/algorithms/util/MapBinaryHeap.java	/^    public void update(T o)$/;"	m	class:MapBinaryHeap
updateForest	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest.java	/^	protected void updateForest(Collection<V> tv, Collection<E> unfinishedEdges) {$/;"	m	class:MinimumSpanningForest
updateMaxDelta	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorer.java	/^    protected void updateMaxDelta(V v, double diff)$/;"	m	class:AbstractIterativeScorer
updateParameters	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^	private synchronized void updateParameters() {$/;"	m	class:ISOMLayout	file:
updateRankings	src/edu/uci/ics/jung/algorithms/importance/KStepMarkov.java	/^    protected void updateRankings() {$/;"	m	class:KStepMarkov
updateResidualCapacities	src/edu/uci/ics/jung/algorithms/flows/EdmondsKarpMaxFlow.java	/^    private void updateResidualCapacities() {$/;"	m	class:EdmondsKarpMaxFlow	file:
updateTree	src/edu/uci/ics/jung/algorithms/shortestpath/PrimMinimumSpanningTree.java	/^	protected void updateTree(Graph<V,E> tree, Graph<V,E> graph, Collection<E> unfinishedEdges) {$/;"	m	class:PrimMinimumSpanningTree
v	src/edu/uci/ics/jung/algorithms/scoring/util/VEPair.java	/^    private V v;$/;"	f	class:VEPair	file:
v_array	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    private List<V> v_array;$/;"	f	class:Lattice2DGenerator	file:
validateEdgeType	src/edu/uci/ics/jung/graph/AbstractTypedGraph.java	/^    protected void validateEdgeType(EdgeType edge_type)$/;"	m	class:AbstractTypedGraph
value	src/edu/uci/ics/jung/algorithms/util/BasicMapEntry.java	/^    V value;$/;"	f	class:BasicMapEntry
values	src/edu/uci/ics/jung/algorithms/util/ConstantMap.java	/^	public Collection<V> values() {$/;"	m	class:ConstantMap
vertex	src/edu/uci/ics/jung/graph/event/GraphEvent.java	/^		protected V vertex;$/;"	f	class:GraphEvent.Vertex
vertexFactory	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    protected Factory<V> vertexFactory;$/;"	f	class:BarabasiAlbertGenerator
vertexFactory	src/edu/uci/ics/jung/algorithms/generators/random/EppsteinPowerLawGenerator.java	/^    private Factory<V> vertexFactory;$/;"	f	class:EppsteinPowerLawGenerator	file:
vertexFactory	src/edu/uci/ics/jung/algorithms/generators/random/ErdosRenyiGenerator.java	/^    Factory<V> vertexFactory;$/;"	f	class:ErdosRenyiGenerator
vertexFactory	src/edu/uci/ics/jung/algorithms/importance/WeightedNIPaths.java	/^    private Factory<V> vertexFactory;$/;"	f	class:WeightedNIPaths	file:
vertexRankScores	src/edu/uci/ics/jung/algorithms/importance/AbstractRanker.java	/^    protected Map<Object,Map<V, Number>> vertexRankScores = $/;"	f	class:AbstractRanker
vertex_comparator	src/edu/uci/ics/jung/graph/SortedSparseMultigraph.java	/^    protected Comparator<V> vertex_comparator;$/;"	f	class:SortedSparseMultigraph
vertex_data	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^	protected Map<V, BetweennessData> vertex_data;$/;"	f	class:BetweennessCentrality
vertex_data	src/edu/uci/ics/jung/graph/OrderedKAryTree.java	/^    protected Map<V, VertexData> vertex_data;$/;"	f	class:OrderedKAryTree
vertex_depths	src/edu/uci/ics/jung/graph/DelegateTree.java	/^    protected Map<V, Integer> vertex_depths;$/;"	f	class:DelegateTree
vertex_factory	src/edu/uci/ics/jung/algorithms/generators/Lattice2DGenerator.java	/^    protected Factory<V> vertex_factory;$/;"	f	class:Lattice2DGenerator
vertex_factory	src/edu/uci/ics/jung/algorithms/transformation/VertexPartitionCollapser.java	/^    protected Factory<CV> vertex_factory;$/;"	f	class:VertexPartitionCollapser
vertex_index	src/edu/uci/ics/jung/algorithms/generators/random/BarabasiAlbertGenerator.java	/^    protected List<V> vertex_index;$/;"	f	class:BarabasiAlbertGenerator
vertex_maps	src/edu/uci/ics/jung/graph/SparseGraph.java	/^    protected Map<V, Map<V,E>[]> vertex_maps; \/\/ Map of vertices to adjacency maps of vertices to {incoming, outgoing, incident} edges$/;"	f	class:SparseGraph
vertex_ordered_list	src/edu/uci/ics/jung/algorithms/layout/CircleLayout.java	/^	private List<V> vertex_ordered_list;$/;"	f	class:CircleLayout	file:
vertex_partition_map	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^	private Map<V,Set<V>> vertex_partition_map;$/;"	f	class:VertexPartition	file:
vertex_pred	src/edu/uci/ics/jung/algorithms/filters/VertexPredicateFilter.java	/^    protected Predicate<V> vertex_pred;$/;"	f	class:VertexPredicateFilter
vertex_priors	src/edu/uci/ics/jung/algorithms/scoring/AbstractIterativeScorerWithPriors.java	/^    protected Transformer<V,? extends S> vertex_priors;$/;"	f	class:AbstractIterativeScorerWithPriors
vertex_scores	src/edu/uci/ics/jung/algorithms/scoring/BetweennessCentrality.java	/^	protected Map<V, Double> vertex_scores;$/;"	f	class:BetweennessCentrality
vertex_sets	src/edu/uci/ics/jung/algorithms/blockmodel/VertexPartition.java	/^	private Collection<Set<V>> vertex_sets;$/;"	f	class:VertexPartition	file:
vertices	src/edu/uci/ics/jung/algorithms/cluster/package.html	/^Mechanisms for identifying clusters in graphs.  Where these clusters define disjoint sets of vertices, $/;"	external variable declarations
vertices	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private V[] vertices;$/;"	f	class:KKLayout	file:
vertices	src/edu/uci/ics/jung/graph/DirectedSparseGraph.java	/^    protected Map<V, Pair<Map<V,E>>> vertices;  \/\/ Map of vertices to Pair of adjacency maps {incoming, outgoing} $/;"	f	class:DirectedSparseGraph
vertices	src/edu/uci/ics/jung/graph/DirectedSparseMultigraph.java	/^	protected Map<V, Pair<Set<E>>> vertices; \/\/ Map of vertices to Pair of adjacency sets {incoming, outgoing}$/;"	f	class:DirectedSparseMultigraph
vertices	src/edu/uci/ics/jung/graph/SetHypergraph.java	/^    protected Map<V, Set<H>> vertices; \/\/ Map of vertices to incident hyperedge sets$/;"	f	class:SetHypergraph
vertices	src/edu/uci/ics/jung/graph/SparseMultigraph.java	/^    protected Map<V, Pair<Set<E>>> vertices; \/\/ Map of vertices to Pair of adjacency sets {incoming, outgoing}$/;"	f	class:SparseMultigraph
vertices	src/edu/uci/ics/jung/graph/UndirectedSparseGraph.java	/^    protected Map<V, Map<V,E>> vertices; \/\/ Map of vertices to adjacency maps of vertices to incident edges$/;"	f	class:UndirectedSparseGraph
vertices	src/edu/uci/ics/jung/graph/UndirectedSparseMultigraph.java	/^    protected Map<V, Set<E>> vertices; \/\/ Map of vertices to adjacency sets$/;"	f	class:UndirectedSparseMultigraph
via	src/edu/uci/ics/jung/graph/package.html	/^Mutations should be done via <code>{add,remove}{Edge,Vertex}<\/code>, or$/;"	i
visitNewVertex	src/edu/uci/ics/jung/algorithms/shortestpath/BFSDistanceLabeler.java	/^    private void visitNewVertex(V predecessor, V neighbor, int distance, List<V> newList) {$/;"	m	class:BFSDistanceLabeler	file:
visited	src/edu/uci/ics/jung/algorithms/layout/ISOMLayout.java	/^		boolean visited;$/;"	f	class:ISOMLayout.ISOMVertexData
vs	src/edu/uci/ics/jung/algorithms/scoring/util/VertexScoreTransformer.java	/^    protected VertexScorer<V,S> vs;$/;"	f	class:VertexScoreTransformer
weight	src/edu/uci/ics/jung/algorithms/util/WeightedChoice.java	/^		double weight;$/;"	f	class:WeightedChoice.ItemPair
weights	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest.java	/^	protected Map<E,Double> weights;$/;"	f	class:MinimumSpanningForest
weights	src/edu/uci/ics/jung/algorithms/shortestpath/MinimumSpanningForest2.java	/^	protected Transformer<E,Double> weights = $/;"	f	class:MinimumSpanningForest2
weights	src/edu/uci/ics/jung/algorithms/shortestpath/PrimMinimumSpanningTree.java	/^	protected Transformer<E,Double> weights; $/;"	f	class:PrimMinimumSpanningTree
work	src/edu/uci/ics/jung/graph/package.html	/^if you want to create a graph implementation that uses another implementation to do the work,$/;"	external variable declarations
xydata	src/edu/uci/ics/jung/algorithms/layout/KKLayout.java	/^	private Point2D[] xydata;$/;"	f	class:KKLayout	file:
