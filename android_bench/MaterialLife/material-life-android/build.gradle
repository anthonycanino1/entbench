buildscript {
    dependencies {
        classpath 'org.robolectric:robolectric-gradle-plugin:1.2.0-SNAPSHOT'
    }
}

apply plugin: 'com.android.application'

repositories {
  mavenLocal()
  mavenCentral()
}

android {
    project.archivesBaseName = "$rootProject.name";

    compileSdkVersion rootProject.ext.COMPILE_SDK
    buildToolsVersion rootProject.ext.BUILD_TOOLS
    defaultConfig {
        applicationId 'com.juankysoriano.materiallife'
        testApplicationId 'com.juankysoriano.materiallife.test'

        minSdkVersion rootProject.ext.MIN_SDK
        targetSdkVersion rootProject.ext.TARGET_SDK
        versionCode rootProject.ext.VERSION_CODE
        versionName rootProject.ext.VERSION_NAME

        proguardFile getDefaultProguardFile('proguard-android.txt')
        proguardFile 'proguard-rules.pro'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storePassword "mypassword"
            keyAlias "KeyAlias"
            keyPassword "mypassword"
        }
    }


    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
        }
        release {
            jniDebuggable false
            shrinkResources true
            minifyEnabled true
        }
    }

    android {
        lintOptions {
            abortOnError false
        }
    }

    dependencies {
        compile 'rainbow:rainbow-lib:unspecified'

        compile 'com.github.juankysoriano:AppIntro:e514744523'
        compile 'com.github.juankysoriano:open-ca:v0.2.0-rc2'



        compile 'com.github.ozodrukh:CircularReveal:1.1.1'
        compile 'com.android.support:design:22.2.0'
        compile 'com.google.android.gms:play-services-analytics:7.5.0'
        compile 'com.android.support:support-annotations:22.2.0'
        compile 'com.android.support:appcompat-v7:22.2.0'
        compile('com.novoda:notils:2.2.12') {
            exclude module: 'support-v4'
        }
        testCompile 'org.robolectric:robolectric:3.0-rc3'
        testCompile 'org.mockito:mockito-all:1.10.19'
        testCompile 'com.squareup:fest-android:1.0.8'
        testCompile 'junit:junit:4.12'

        compile files("/home/acanino/Projects/ent/lib/ent-rt.jar")

        apk files("/home/acanino/Projects/ent/lib/ent-rt.jar")
    }
}

ext {
    REPORT_LOCATIONS = ""
}

def buildTimeFormatted() {
    Calendar instance = Calendar.getInstance()
    instance.setTimeInMillis(System.currentTimeMillis())
    instance.getTime()
}

apply from: "$project.rootDir/analysis-tools/android-robolectric.gradle"
apply from: "$project.rootDir/analysis-tools/android-jacoco.gradle"
apply from: "$project.rootDir/analysis-tools/android-checkstyle.gradle"
apply from: "$project.rootDir/analysis-tools/android-pmd.gradle"
apply from: "$project.rootDir/analysis-tools/android-findbugs.gradle"

task lifeCheck dependsOn("check") {
    println "Finished at: " + new Date();

    println "\n"
    println REPORT_LOCATIONS
}

task life dependsOn("build") {
}

life.dependsOn("lifeCheck")

gradle.projectsEvaluated {
  tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.executable = '/home/acanino/Projects/ent/bin/entc'
  }
}

