<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by Turbo XML 2.3.1.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<xsd:schema xmlns:xsd = "http://www.w3.org/2001/XMLSchema"><!--
Copyright (c) 2000 Sun Microsystems, Inc.,
901 San Antonio Road,
Palo Alto, California 94303, U.S.A.
All rights reserved.

Sun Microsystems, Inc. has intellectual property rights relating to
technology embodied in the product that is described in this document.
In particular, and without limitation, these intellectual property
rights may include one or more of the U.S. patents listed at
http://www.sun.com/patents and one or more additional patents or
pending patent applications in the U.S. and in other countries.

This document and the product to which it pertains are distributed
under licenses restricting their use, copying, distribution, and
decompilation.  This document may be reproduced and distributed but may
not be changed without prior written authorization of Sun and its
licensors, if any.

Third-party software, including font technology, is copyrighted and
licensed from Sun suppliers.

Sun,  Sun Microsystems,  the Sun logo,  Java,  JavaServer Pages,  Java
Naming and Directory Interface,  JDBC,  JDK,  JavaMail and  and
Enterprise JavaBeans are trademarks or registered trademarks of Sun
Microsystems, Inc. in the U.S. and other countries.

Federal Acquisitions: Commercial Software - Government Users Subject to
Standard License Terms and Conditions.

DOCUMENTATION IS PROVIDED "AS IS" AND ALL EXPRESS OR IMPLIED
CONDITIONS, REPRESENTATIONS AND WARRANTIES, INCLUDING ANY IMPLIED
WARRANTY OF MERCHANTABILITY, FITNESS FOR FOR A PARTICULAR PURPOSE OR
NON-INFRINGEMENT, ARE DISCLAIMED, EXCEPT TO THE EXTENT THAT SUCH
DISCLAIMERS ARE HELD TO BE LEGALLY INVALID.


_________________________________________________________________________

Copyright (c) 2000 Sun Microsystems, Inc.,
901 San Antonio Road,
Palo Alto, California 94303, E'tats-Unis.
Tous droits re'serve's.

Sun Microsystems, Inc. a les droits de proprie'te' intellectuels
relatants a` la technologie incorpore'e dans le produit qui est de'crit
dans ce document. En particulier, et sans la limitation, ces droits de
proprie'te' intellectuels peuvent inclure un ou plus des brevets
ame'ricains e'nume're's a` http://www.sun.com/patents et un ou les
brevets plus supple'mentaires ou les applications de brevet en attente
dans les E'tats-Unis et dans les autres pays.

Ce produit ou document est prote'ge' par un copyright et distribue'
avec des licences qui en restreignent l'utilisation, la copie, la
distribution, et la de'compilation.  Ce documention associe n peut
e^tre reproduite et distribuer, par quelque moyen que ce soit, sans
l'autorisation pre'alable et e'crite de Sun et de ses bailleurs de
licence, le cas e'che'ant.

Le logiciel de'tenu par des tiers, et qui comprend la technologie
relative aux polices de caracte`res, est prote'ge' par un copyright et
licencie' par des fournisseurs de Sun.

Sun,  Sun Microsystems,  le logo Sun,  Java,  JavaServer Pages,  Java
Naming and Directory Interface,  JDBC,  JDK,  JavaMail et  and
Enterprise JavaBeans sont des marques de fabrique ou des marques
de'pose'es de Sun Microsystems, Inc. aux E'tats-Unis et dans d'autres
pays.

LA DOCUMENTATION EST FOURNIE "EN L'E'TAT" ET TOUTES AUTRES CONDITIONS,
DECLARATIONS ET GARANTIES EXPRESSES OU TACITES SONT FORMELLEMENT
EXCLUES, DANS LA MESURE AUTORISEE PAR LA LOI APPLICABLE, Y COMPRIS
NOTAMMENT TOUTE GARANTIE IMPLICITE RELATIVE A LA QUALITE MARCHANDE, A
L'APTITUDE A UNE UTILISATION PARTICULIERE OU A L'ABSENCE DE
CONTREFAC,ON.
-->
	<!--
This is the XML DTD for the J2EE 1.3 application deployment
descriptor.  All J2EE 1.3 application deployment descriptors
must include a DOCTYPE of the following form:

  <!DOCTYPE application PUBLIC
	"-//Sun Microsystems, Inc.//DTD J2EE Application 1.3//EN"
	"http://java.sun.com/dtd/application_1_3.dtd">

-->
	<!--
The following conventions apply to all J2EE deployment descriptor
elements unless indicated otherwise.

- In elements that contain PCDATA, leading and trailing whitespace
  in the data may be ignored.

- In elements whose value is an "enumerated type", the value is
  case sensitive.

- In elements that specify a pathname to a file within the same
  JAR file, relative filenames (i.e., those not starting with "/")
  are considered relative to the root of the JAR file's namespace.
  Absolute filenames (i.e., those starting with "/") also specify
  names in the root of the JAR file's namespace.  In general, relative
  names are preferred.  The exception is .war files where absolute
  names are preferred for consistency with the servlet API.
-->
	<!--
The application element is the root element of a J2EE application
deployment descriptor.
-->
	<xsd:element name = "application">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "icon" minOccurs = "0"/>
				<xsd:element ref = "display-name"/>
				<xsd:element ref = "description" minOccurs = "0"/>
				<xsd:element ref = "module" maxOccurs = "unbounded"/>
				<xsd:element ref = "security-role" minOccurs = "0" maxOccurs = "unbounded"/>
			</xsd:sequence>
			<xsd:attribute name = "id" type = "xsd:ID"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "alt-dd"><!--
The alt-dd element specifies an optional URI to the post-assembly
version of the deployment descriptor file for a particular J2EE module.
The URI must specify the full pathname of the deployment descriptor
file relative to the application's root directory. If alt-dd is not
specified, the deployer must read the deployment descriptor from the
default location and file name required by the respective component
specification.

Used in: module
-->
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base = "xsd:string">
					<xsd:attribute name = "id" type = "xsd:ID"><!--
The ID mechanism is to allow tools that produce additional deployment
information (i.e., information beyond the standard deployment
descriptor information) to store the non-standard information in a
separate file, and easily refer from these tool-specific files to the
information in the standard deployment descriptor.

Tools are not allowed to add the non-standard information into the
standard deployment descriptor.
-->
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "connector"><!--
The connector element specifies the URI of a resource adapter archive
file, relative to the top level of the application package.

Used in: module
-->
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base = "xsd:string">
					<xsd:attribute name = "id" type = "xsd:ID"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "context-root"><!--
The context-root element specifies the context root of a web
application.

Used in: web
-->
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base = "xsd:string">
					<xsd:attribute name = "id" type = "xsd:ID"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "description"><!--
The description element is used to provide text describing the parent
element.  The description element should include any information that
the application ear file producer wants to provide to the consumer of
the application ear file (i.e., to the Deployer). Typically, the tools
used by the application ear file consumer will display the description
when processing the parent element that contains the description.

Used in: application, security-role
-->
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base = "xsd:string">
					<xsd:attribute name = "id" type = "xsd:ID"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "display-name"><!--
The display-name element contains a short name that is intended to be
displayed by tools.  The display name need not be unique.

Used in: application

Example:

<display-name>Employee Self Service</display-name>
-->
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base = "xsd:string">
					<xsd:attribute name = "id" type = "xsd:ID"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "ejb"><!--
The ejb element specifies the URI of an ejb-jar, relative to the top
level of the application package.

Used in: module
-->
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base = "xsd:string">
					<xsd:attribute name = "id" type = "xsd:ID"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "icon"><!--
The icon element contains small-icon and large-icon elements that
specify the file names for small and a large GIF or JPEG icon images
used to represent the parent element in a GUI tool.

Used in: application
-->
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "small-icon" minOccurs = "0"/>
				<xsd:element ref = "large-icon" minOccurs = "0"/>
			</xsd:sequence>
			<xsd:attribute name = "id" type = "xsd:ID"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "java"><!--
The java element specifies the URI of a java application client module,
relative to the top level of the application package.

Used in: module
-->
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base = "xsd:string">
					<xsd:attribute name = "id" type = "xsd:ID"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "large-icon"><!--
The large-icon element contains the name of a file
containing a large (32 x 32) icon image. The file
name is a relative path within the application's
ear file.

The image may be either in the JPEG or GIF format.
The icon can be used by tools.

Used in: icon

Example:

<large-icon>employee-service-icon32x32.jpg</large-icon>
-->
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base = "xsd:string">
					<xsd:attribute name = "id" type = "xsd:ID"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "module"><!--
The module element represents a single J2EE module and contains a
connector, ejb, java, or web element, which indicates the module type
and contains a path to the module file, and an optional alt-dd element,
which specifies an optional URI to the post-assembly version of the
deployment descriptor.

The application deployment descriptor must have one module element for
each J2EE module in the application package.

Used in: application
-->
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:element ref = "connector"/>
					<xsd:element ref = "ejb"/>
					<xsd:element ref = "java"/>
					<xsd:element ref = "web"/>
				</xsd:choice>
				<xsd:element ref = "alt-dd" minOccurs = "0"/>
			</xsd:sequence>
			<xsd:attribute name = "id" type = "xsd:ID"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "role-name"><!--
The role-name element contains the name of a security role.

The name must conform to the lexical rules for an NMTOKEN.

Used in: security-role
-->
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base = "xsd:string">
					<xsd:attribute name = "id" type = "xsd:ID"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "security-role"><!--
The security-role element contains the definition of a security
role. The definition consists of an optional description of the
security role, and the security role name.

Used in: application

Example:

    <security-role>
	<description>
	    This role includes all employees who are authorized
	    to access the employee service application.
	</description>
	<role-name>employee</role-name>
    </security-role>
-->
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "description" minOccurs = "0"/>
				<xsd:element ref = "role-name"/>
			</xsd:sequence>
			<xsd:attribute name = "id" type = "xsd:ID"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "small-icon"><!--
The small-icon element contains the name of a file
containing a small (16 x 16) icon image. The file
name is a relative path within the application's
ear file.

The image may be either in the JPEG or GIF format.
The icon can be used by tools.

Used in: icon

Example:

<small-icon>employee-service-icon16x16.jpg</small-icon>
-->
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base = "xsd:string">
					<xsd:attribute name = "id" type = "xsd:ID"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "web"><!--
The web element contains the web-uri and context-root of a web
application module.

Used in: module
-->
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref = "web-uri"/>
				<xsd:element ref = "context-root"/>
			</xsd:sequence>
			<xsd:attribute name = "id" type = "xsd:ID"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name = "web-uri"><!--
The web-uri element specifies the URI of a web application file,
relative to the top level of the application package.

Used in: web
-->
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base = "xsd:string">
					<xsd:attribute name = "id" type = "xsd:ID"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>