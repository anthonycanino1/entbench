<?xml version = "1.0"?>
<!--Generated by XML Authority. DDML version 1.0-->
<DocumentDef name = "struts-config_1_1.dtd"
	 xmlns = "http://www.purl.org/NET/ddml/v1"
	 xmlns:DDML = "http://www.purl.org/NET/ddml/v1" Version = "1.0">
	<dtdsource><![CDATA[
<BR><BR>&lt;!--     DTD for the Struts Application Configuration File, Version 1.1     To support validation of your configuration file, include the following     DOCTYPE element at the beginning (after the &quot;xml&quot; declaration):     <BR>&lt;!DOCTYPE struts-config PUBLIC       &quot;-//Apache Software Foundation//DTD Struts Configuration 1.1//EN&quot;       &quot;http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd&quot;&gt;     $Id: struts-config_1_1.dtd,v 1.40 2003/05/14 08:17:16 turner Exp $--&gt;<BR>&lt;!-- ========== Defined Types ============================================= --&gt;<BR>&lt;!-- An &quot;AttributeName&quot; is the identifier of a page, request, session, or     application scope attribute.--&gt;<BR>&lt;!ENTITY % AttributeName &quot;CDATA&quot;&gt;<BR>&lt;!-- A &quot;BeanName&quot; is the identifier of a JavaBean, such as a form bean,     and also serves as the name of the corresponding scripting variable     and the name of the JSP attribute under which the bean is accessed.     Therefore, it must conform to the rules for a Java identifier.--&gt;<BR>&lt;!ENTITY % BeanName &quot;CDATA&quot;&gt;<BR>&lt;!-- A &quot;Boolean&quot; is the string representation of a boolean (true or false)     variable.--&gt;<BR>&lt;!ENTITY % Boolean &quot;(true|false|yes|no)&quot;&gt;<BR>&lt;!-- A &quot;ClassName&quot; is the fully qualified name of a Java class that is     instantiated to provide the functionality of the enclosing element.--&gt;<BR>&lt;!ENTITY % ClassName &quot;CDATA&quot;&gt;<BR>&lt;!-- An &quot;Integer&quot; is a character string consisting solely of numeric digits,     optionally preceeded by a minus sign, that can be converted to a     32-bit integer.--&gt;<BR>&lt;!ENTITY % Integer &quot;CDATA&quot;&gt;<BR>&lt;!-- A &quot;Location&quot; is a relative path, delimited by &quot;/&quot; characters, that     defines the location of a resource relative to the location of the     Struts configuration file itself.--&gt;<BR>&lt;!ENTITY % Location &quot;#PCDATA&quot;&gt;<BR>&lt;!-- A &quot;PropName&quot; is the name of a JavaBeans property, and must begin with     a lower case letter and contain only characters that are legal in a     Java identifier.--&gt;<BR>&lt;!ENTITY % PropName &quot;CDATA&quot;&gt;<BR>&lt;!-- A &quot;RequestPath&quot; is an application-relative URI path, beginning with a     slash, that identifies a mapped resource (such as a JSP page or a servlet)     within this web application.--&gt;<BR>&lt;!ENTITY % RequestPath &quot;CDATA&quot;&gt;<BR>&lt;!-- The name of a JSP bean scope within which such a form bean may be     accessed.--&gt;<BR>&lt;!ENTITY % RequestScope &quot;(request|session)&quot;&gt;<BR>&lt;!-- ========== Top Level Elements ======================================== --&gt;<BR>&lt;!-- The &quot;struts-config&quot; element is the root of the configuration file     hierarchy, and contains nested elements for all of the other     configuration settings.--&gt;<BR>&lt;!ELEMENT struts-config (data-sources? , form-beans? , global-exceptions? , global-forwards? , action-mappings? , controller? , message-resources* , plug-in*)&gt;<BR>&lt;!ATTLIST struts-config  id ID  #IMPLIED &gt;<BR>&lt;!-- The &quot;data-sources&quot; element describes a set of DataSource objects [JDBC 2.0     Standard Extension]. The individual DataSource objects are configured through     nested <BR>&lt;data-source&gt; elements.--&gt;<BR>&lt;!ELEMENT data-sources (data-source*)&gt;<BR>&lt;!ATTLIST data-sources  id ID  #IMPLIED &gt;<BR>&lt;!-- The &quot;data-source&quot; element describes a DataSource object [JDBC 2.0 Standard     Extension] that will be instantiated, configured, and made available as a     servlet context attribute (or &quot;application-scope bean&quot;). Any object can be     specified so long as it implements [javax.sql.DataSource] and can be     configured entirely from JavaBean properties. The following attributes     are required:     className       The configuration bean for this DataSource object. If                     specified, the object must be a subclass of the default                     configuration bean.                     [&quot;org.apache.struts.config.DataSourceConfig&quot;]     key             Servlet context attribute key under which this data source                     will be stored.  Default is the value specified by string                     constant defined by Globals.DATA_SOURCE_KEY. The application                     module prefix (if any) is appended to the key                     (${key}$prefix}).                     [org.apache.struts.Globals.DATA_SOURCE_KEY]                     NOTE: The application module prefix includes the leading                     slash, so the default datasource for a module named &quot;foo&quot; is                     stored under &quot;org.apache.struts.action.DATA_SOURCE/foo&quot;.     type            Fully qualified Java class name for this data source object.                     The class must implement DataSource [javax.sql.DataSource],                     and the object must be configurable entirely from JavaBean                     properties.--&gt;<BR>&lt;!ELEMENT data-source (set-property*)&gt;<BR>&lt;!ATTLIST data-source  id        ID               #IMPLIED                         className %ClassName;      #IMPLIED                         key       %AttributeName;  #IMPLIED                         type      %ClassName;      #IMPLIED &gt;<BR>&lt;!-- The &quot;form-beans&quot; element describes the set of form bean descriptors for this     application module. The following attributes are defined:     type            Fully qualified Java class to use when instantiating                     ActionFormBean objects. If specified, the object must be a                     subclass of the default class type.                     DEPRECATED.                     WARNING:  For Struts 1.0, this value is ignored.  You                     can set the default implementation class name with the                     &quot;formBean&quot; initialization parameter to the Struts                     controller servlet.--&gt;<BR>&lt;!ELEMENT form-beans (form-bean*)&gt;<BR>&lt;!ATTLIST form-beans  id   ID           #IMPLIED                        type %ClassName;  #IMPLIED &gt;<BR>&lt;!-- The &quot;form-bean&quot; element describes an ActionForm subclass     [org.apache.struts.action.ActionForm] that can be referenced by an &quot;action&quot;     element.The &quot;form-bean&quot; element describes a particular form bean, which is a     JavaBean that implements the org.apache.struts.action.ActionForm     class.  The following attributes are defined:     className       The configuration bean for this form bean object. If                     specified, the object must be a subclass of the default                     configuration bean.                     [&quot;org.apache.struts.config.FormBeanConfig&quot;]     dynamic         If the form bean type is a  DynaActionForm subclass (that you                     created), then (and only then) set this attribute to &quot;true&quot;.                     If the type is set to the default DynaActionForm or any                     conventional ActionForm subclass, then this attribute can be                     omitted.                     [true] if type is &quot;org.apache.struts.action.DynaActionForm&quot;                     [false] otherwise  DEPRECATED - THIS IS NOW DETERMINED                     DYNAMICALLY BASED ON THE SPECIFIED IMPLEMENTATION CLASS.     name            The unique identifier for this form bean. Referenced by the                     <BR>&lt;action&gt; element to specify which form bean to use with its                     request.     type            Fully qualified Java class name of the ActionForm subclass                     to use with this form bean.--&gt;<BR>&lt;!ELEMENT form-bean (icon? , display-name? , description? , set-property* , form-property*)&gt;<BR>&lt;!ATTLIST form-bean  id        ID           #IMPLIED                       className %ClassName;  #IMPLIED                       dynamic        %Boolean;       #IMPLIED                       name      %BeanName;   #REQUIRED                       type      %ClassName;  #REQUIRED &gt;<BR>&lt;!-- The &quot;form-property&quot; element describes a JavaBean property that can be used to     configure an instance of a DynaActionForm or a subclass thereof. This element     is only utilized when the &quot;type&quot; attribute of the enclosing &quot;form-bean&quot; element     is [org.apache.struts.action.DynaActionForm] or a subclass of DynaActionForm. If     a custom DynaActionForm subclass is used, then the &quot;dynamic&quot; attribute of the     enclosing <BR>&lt;form-bean&gt; element must be set to &quot;true&quot;. Since Struts 1.1.     className       The configuration bean for this form property object. If                     specified, the object must be a subclass of the default                     configuration bean.                     [&quot;org.apache.struts.config.FormPropertyConfig&quot;]     initial         String representation of the initial value for this property.                     If not specified, primitives will be initialized to zero and                     objects initialized to the zero-argument instantiation of that                     object class.  For example, Strings will be initialized to &quot;&quot;     name            The name of the JavaBean property described by this element.     size            The number of array elements to create if the value of the                     &quot;type&quot; attribute specifies an array, but there is no value                     specified for the &quot;initial&quot; attribute.     type            Fully qualified Java class name of the field underlying this                     property, optionally followed by &quot;[]&quot; to indicate that the                     field is indexed.--&gt;<BR>&lt;!ELEMENT form-property (set-property*)&gt;<BR>&lt;!ATTLIST form-property  className %ClassName;  #IMPLIED                           initial   CDATA        #IMPLIED                           name      %PropName;   #REQUIRED                           size      %Integer;    #IMPLIED                           type      %ClassName;  #REQUIRED &gt;<BR>&lt;!-- The &quot;global-exceptions&quot; element describes a set of exceptions that might be     thrown by an Action object. The handling of individual exception types is     configured through nested exception elements. An <BR>&lt;action&gt; element may     override a global exception handler by registering a local exception handler     for the same exception type. Since Struts 1.1.--&gt;<BR>&lt;!ELEMENT global-exceptions (exception*)&gt;<BR>&lt;!ATTLIST global-exceptions  id ID  #IMPLIED &gt;<BR>&lt;!-- The &quot;exception&quot; element registers an ExceptionHandler for an exception type.     The following attributes are defined:    bundle           Servlet context attribute for the message resources bundle                     associated with this handler. The default attribute is the                     value specified by the string constant declared at                     Globals.MESSAGES_KEY.                     [org.apache.struts.Globals.MESSAGES_KEY]    className        The configuration bean for this ExceptionHandler object.                     If specified, className must be a subclass of the default                     configuration bean                     [&quot;org.apache.struts.config.ExceptionConfig&quot;]    handler          Fully qualified Java class name for this exception handler.                     [&quot;org.apache.struts.action.ExceptionHandler&quot;]    key              The key to use with this handler's message resource bundle                     that will retrieve the error message template for this                     exception.    path             The module-relative URI to the resource that will complete                     the request/response if this exception occurs.    scope            The context (&quot;request&quot; or &quot;session&quot;) that is used to access                     the ActionError object [org.apache.struts.action.ActionError]                     for this exception.    type             Fully qualified Java class name of the exception type to                     register with this handler.--&gt;<BR>&lt;!ELEMENT exception (icon? , display-name? , description? , set-property*)&gt;<BR>&lt;!ATTLIST exception  id        ID               #IMPLIED                       bundle    %AttributeName;  #IMPLIED                       className %ClassName;      #IMPLIED                       handler   %ClassName;      #IMPLIED                       key       CDATA            #REQUIRED                       path      %RequestPath;    #IMPLIED                       scope     CDATA            #IMPLIED                       type      %ClassName;      #REQUIRED &gt;<BR>&lt;!-- The &quot;global-forwards&quot; element describes a set of ActionForward objects     [org.apache.struts.action.ActionForward] that are available to all Action     objects as a return value. The individual ActionForwards are configured     through nested <BR>&lt;forward&gt; elements. An <BR>&lt;action&gt; element may override a global     forward by defining a local <BR>&lt;forward&gt; of the same name.     type            Fully qualified Java class to use when instantiating                     ActionForward objects.  If specified, the object must be a                     subclass of the default class type.                     DEPRECATED.                     WARNING:  For Struts 1.0, this value is ignored.  You                     can set the default implementation class name with the                     &quot;forward&quot; initialization parameter to the Struts                     controller servlet.--&gt;<BR>&lt;!ELEMENT global-forwards (forward*)&gt;<BR>&lt;!ATTLIST global-forwards  id   ID           #IMPLIED                             type %ClassName;  #IMPLIED &gt;<BR>&lt;!-- The &quot;forward&quot; element describes an ActionForward that is to be made     available to an Action as a return value. An ActionForward is referenced by     a logical name and encapsulates a URI. A &quot;forward&quot; element may be used to     describe both global and local ActionForwards. Global forwards are available     to all the Action objects in the application module. Local forwards can be     nested within an <BR>&lt;action&gt; element and only available to an Action object     when it is invoked through that ActionMapping.     className       Fully qualified Java class name of ActionForward                     subclass to use for this object.                     [&quot;org.apache.struts.action.ActionForward&quot;]    contextRelative  Set this to &quot;true&quot; if, in a modular application, the path                     attribute starts with a slash &quot;/&quot; and should be considered                     relative to the entire web application rather than the module.                     Since Struts 1.1.                     [false]     name            The unique identifier for this forward. Referenced by the                     Action object at runtime to select - by its logical name -                     the resource that should complete the request/response.     path            The module-relative or context-relative path to the resources                     that is encapsulated by the logical name of this ActionForward.                     If the path is to be considered context-relative when used in                     a modular application, then the contextRelative attribute                     should be set to &quot;true&quot;. This value should begin with a slash                     (&quot;/&quot;) character.     redirect        Set to &quot;true&quot; if a redirect instruction should be issued to                     the user-agent so that a new request is issued for this                     forward's resource. If true,  RequestDispatcher.Redirect is                     called. If &quot;false&quot;, RequestDispatcher.forward is called instead.                     [false]--&gt;<BR>&lt;!ELEMENT forward (icon? , display-name? , description? , set-property*)&gt;<BR>&lt;!ATTLIST forward  id              ID             #IMPLIED                     className       %ClassName;    #IMPLIED                     contextRelative %Boolean;      #IMPLIED                     name            CDATA          #REQUIRED                     path            %RequestPath;  #REQUIRED                     redirect       %Boolean;       #IMPLIED &gt;<BR>&lt;!-- The &quot;action-mappings&quot; element describes a set of ActionMapping objects     [org.apache.struts.action.ActionMapping] that are available to process     requests matching the url-pattern our ActionServlet registered with the     container. The individual ActionMappings are configured through nested     <BR>&lt;action&gt; elements. The following attributes are defined:     type           Fully qualified Java class to use when instantiating                    ActionMapping objects. If specified, the object must be a                    subclass of the default class type.                    WARNING:  For Struts 1.0, this value is ignored.  You                    can set the default implementation class name with the                    &quot;mapping&quot; initialization parameter to the Struts                    controller servlet.--&gt;<BR>&lt;!ELEMENT action-mappings (action*)&gt;<BR>&lt;!ATTLIST action-mappings  id   ID           #IMPLIED                             type %ClassName;  #IMPLIED &gt;<BR>&lt;!-- The &quot;action&quot; element describes an ActionMapping object that is to be used     to process a request for a specific module-relative URI. The following     attributes are defined:     attribute       Name of the request-scope or session-scope attribute that                     is used to access our ActionForm bean, if it is other than                     the bean's specified &quot;name&quot;. Optional if &quot;name&quot; is specified,                     else not valid.     className       The fully qualified Java class name of the ActionMapping                     subclass to use for this action mapping object. Defaults to                     the type specified by the enclosing <BR>&lt;action-mappings&gt;                     element or to &quot;org.apache.struts.action.ActionMapping&quot; if                     not specified.                     [&quot;org.apache.struts.action.ActionMapping&quot;]     forward         Module-relative path of the servlet or other resource that                     will process this request, instead of the Action class                     specified by &quot;type&quot;.  The path WILL NOT be processed                     through the &quot;forwardPattern&quot; attribute that is configured                     on the &quot;controller&quot; element for this application module.                     Exactly one of &quot;forward&quot;, &quot;include&quot;, or &quot;type&quot; must be                     specified.     include         Module-relative path of the servlet or other resource that                     will process this request, instead of the Action class                     specified by &quot;type&quot;.  The path WILL NOT be processed                     through the &quot;forwardPattern&quot; attribute that is configured                     on the &quot;controller&quot; element for this application module.                     Exactly one of &quot;forward&quot;, &quot;include&quot;, or &quot;type&quot; must be                     specified.     input           Module-relative path of the action or other resource to                     which control should be returned if a validation error is                     encountered. Valid only when &quot;name&quot; is specified. Required                     if &quot;name&quot; is specified and the input bean returns                     validation errors. Optional if &quot;name&quot; is specified and the                     input bean does not return validation errors.     name            Name of the form bean, if any, that is associated with this                     action mapping.     path            The module-relative path of the submitted request, starting                     with a &quot;/&quot; character, and without the filename extension if                     extension mapping is used.                     NOTE:  Do *not* include a period in your path name,                     because it will look like a filename extension and                     cause your Action to not be located.     parameter       General-purpose configuration parameter that can be used to                     pass extra information to the Action object selected by                     this action mapping.     prefix          Prefix used to match request parameter names to ActionForm                     property names, if any. Optional if &quot;name&quot; is specified,                     else not allowed.     roles           Comma-delimited list of security role names that are allowed                     access to this ActionMapping object. Since Struts 1.1.     scope           The context (&quot;request&quot; or &quot;session&quot;) that is used to                     access our ActionForm bean, if any.  Optional if &quot;name&quot; is                     specified, else not valid.     suffix          Suffix used to match request parameter names to ActionForm                     bean property names, if any. Optional if &quot;name&quot; is                     specified, else not valid.     type            Fully qualified Java class name of the Action subclass                     [org.apache.struts.action.Action] that will process requests                     for this action mapping. Not valid if either the &quot;forward&quot;                     or &quot;include&quot; attribute is specified.  Exactly one of                     &quot;forward&quot;, &quot;include&quot;, or &quot;type&quot; must be specified.     unknown         Set to &quot;true&quot; if this object should be configured as the                     default action mapping for this module. If a request does not                     match another object, it will be passed to the ActionMapping                     object with unknown set to &quot;true&quot;. Only one ActionMapping                     can be marked as &quot;unknown&quot; within a module.                     [false]     validate        Set to &quot;true&quot; if the validate method of the ActionForm bean                     should be called prior to calling the Action object for this                     action mapping, or set to &quot;false&quot; if you do not want the                     validate method called.                     [true]--&gt;<BR>&lt;!ELEMENT action (icon? , display-name? , description? , set-property* , exception* , forward*)&gt;<BR>&lt;!ATTLIST action  id        ID             #IMPLIED                    attribute %BeanName;     #IMPLIED                    className %ClassName;    #IMPLIED                    forward   %RequestPath;  #IMPLIED                    include   %RequestPath;  #IMPLIED                    input     %RequestPath;  #IMPLIED                    name      %BeanName;     #IMPLIED                    parameter CDATA          #IMPLIED                    path      %RequestPath;  #REQUIRED                    prefix    CDATA          #IMPLIED                    roles     CDATA          #IMPLIED                    scope          %RequestScope;  #IMPLIED                    suffix    CDATA          #IMPLIED                    type      %ClassName;    #IMPLIED                    unknown        %Boolean;       #IMPLIED                    validate       %Boolean;       #IMPLIED &gt;<BR>&lt;!-- The &quot;controller&quot; element describes the ControllerConfig bean     [org.apache.struts.config.ControllerConfig] that encapsulates     an application module's runtime configuration. The following     attributes are defined:     bufferSize      The size of the input buffer used when processing                     file uploads.                     [4096]     className       Fully qualified Java class name of the                     ControllerConfig subclass for this controller object.                     If specified, the object must be a subclass of the                     default class.                     [&quot;org.apache.struts.config.ControllerConfig&quot;]     contentType     Default content type (and optional character encoding) to                     be set on each response. May be overridden by the Action,                     JSP, or other resource to which the request is forwarded.                     [&quot;text/html&quot;]     debug           Debugging detail level for this module. [0]                     DEPRECATED - configure the logging detail level                     in your underlying logging implementation.     forwardPattern  Replacement pattern defining how the &quot;path&quot; attribute of a                     <BR>&lt;forward&gt; element is mapped to a context-relative URL when                     it starts with a slash (and when the contextRelative                     property is false). This value may consist of any                     combination of the following:                     - &quot;$M&quot; - Replaced by the module prefix of this module                     - &quot;$P&quot; - Replaced by the &quot;path&quot; attribute of the  selected                     &quot;forward&quot; element                     - &quot;$$&quot; - Causes a literal dollar sign to be rendered                     - &quot;$x&quot; - (Where &quot;x&quot; is any character not defined above)                     Silently swallowed, reserved for future use                     If not specified, the default forwardPattern is &quot;$M$P&quot;,                     which is consistent with the previous behavior of                     forwards.  Since Struts 1.1.  [&quot;$M$P&quot;]     inputForward    Set to &quot;true&quot; if you want the &quot;input&quot; attribute of                     <BR>&lt;action&gt; elements to be the name of a local or global                     ActionForward, which will then be used to calculate the                     ultimate URL. Set to &quot;false&quot; (the default) to treat the                     &quot;input&quot; parameter of <BR>&lt;action&gt; elements as a                     module-relative path to the resource                     to be used as the input form. Since Struts 1.1.                     [false]     locale          Set to &quot;true&quot; if you want a Locale object stored in the                     user's session if not already present.                     [true]     maxFileSize     The maximum size (in bytes) of a file to be accepted as a                     file upload.  Can be expressed as a number followed by a                     &quot;K&quot;, &quot;M&quot;, or &quot;G&quot;, which are interpreted to mean kilobytes,                     megabytes, or gigabytes, respectively.                     [&quot;250M&quot;]     memFileSize     The maximum size (in bytes) of a file whose contents will                     be retained in memory after uploading. Files larger than                     this threshold will be written to some alternative storage                     medium, typically a hard disk. Can be expressed as a number                     followed by a &quot;K&quot;, &quot;M&quot;, or &quot;G&quot;, which are interpreted to                     mean kilobytes, megabytes, or gigabytes, respectively.                     [&quot;256K&quot;]     multipartClass  The fully qualified Java class name of the multipart                     request handler class to be used with this module.                     [&quot;org.apache.struts.upload.CommonsMultipartRequestHandler&quot;]     nocache         Set to &quot;true&quot; if you want the controller to add HTTP                     headers for defeating caching to every response from                     this module.  [false]     pagePattern     Replacement pattern defining how the &quot;page&quot; attribute of                     custom tags using it is mapped to a context-relative URL                     of the corresponding resource.  This value may consist of                     any combination of the following:                     - &quot;$M&quot; - Replaced by the module prefix of this module                     - &quot;$P&quot; - Replaced by the value of the &quot;page&quot; attribute                     - &quot;$$&quot; - Causes a literal dollar sign to be rendered                     - &quot;$x&quot; - (Where &quot;x&quot; is any character not defined above)                              Silently swallowed, reserved for future use                     If not specified, the default forwardPattern is                     &quot;$M$P&quot;, which is consistent with previous hard coded                     behavior of URL evaluation for &quot;page&quot; attributes.                     [&quot;$M$P&quot;]     processorClass  The fully qualified Java class name of the                     RequestProcessor subclass to be used with this module.                     [&quot;org.apache.struts.action.RequestProcessor&quot;]     tempDir         Temporary working directory to use when processing                     file uploads.                     [{Directory provided by servlet container}]--&gt;<BR>&lt;!ELEMENT controller (set-property*)&gt;<BR>&lt;!ATTLIST controller  id             ID           #IMPLIED                        bufferSize     %Integer;    #IMPLIED                        className      %ClassName;  #IMPLIED                        contentType    CDATA        #IMPLIED                        debug          %Integer;    #IMPLIED                        forwardPattern CDATA        #IMPLIED                        inputForward   %Boolean;       #IMPLIED                        locale         %Boolean;       #IMPLIED                        maxFileSize    CDATA        #IMPLIED                        memFileSize    CDATA        #IMPLIED                        multipartClass %ClassName;  #IMPLIED                        nocache        %Boolean;       #IMPLIED                        pagePattern    CDATA        #IMPLIED                        processorClass %ClassName;  #IMPLIED                        tempDir        CDATA        #IMPLIED &gt;<BR>&lt;!-- The &quot;message-resources&quot; element describes a MessageResources object with     message templates for this module. The following attributes are defined:     className       The configuration bean for this message resources object.                     If specified, the object must be a subclass of the default                     configuration bean.                     [&quot;org.apache.struts.config.MessageResourcesConfig&quot;]     factory         Fully qualified Java class name of the                     MessageResourcesFactory subclass to use for this message                     resources object.                     [&quot;org.apache.struts.util.PropertyMessageResourcesFactory&quot;]     key             Servlet context attribute under which this message                     resources bundle will be stored. The default attribute is                     the value specified by the string constant at                     [Globals.MESSAGES_KEY]. The application module prefix (if                     any) is appended to the key (${key}${prefix}).                     [org.apache.struts.Globals.MESSAGES_KEY]                     NOTE: The application module  prefix includes the leading                     slash, so the default message resource bundle for a module                     named &quot;foo&quot; is stored under                     &quot;org.apache.struts.action.MESSAGE/foo&quot;.     null            Set to &quot;true&quot; if you want our message resources to return a                     null string for unknown message keys, or &quot;false&quot; to return a                     message with the bad key value.     parameter       Configuration parameter to be passed to the createResources                     method of our factory object.--&gt;<BR>&lt;!ELEMENT message-resources (set-property*)&gt;<BR>&lt;!ATTLIST message-resources  id        ID               #IMPLIED                               className %ClassName;      #IMPLIED                               factory   %ClassName;      #IMPLIED                               key       %AttributeName;  #IMPLIED                               null        %Boolean;       #IMPLIED                               parameter CDATA            #REQUIRED &gt;<BR>&lt;!-- The &quot;plug-in&quot; element specifies the fully qualified class name of a     general-purpose application plug-in module that receives notification of     application startup and shutdown events. An instance of the specified class     is created for each element, and can be configured with nested <BR>&lt;set-property&gt;     elements. The following attributes are supported:     className       Fully qualified Java class name of the plug-in class; must                     implement [org.apache.struts.action.PlugIn].--&gt;<BR>&lt;!ELEMENT plug-in (set-property*)&gt;<BR>&lt;!ATTLIST plug-in  id        ID           #IMPLIED                     className %ClassName;  #REQUIRED &gt;<BR>&lt;!-- ========== Subordinate Elements ====================================== --&gt;<BR>&lt;!-- The &quot;description&quot; element contains descriptive (paragraph length) text     about the surrounding element, suitable for use in GUI tools.--&gt;<BR>&lt;!ELEMENT description (#PCDATA)&gt;<BR>&lt;!ATTLIST description  id ID  #IMPLIED &gt;<BR>&lt;!-- The &quot;display-name&quot; element contains a short (one line) description of     the surrounding element, suitable for use in GUI tools.--&gt;<BR>&lt;!ELEMENT display-name (#PCDATA)&gt;<BR>&lt;!ATTLIST display-name  id ID  #IMPLIED &gt;<BR>&lt;!-- The &quot;icon&quot; element contains a small-icon and large-icon element which     specify the location, relative to the Struts configuration file, for small     and large images used to represent the surrounding element in GUI tools.--&gt;<BR>&lt;!ELEMENT icon (small-icon? , large-icon?)&gt;<BR>&lt;!ATTLIST icon  id ID  #IMPLIED &gt;<BR>&lt;!-- The &quot;large-icon&quot; element specifies the location, relative to the Struts     configuration file, of a resource containing a large (32x32 pixel)     icon image.--&gt;<BR>&lt;!ELEMENT large-icon (%Location;)&gt;<BR>&lt;!ATTLIST large-icon  id ID  #IMPLIED &gt;<BR>&lt;!-- The &quot;set-property&quot; element specifies the method name and initial value of     an additional JavaBean configuration property. When the object representing     the surrounding element is instantiated, the accessor for the indicated     property is called and passed the indicated value. The &quot;set-property&quot;     element is especially useful when a custom subclass is used with     <BR>&lt;data-source&gt;, <BR>&lt;forward&gt;, <BR>&lt;action&gt;, or <BR>&lt;plug-in&gt; elements. The subclass     can be passed whatever other properties may be required to configure the     object without changing how the struts-config is parsed.     property        Name of the JavaBeans property whose setter method                     will be called.     value           String representation of the value to which this                     property will be set, after suitable type conversion--&gt;<BR>&lt;!ELEMENT set-property EMPTY&gt;<BR>&lt;!ATTLIST set-property  id       ID          #IMPLIED                          property %PropName;  #REQUIRED                          value    CDATA       #REQUIRED &gt;<BR>&lt;!-- The &quot;small-icon&quot; element specifies the location, relative to the Struts     configuration file, of a resource containing a small (16x16 pixel)     icon image.--&gt;<BR>&lt;!ELEMENT small-icon (%Location;)&gt;<BR>&lt;!ATTLIST small-icon  id ID  #IMPLIED &gt;]]>

	</dtdsource>
	<ElementDecl Name = "struts-config">
		<dtdsource><![CDATA[
<BR>&lt;!-- ========== Top Level Elements ======================================== --&gt;<BR>&lt;!-- The &quot;struts-config&quot; element is the root of the configuration file     hierarchy, and contains nested elements for all of the other     configuration settings.--&gt;<BR>&lt;!ELEMENT struts-config (data-sources? , form-beans? , global-exceptions? , global-forwards? , action-mappings? , controller? , message-resources* , plug-in*)&gt;<BR>&lt;!ATTLIST struts-config  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> ========== Top Level Elements ========================================  The "struts-config" element is the root of the configuration file
     hierarchy, and contains nested elements for all of the other
     configuration settings.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "data-sources" Frequency = "Optional"/>
				<Ref Element = "form-beans" Frequency = "Optional"/>
				<Ref Element = "global-exceptions" Frequency = "Optional"/>
				<Ref Element = "global-forwards" Frequency = "Optional"/>
				<Ref Element = "action-mappings" Frequency = "Optional"/>
				<Ref Element = "controller" Frequency = "Optional"/>
				<Ref Element = "message-resources" Frequency = "ZeroOrMore"/>
				<Ref Element = "plug-in" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
	</ElementDecl>
	<ElementDecl Name = "data-sources">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;data-sources&quot; element describes a set of DataSource objects [JDBC 2.0     Standard Extension]. The individual DataSource objects are configured through     nested <BR>&lt;data-source&gt; elements.--&gt;<BR>&lt;!ELEMENT data-sources (data-source*)&gt;<BR>&lt;!ATTLIST data-sources  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "data-sources" element describes a set of DataSource objects [JDBC 2.0
     Standard Extension]. The individual DataSource objects are configured through
     nested &amp;lt;data-source&amp;gt; elements.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "data-source" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
	</ElementDecl>
	<ElementDecl Name = "data-source">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;data-source&quot; element describes a DataSource object [JDBC 2.0 Standard     Extension] that will be instantiated, configured, and made available as a     servlet context attribute (or &quot;application-scope bean&quot;). Any object can be     specified so long as it implements [javax.sql.DataSource] and can be     configured entirely from JavaBean properties. The following attributes     are required:     className       The configuration bean for this DataSource object. If                     specified, the object must be a subclass of the default                     configuration bean.                     [&quot;org.apache.struts.config.DataSourceConfig&quot;]     key             Servlet context attribute key under which this data source                     will be stored.  Default is the value specified by string                     constant defined by Globals.DATA_SOURCE_KEY. The application                     module prefix (if any) is appended to the key                     (${key}$prefix}).                     [org.apache.struts.Globals.DATA_SOURCE_KEY]                     NOTE: The application module prefix includes the leading                     slash, so the default datasource for a module named &quot;foo&quot; is                     stored under &quot;org.apache.struts.action.DATA_SOURCE/foo&quot;.     type            Fully qualified Java class name for this data source object.                     The class must implement DataSource [javax.sql.DataSource],                     and the object must be configurable entirely from JavaBean                     properties.--&gt;<BR>&lt;!ELEMENT data-source (set-property*)&gt;<BR>&lt;!ATTLIST data-source  id        ID               #IMPLIED                         className %ClassName;      #IMPLIED                         key       %AttributeName;  #IMPLIED                         type      %ClassName;      #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "data-source" element describes a DataSource object [JDBC 2.0 Standard
     Extension] that will be instantiated, configured, and made available as a
     servlet context attribute (or "application-scope bean"). Any object can be
     specified so long as it implements [javax.sql.DataSource] and can be
     configured entirely from JavaBean properties. The following attributes
     are required:

     className       The configuration bean for this DataSource object. If
                     specified, the object must be a subclass of the default
                     configuration bean.
                     ["org.apache.struts.config.DataSourceConfig"]

     key             Servlet context attribute key under which this data source
                     will be stored.  Default is the value specified by string
                     constant defined by Globals.DATA_SOURCE_KEY. The application
                     module prefix (if any) is appended to the key
                     (${key}$prefix}).
                     [org.apache.struts.Globals.DATA_SOURCE_KEY]

                     NOTE: The application module prefix includes the leading
                     slash, so the default datasource for a module named "foo" is
                     stored under "org.apache.struts.action.DATA_SOURCE/foo".

     type            Fully qualified Java class name for this data source object.
                     The class must implement DataSource [javax.sql.DataSource],
                     and the object must be configurable entirely from JavaBean
                     properties.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "set-property" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
			<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "key" Type = "#UNKNOWN: %AttributeName;"/>
			<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "key" Type = "#UNKNOWN: %AttributeName;"/>
		<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;"/>
	</ElementDecl>
	<ElementDecl Name = "form-beans">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;form-beans&quot; element describes the set of form bean descriptors for this     application module. The following attributes are defined:     type            Fully qualified Java class to use when instantiating                     ActionFormBean objects. If specified, the object must be a                     subclass of the default class type.                     DEPRECATED.                     WARNING:  For Struts 1.0, this value is ignored.  You                     can set the default implementation class name with the                     &quot;formBean&quot; initialization parameter to the Struts                     controller servlet.--&gt;<BR>&lt;!ELEMENT form-beans (form-bean*)&gt;<BR>&lt;!ATTLIST form-beans  id   ID           #IMPLIED                        type %ClassName;  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "form-beans" element describes the set of form bean descriptors for this
     application module. The following attributes are defined:

     type            Fully qualified Java class to use when instantiating
                     ActionFormBean objects. If specified, the object must be a
                     subclass of the default class type.
                     DEPRECATED.

                     WARNING:  For Struts 1.0, this value is ignored.  You
                     can set the default implementation class name with the
                     "formBean" initialization parameter to the Struts
                     controller servlet.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "form-bean" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
			<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;"/>
	</ElementDecl>
	<ElementDecl Name = "form-bean">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;form-bean&quot; element describes an ActionForm subclass     [org.apache.struts.action.ActionForm] that can be referenced by an &quot;action&quot;     element.The &quot;form-bean&quot; element describes a particular form bean, which is a     JavaBean that implements the org.apache.struts.action.ActionForm     class.  The following attributes are defined:     className       The configuration bean for this form bean object. If                     specified, the object must be a subclass of the default                     configuration bean.                     [&quot;org.apache.struts.config.FormBeanConfig&quot;]     dynamic         If the form bean type is a  DynaActionForm subclass (that you                     created), then (and only then) set this attribute to &quot;true&quot;.                     If the type is set to the default DynaActionForm or any                     conventional ActionForm subclass, then this attribute can be                     omitted.                     [true] if type is &quot;org.apache.struts.action.DynaActionForm&quot;                     [false] otherwise  DEPRECATED - THIS IS NOW DETERMINED                     DYNAMICALLY BASED ON THE SPECIFIED IMPLEMENTATION CLASS.     name            The unique identifier for this form bean. Referenced by the                     <BR>&lt;action&gt; element to specify which form bean to use with its                     request.     type            Fully qualified Java class name of the ActionForm subclass                     to use with this form bean.--&gt;<BR>&lt;!ELEMENT form-bean (icon? , display-name? , description? , set-property* , form-property*)&gt;<BR>&lt;!ATTLIST form-bean  id        ID           #IMPLIED                       className %ClassName;  #IMPLIED                       dynamic        %Boolean;       #IMPLIED                       name      %BeanName;   #REQUIRED                       type      %ClassName;  #REQUIRED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "form-bean" element describes an ActionForm subclass
     [org.apache.struts.action.ActionForm] that can be referenced by an "action"
     element.


The "form-bean" element describes a particular form bean, which is a
     JavaBean that implements the org.apache.struts.action.ActionForm
     class.  The following attributes are defined:

     className       The configuration bean for this form bean object. If
                     specified, the object must be a subclass of the default
                     configuration bean.
                     ["org.apache.struts.config.FormBeanConfig"]

     dynamic         If the form bean type is a  DynaActionForm subclass (that you
                     created), then (and only then) set this attribute to "true".
                     If the type is set to the default DynaActionForm or any
                     conventional ActionForm subclass, then this attribute can be
                     omitted.
                     [true] if type is "org.apache.struts.action.DynaActionForm"
                     [false] otherwise  DEPRECATED - THIS IS NOW DETERMINED
                     DYNAMICALLY BASED ON THE SPECIFIED IMPLEMENTATION CLASS.

     name            The unique identifier for this form bean. Referenced by the
                     &amp;lt;action&amp;gt; element to specify which form bean to use with its
                     request.

     type            Fully qualified Java class name of the ActionForm subclass
                     to use with this form bean.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "icon" Frequency = "Optional"/>
				<Ref Element = "display-name" Frequency = "Optional"/>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "set-property" Frequency = "ZeroOrMore"/>
				<Ref Element = "form-property" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
			<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "dynamic" Type = "Enumeration">
				<Enumeration>
					<EnumerationValue Value = "true"/>
					<EnumerationValue Value = "false"/>
					<EnumerationValue Value = "yes"/>
					<EnumerationValue Value = "no"/>
				</Enumeration>
			</AttDef>
			<AttDef Name = "name" Type = "#UNKNOWN: %BeanName;" Required = "Yes"/>
			<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;" Required = "Yes"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "dynamic" Type = "Enumeration">
			<Enumeration>
				<EnumerationValue Value = "true"/>
				<EnumerationValue Value = "false"/>
				<EnumerationValue Value = "yes"/>
				<EnumerationValue Value = "no"/>
			</Enumeration>
		</AttDef>
		<AttDef Name = "name" Type = "#UNKNOWN: %BeanName;" Required = "Yes"/>
		<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;" Required = "Yes"/>
	</ElementDecl>
	<ElementDecl Name = "form-property">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;form-property&quot; element describes a JavaBean property that can be used to     configure an instance of a DynaActionForm or a subclass thereof. This element     is only utilized when the &quot;type&quot; attribute of the enclosing &quot;form-bean&quot; element     is [org.apache.struts.action.DynaActionForm] or a subclass of DynaActionForm. If     a custom DynaActionForm subclass is used, then the &quot;dynamic&quot; attribute of the     enclosing <BR>&lt;form-bean&gt; element must be set to &quot;true&quot;. Since Struts 1.1.     className       The configuration bean for this form property object. If                     specified, the object must be a subclass of the default                     configuration bean.                     [&quot;org.apache.struts.config.FormPropertyConfig&quot;]     initial         String representation of the initial value for this property.                     If not specified, primitives will be initialized to zero and                     objects initialized to the zero-argument instantiation of that                     object class.  For example, Strings will be initialized to &quot;&quot;     name            The name of the JavaBean property described by this element.     size            The number of array elements to create if the value of the                     &quot;type&quot; attribute specifies an array, but there is no value                     specified for the &quot;initial&quot; attribute.     type            Fully qualified Java class name of the field underlying this                     property, optionally followed by &quot;[]&quot; to indicate that the                     field is indexed.--&gt;<BR>&lt;!ELEMENT form-property (set-property*)&gt;<BR>&lt;!ATTLIST form-property  className %ClassName;  #IMPLIED                           initial   CDATA        #IMPLIED                           name      %PropName;   #REQUIRED                           size      %Integer;    #IMPLIED                           type      %ClassName;  #REQUIRED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "form-property" element describes a JavaBean property that can be used to
     configure an instance of a DynaActionForm or a subclass thereof. This element
     is only utilized when the "type" attribute of the enclosing "form-bean" element
     is [org.apache.struts.action.DynaActionForm] or a subclass of DynaActionForm. If
     a custom DynaActionForm subclass is used, then the "dynamic" attribute of the
     enclosing &amp;lt;form-bean&amp;gt; element must be set to "true". Since Struts 1.1.

     className       The configuration bean for this form property object. If
                     specified, the object must be a subclass of the default
                     configuration bean.
                     ["org.apache.struts.config.FormPropertyConfig"]

     initial         String representation of the initial value for this property.
                     If not specified, primitives will be initialized to zero and
                     objects initialized to the zero-argument instantiation of that
                     object class.  For example, Strings will be initialized to ""


     name            The name of the JavaBean property described by this element.

     size            The number of array elements to create if the value of the
                     "type" attribute specifies an array, but there is no value
                     specified for the "initial" attribute.

     type            Fully qualified Java class name of the field underlying this
                     property, optionally followed by "[]" to indicate that the
                     field is indexed.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "set-property" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "initial"/>
			<AttDef Name = "name" Type = "#UNKNOWN: %PropName;" Required = "Yes"/>
			<AttDef Name = "size" Type = "#UNKNOWN: %Integer;"/>
			<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;" Required = "Yes"/>
		</AttGroup>
		<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "initial"/>
		<AttDef Name = "name" Type = "#UNKNOWN: %PropName;" Required = "Yes"/>
		<AttDef Name = "size" Type = "#UNKNOWN: %Integer;"/>
		<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;" Required = "Yes"/>
	</ElementDecl>
	<ElementDecl Name = "global-exceptions">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;global-exceptions&quot; element describes a set of exceptions that might be     thrown by an Action object. The handling of individual exception types is     configured through nested exception elements. An <BR>&lt;action&gt; element may     override a global exception handler by registering a local exception handler     for the same exception type. Since Struts 1.1.--&gt;<BR>&lt;!ELEMENT global-exceptions (exception*)&gt;<BR>&lt;!ATTLIST global-exceptions  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "global-exceptions" element describes a set of exceptions that might be
     thrown by an Action object. The handling of individual exception types is
     configured through nested exception elements. An &amp;lt;action&amp;gt; element may
     override a global exception handler by registering a local exception handler
     for the same exception type. Since Struts 1.1.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "exception" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
	</ElementDecl>
	<ElementDecl Name = "exception">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;exception&quot; element registers an ExceptionHandler for an exception type.     The following attributes are defined:    bundle           Servlet context attribute for the message resources bundle                     associated with this handler. The default attribute is the                     value specified by the string constant declared at                     Globals.MESSAGES_KEY.                     [org.apache.struts.Globals.MESSAGES_KEY]    className        The configuration bean for this ExceptionHandler object.                     If specified, className must be a subclass of the default                     configuration bean                     [&quot;org.apache.struts.config.ExceptionConfig&quot;]    handler          Fully qualified Java class name for this exception handler.                     [&quot;org.apache.struts.action.ExceptionHandler&quot;]    key              The key to use with this handler's message resource bundle                     that will retrieve the error message template for this                     exception.    path             The module-relative URI to the resource that will complete                     the request/response if this exception occurs.    scope            The context (&quot;request&quot; or &quot;session&quot;) that is used to access                     the ActionError object [org.apache.struts.action.ActionError]                     for this exception.    type             Fully qualified Java class name of the exception type to                     register with this handler.--&gt;<BR>&lt;!ELEMENT exception (icon? , display-name? , description? , set-property*)&gt;<BR>&lt;!ATTLIST exception  id        ID               #IMPLIED                       bundle    %AttributeName;  #IMPLIED                       className %ClassName;      #IMPLIED                       handler   %ClassName;      #IMPLIED                       key       CDATA            #REQUIRED                       path      %RequestPath;    #IMPLIED                       scope     CDATA            #IMPLIED                       type      %ClassName;      #REQUIRED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "exception" element registers an ExceptionHandler for an exception type.
     The following attributes are defined:

    bundle           Servlet context attribute for the message resources bundle
                     associated with this handler. The default attribute is the
                     value specified by the string constant declared at
                     Globals.MESSAGES_KEY.
                     [org.apache.struts.Globals.MESSAGES_KEY]

    className        The configuration bean for this ExceptionHandler object.
                     If specified, className must be a subclass of the default
                     configuration bean
                     ["org.apache.struts.config.ExceptionConfig"]

    handler          Fully qualified Java class name for this exception handler.
                     ["org.apache.struts.action.ExceptionHandler"]

    key              The key to use with this handler's message resource bundle
                     that will retrieve the error message template for this
                     exception.

    path             The module-relative URI to the resource that will complete
                     the request/response if this exception occurs.

    scope            The context ("request" or "session") that is used to access
                     the ActionError object [org.apache.struts.action.ActionError]
                     for this exception.

    type             Fully qualified Java class name of the exception type to
                     register with this handler.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "icon" Frequency = "Optional"/>
				<Ref Element = "display-name" Frequency = "Optional"/>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "set-property" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
			<AttDef Name = "bundle" Type = "#UNKNOWN: %AttributeName;"/>
			<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "handler" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "key" Required = "Yes"/>
			<AttDef Name = "path" Type = "#UNKNOWN: %RequestPath;"/>
			<AttDef Name = "scope"/>
			<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;" Required = "Yes"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "bundle" Type = "#UNKNOWN: %AttributeName;"/>
		<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "handler" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "key" Required = "Yes"/>
		<AttDef Name = "path" Type = "#UNKNOWN: %RequestPath;"/>
		<AttDef Name = "scope"/>
		<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;" Required = "Yes"/>
	</ElementDecl>
	<ElementDecl Name = "global-forwards">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;global-forwards&quot; element describes a set of ActionForward objects     [org.apache.struts.action.ActionForward] that are available to all Action     objects as a return value. The individual ActionForwards are configured     through nested <BR>&lt;forward&gt; elements. An <BR>&lt;action&gt; element may override a global     forward by defining a local <BR>&lt;forward&gt; of the same name.     type            Fully qualified Java class to use when instantiating                     ActionForward objects.  If specified, the object must be a                     subclass of the default class type.                     DEPRECATED.                     WARNING:  For Struts 1.0, this value is ignored.  You                     can set the default implementation class name with the                     &quot;forward&quot; initialization parameter to the Struts                     controller servlet.--&gt;<BR>&lt;!ELEMENT global-forwards (forward*)&gt;<BR>&lt;!ATTLIST global-forwards  id   ID           #IMPLIED                             type %ClassName;  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "global-forwards" element describes a set of ActionForward objects
     [org.apache.struts.action.ActionForward] that are available to all Action
     objects as a return value. The individual ActionForwards are configured
     through nested &amp;lt;forward&amp;gt; elements. An &amp;lt;action&amp;gt; element may override a global
     forward by defining a local &amp;lt;forward&amp;gt; of the same name.

     type            Fully qualified Java class to use when instantiating
                     ActionForward objects.  If specified, the object must be a
                     subclass of the default class type.
                     DEPRECATED.

                     WARNING:  For Struts 1.0, this value is ignored.  You
                     can set the default implementation class name with the
                     "forward" initialization parameter to the Struts
                     controller servlet.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "forward" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
			<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;"/>
	</ElementDecl>
	<ElementDecl Name = "forward">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;forward&quot; element describes an ActionForward that is to be made     available to an Action as a return value. An ActionForward is referenced by     a logical name and encapsulates a URI. A &quot;forward&quot; element may be used to     describe both global and local ActionForwards. Global forwards are available     to all the Action objects in the application module. Local forwards can be     nested within an <BR>&lt;action&gt; element and only available to an Action object     when it is invoked through that ActionMapping.     className       Fully qualified Java class name of ActionForward                     subclass to use for this object.                     [&quot;org.apache.struts.action.ActionForward&quot;]    contextRelative  Set this to &quot;true&quot; if, in a modular application, the path                     attribute starts with a slash &quot;/&quot; and should be considered                     relative to the entire web application rather than the module.                     Since Struts 1.1.                     [false]     name            The unique identifier for this forward. Referenced by the                     Action object at runtime to select - by its logical name -                     the resource that should complete the request/response.     path            The module-relative or context-relative path to the resources                     that is encapsulated by the logical name of this ActionForward.                     If the path is to be considered context-relative when used in                     a modular application, then the contextRelative attribute                     should be set to &quot;true&quot;. This value should begin with a slash                     (&quot;/&quot;) character.     redirect        Set to &quot;true&quot; if a redirect instruction should be issued to                     the user-agent so that a new request is issued for this                     forward's resource. If true,  RequestDispatcher.Redirect is                     called. If &quot;false&quot;, RequestDispatcher.forward is called instead.                     [false]--&gt;<BR>&lt;!ELEMENT forward (icon? , display-name? , description? , set-property*)&gt;<BR>&lt;!ATTLIST forward  id              ID             #IMPLIED                     className       %ClassName;    #IMPLIED                     contextRelative %Boolean;      #IMPLIED                     name            CDATA          #REQUIRED                     path            %RequestPath;  #REQUIRED                     redirect       %Boolean;       #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "forward" element describes an ActionForward that is to be made
     available to an Action as a return value. An ActionForward is referenced by
     a logical name and encapsulates a URI. A "forward" element may be used to
     describe both global and local ActionForwards. Global forwards are available
     to all the Action objects in the application module. Local forwards can be
     nested within an &amp;lt;action&amp;gt; element and only available to an Action object
     when it is invoked through that ActionMapping.

     className       Fully qualified Java class name of ActionForward
                     subclass to use for this object.
                     ["org.apache.struts.action.ActionForward"]

    contextRelative  Set this to "true" if, in a modular application, the path
                     attribute starts with a slash "/" and should be considered
                     relative to the entire web application rather than the module.
                     Since Struts 1.1.
                     [false]

     name            The unique identifier for this forward. Referenced by the
                     Action object at runtime to select - by its logical name -
                     the resource that should complete the request/response.

     path            The module-relative or context-relative path to the resources
                     that is encapsulated by the logical name of this ActionForward.
                     If the path is to be considered context-relative when used in
                     a modular application, then the contextRelative attribute
                     should be set to "true". This value should begin with a slash
                     ("/") character.

     redirect        Set to "true" if a redirect instruction should be issued to
                     the user-agent so that a new request is issued for this
                     forward's resource. If true,  RequestDispatcher.Redirect is
                     called. If "false", RequestDispatcher.forward is called instead.
                     [false]

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "icon" Frequency = "Optional"/>
				<Ref Element = "display-name" Frequency = "Optional"/>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "set-property" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
			<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "contextRelative" Type = "Enumeration">
				<Enumeration>
					<EnumerationValue Value = "true"/>
					<EnumerationValue Value = "false"/>
					<EnumerationValue Value = "yes"/>
					<EnumerationValue Value = "no"/>
				</Enumeration>
			</AttDef>
			<AttDef Name = "name" Required = "Yes"/>
			<AttDef Name = "path" Type = "#UNKNOWN: %RequestPath;" Required = "Yes"/>
			<AttDef Name = "redirect" Type = "Enumeration">
				<Enumeration>
					<EnumerationValue Value = "true"/>
					<EnumerationValue Value = "false"/>
					<EnumerationValue Value = "yes"/>
					<EnumerationValue Value = "no"/>
				</Enumeration>
			</AttDef>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "contextRelative" Type = "Enumeration">
			<Enumeration>
				<EnumerationValue Value = "true"/>
				<EnumerationValue Value = "false"/>
				<EnumerationValue Value = "yes"/>
				<EnumerationValue Value = "no"/>
			</Enumeration>
		</AttDef>
		<AttDef Name = "name" Required = "Yes"/>
		<AttDef Name = "path" Type = "#UNKNOWN: %RequestPath;" Required = "Yes"/>
		<AttDef Name = "redirect" Type = "Enumeration">
			<Enumeration>
				<EnumerationValue Value = "true"/>
				<EnumerationValue Value = "false"/>
				<EnumerationValue Value = "yes"/>
				<EnumerationValue Value = "no"/>
			</Enumeration>
		</AttDef>
	</ElementDecl>
	<ElementDecl Name = "action-mappings">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;action-mappings&quot; element describes a set of ActionMapping objects     [org.apache.struts.action.ActionMapping] that are available to process     requests matching the url-pattern our ActionServlet registered with the     container. The individual ActionMappings are configured through nested     <BR>&lt;action&gt; elements. The following attributes are defined:     type           Fully qualified Java class to use when instantiating                    ActionMapping objects. If specified, the object must be a                    subclass of the default class type.                    WARNING:  For Struts 1.0, this value is ignored.  You                    can set the default implementation class name with the                    &quot;mapping&quot; initialization parameter to the Struts                    controller servlet.--&gt;<BR>&lt;!ELEMENT action-mappings (action*)&gt;<BR>&lt;!ATTLIST action-mappings  id   ID           #IMPLIED                             type %ClassName;  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "action-mappings" element describes a set of ActionMapping objects
     [org.apache.struts.action.ActionMapping] that are available to process
     requests matching the url-pattern our ActionServlet registered with the
     container. The individual ActionMappings are configured through nested
     &amp;lt;action&amp;gt; elements. The following attributes are defined:

     type           Fully qualified Java class to use when instantiating
                    ActionMapping objects. If specified, the object must be a
                    subclass of the default class type.

                    WARNING:  For Struts 1.0, this value is ignored.  You
                    can set the default implementation class name with the
                    "mapping" initialization parameter to the Struts
                    controller servlet.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "action" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
			<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;"/>
	</ElementDecl>
	<ElementDecl Name = "action">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;action&quot; element describes an ActionMapping object that is to be used     to process a request for a specific module-relative URI. The following     attributes are defined:     attribute       Name of the request-scope or session-scope attribute that                     is used to access our ActionForm bean, if it is other than                     the bean's specified &quot;name&quot;. Optional if &quot;name&quot; is specified,                     else not valid.     className       The fully qualified Java class name of the ActionMapping                     subclass to use for this action mapping object. Defaults to                     the type specified by the enclosing <BR>&lt;action-mappings&gt;                     element or to &quot;org.apache.struts.action.ActionMapping&quot; if                     not specified.                     [&quot;org.apache.struts.action.ActionMapping&quot;]     forward         Module-relative path of the servlet or other resource that                     will process this request, instead of the Action class                     specified by &quot;type&quot;.  The path WILL NOT be processed                     through the &quot;forwardPattern&quot; attribute that is configured                     on the &quot;controller&quot; element for this application module.                     Exactly one of &quot;forward&quot;, &quot;include&quot;, or &quot;type&quot; must be                     specified.     include         Module-relative path of the servlet or other resource that                     will process this request, instead of the Action class                     specified by &quot;type&quot;.  The path WILL NOT be processed                     through the &quot;forwardPattern&quot; attribute that is configured                     on the &quot;controller&quot; element for this application module.                     Exactly one of &quot;forward&quot;, &quot;include&quot;, or &quot;type&quot; must be                     specified.     input           Module-relative path of the action or other resource to                     which control should be returned if a validation error is                     encountered. Valid only when &quot;name&quot; is specified. Required                     if &quot;name&quot; is specified and the input bean returns                     validation errors. Optional if &quot;name&quot; is specified and the                     input bean does not return validation errors.     name            Name of the form bean, if any, that is associated with this                     action mapping.     path            The module-relative path of the submitted request, starting                     with a &quot;/&quot; character, and without the filename extension if                     extension mapping is used.                     NOTE:  Do *not* include a period in your path name,                     because it will look like a filename extension and                     cause your Action to not be located.     parameter       General-purpose configuration parameter that can be used to                     pass extra information to the Action object selected by                     this action mapping.     prefix          Prefix used to match request parameter names to ActionForm                     property names, if any. Optional if &quot;name&quot; is specified,                     else not allowed.     roles           Comma-delimited list of security role names that are allowed                     access to this ActionMapping object. Since Struts 1.1.     scope           The context (&quot;request&quot; or &quot;session&quot;) that is used to                     access our ActionForm bean, if any.  Optional if &quot;name&quot; is                     specified, else not valid.     suffix          Suffix used to match request parameter names to ActionForm                     bean property names, if any. Optional if &quot;name&quot; is                     specified, else not valid.     type            Fully qualified Java class name of the Action subclass                     [org.apache.struts.action.Action] that will process requests                     for this action mapping. Not valid if either the &quot;forward&quot;                     or &quot;include&quot; attribute is specified.  Exactly one of                     &quot;forward&quot;, &quot;include&quot;, or &quot;type&quot; must be specified.     unknown         Set to &quot;true&quot; if this object should be configured as the                     default action mapping for this module. If a request does not                     match another object, it will be passed to the ActionMapping                     object with unknown set to &quot;true&quot;. Only one ActionMapping                     can be marked as &quot;unknown&quot; within a module.                     [false]     validate        Set to &quot;true&quot; if the validate method of the ActionForm bean                     should be called prior to calling the Action object for this                     action mapping, or set to &quot;false&quot; if you do not want the                     validate method called.                     [true]--&gt;<BR>&lt;!ELEMENT action (icon? , display-name? , description? , set-property* , exception* , forward*)&gt;<BR>&lt;!ATTLIST action  id        ID             #IMPLIED                    attribute %BeanName;     #IMPLIED                    className %ClassName;    #IMPLIED                    forward   %RequestPath;  #IMPLIED                    include   %RequestPath;  #IMPLIED                    input     %RequestPath;  #IMPLIED                    name      %BeanName;     #IMPLIED                    parameter CDATA          #IMPLIED                    path      %RequestPath;  #REQUIRED                    prefix    CDATA          #IMPLIED                    roles     CDATA          #IMPLIED                    scope          %RequestScope;  #IMPLIED                    suffix    CDATA          #IMPLIED                    type      %ClassName;    #IMPLIED                    unknown        %Boolean;       #IMPLIED                    validate       %Boolean;       #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "action" element describes an ActionMapping object that is to be used
     to process a request for a specific module-relative URI. The following
     attributes are defined:

     attribute       Name of the request-scope or session-scope attribute that
                     is used to access our ActionForm bean, if it is other than
                     the bean's specified "name". Optional if "name" is specified,
                     else not valid.

     className       The fully qualified Java class name of the ActionMapping
                     subclass to use for this action mapping object. Defaults to
                     the type specified by the enclosing &amp;lt;action-mappings&amp;gt;
                     element or to "org.apache.struts.action.ActionMapping" if
                     not specified.
                     ["org.apache.struts.action.ActionMapping"]

     forward         Module-relative path of the servlet or other resource that
                     will process this request, instead of the Action class
                     specified by "type".  The path WILL NOT be processed
                     through the "forwardPattern" attribute that is configured
                     on the "controller" element for this application module.
                     Exactly one of "forward", "include", or "type" must be
                     specified.

     include         Module-relative path of the servlet or other resource that
                     will process this request, instead of the Action class
                     specified by "type".  The path WILL NOT be processed
                     through the "forwardPattern" attribute that is configured
                     on the "controller" element for this application module.
                     Exactly one of "forward", "include", or "type" must be
                     specified.

     input           Module-relative path of the action or other resource to
                     which control should be returned if a validation error is
                     encountered. Valid only when "name" is specified. Required
                     if "name" is specified and the input bean returns
                     validation errors. Optional if "name" is specified and the
                     input bean does not return validation errors.

     name            Name of the form bean, if any, that is associated with this
                     action mapping.

     path            The module-relative path of the submitted request, starting
                     with a "/" character, and without the filename extension if
                     extension mapping is used.

                     NOTE:  Do *not* include a period in your path name,
                     because it will look like a filename extension and
                     cause your Action to not be located.

     parameter       General-purpose configuration parameter that can be used to
                     pass extra information to the Action object selected by
                     this action mapping.

     prefix          Prefix used to match request parameter names to ActionForm
                     property names, if any. Optional if "name" is specified,
                     else not allowed.

     roles           Comma-delimited list of security role names that are allowed
                     access to this ActionMapping object. Since Struts 1.1.

     scope           The context ("request" or "session") that is used to
                     access our ActionForm bean, if any.  Optional if "name" is
                     specified, else not valid.

     suffix          Suffix used to match request parameter names to ActionForm
                     bean property names, if any. Optional if "name" is
                     specified, else not valid.

     type            Fully qualified Java class name of the Action subclass
                     [org.apache.struts.action.Action] that will process requests
                     for this action mapping. Not valid if either the "forward"
                     or "include" attribute is specified.  Exactly one of
                     "forward", "include", or "type" must be specified.

     unknown         Set to "true" if this object should be configured as the
                     default action mapping for this module. If a request does not
                     match another object, it will be passed to the ActionMapping
                     object with unknown set to "true". Only one ActionMapping
                     can be marked as "unknown" within a module.
                     [false]

     validate        Set to "true" if the validate method of the ActionForm bean
                     should be called prior to calling the Action object for this
                     action mapping, or set to "false" if you do not want the
                     validate method called.
                     [true]

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "icon" Frequency = "Optional"/>
				<Ref Element = "display-name" Frequency = "Optional"/>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "set-property" Frequency = "ZeroOrMore"/>
				<Ref Element = "exception" Frequency = "ZeroOrMore"/>
				<Ref Element = "forward" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
			<AttDef Name = "attribute" Type = "#UNKNOWN: %BeanName;"/>
			<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "forward" Type = "#UNKNOWN: %RequestPath;"/>
			<AttDef Name = "include" Type = "#UNKNOWN: %RequestPath;"/>
			<AttDef Name = "input" Type = "#UNKNOWN: %RequestPath;"/>
			<AttDef Name = "name" Type = "#UNKNOWN: %BeanName;"/>
			<AttDef Name = "parameter"/>
			<AttDef Name = "path" Type = "#UNKNOWN: %RequestPath;" Required = "Yes"/>
			<AttDef Name = "prefix"/>
			<AttDef Name = "roles"/>
			<AttDef Name = "scope" Type = "Enumeration">
				<Enumeration>
					<EnumerationValue Value = "request"/>
					<EnumerationValue Value = "session"/>
				</Enumeration>
			</AttDef>
			<AttDef Name = "suffix"/>
			<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "unknown" Type = "Enumeration">
				<Enumeration>
					<EnumerationValue Value = "true"/>
					<EnumerationValue Value = "false"/>
					<EnumerationValue Value = "yes"/>
					<EnumerationValue Value = "no"/>
				</Enumeration>
			</AttDef>
			<AttDef Name = "validate" Type = "Enumeration">
				<Enumeration>
					<EnumerationValue Value = "true"/>
					<EnumerationValue Value = "false"/>
					<EnumerationValue Value = "yes"/>
					<EnumerationValue Value = "no"/>
				</Enumeration>
			</AttDef>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "attribute" Type = "#UNKNOWN: %BeanName;"/>
		<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "forward" Type = "#UNKNOWN: %RequestPath;"/>
		<AttDef Name = "include" Type = "#UNKNOWN: %RequestPath;"/>
		<AttDef Name = "input" Type = "#UNKNOWN: %RequestPath;"/>
		<AttDef Name = "name" Type = "#UNKNOWN: %BeanName;"/>
		<AttDef Name = "parameter"/>
		<AttDef Name = "path" Type = "#UNKNOWN: %RequestPath;" Required = "Yes"/>
		<AttDef Name = "prefix"/>
		<AttDef Name = "roles"/>
		<AttDef Name = "scope" Type = "Enumeration">
			<Enumeration>
				<EnumerationValue Value = "request"/>
				<EnumerationValue Value = "session"/>
			</Enumeration>
		</AttDef>
		<AttDef Name = "suffix"/>
		<AttDef Name = "type" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "unknown" Type = "Enumeration">
			<Enumeration>
				<EnumerationValue Value = "true"/>
				<EnumerationValue Value = "false"/>
				<EnumerationValue Value = "yes"/>
				<EnumerationValue Value = "no"/>
			</Enumeration>
		</AttDef>
		<AttDef Name = "validate" Type = "Enumeration">
			<Enumeration>
				<EnumerationValue Value = "true"/>
				<EnumerationValue Value = "false"/>
				<EnumerationValue Value = "yes"/>
				<EnumerationValue Value = "no"/>
			</Enumeration>
		</AttDef>
	</ElementDecl>
	<ElementDecl Name = "controller">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;controller&quot; element describes the ControllerConfig bean     [org.apache.struts.config.ControllerConfig] that encapsulates     an application module's runtime configuration. The following     attributes are defined:     bufferSize      The size of the input buffer used when processing                     file uploads.                     [4096]     className       Fully qualified Java class name of the                     ControllerConfig subclass for this controller object.                     If specified, the object must be a subclass of the                     default class.                     [&quot;org.apache.struts.config.ControllerConfig&quot;]     contentType     Default content type (and optional character encoding) to                     be set on each response. May be overridden by the Action,                     JSP, or other resource to which the request is forwarded.                     [&quot;text/html&quot;]     debug           Debugging detail level for this module. [0]                     DEPRECATED - configure the logging detail level                     in your underlying logging implementation.     forwardPattern  Replacement pattern defining how the &quot;path&quot; attribute of a                     <BR>&lt;forward&gt; element is mapped to a context-relative URL when                     it starts with a slash (and when the contextRelative                     property is false). This value may consist of any                     combination of the following:                     - &quot;$M&quot; - Replaced by the module prefix of this module                     - &quot;$P&quot; - Replaced by the &quot;path&quot; attribute of the  selected                     &quot;forward&quot; element                     - &quot;$$&quot; - Causes a literal dollar sign to be rendered                     - &quot;$x&quot; - (Where &quot;x&quot; is any character not defined above)                     Silently swallowed, reserved for future use                     If not specified, the default forwardPattern is &quot;$M$P&quot;,                     which is consistent with the previous behavior of                     forwards.  Since Struts 1.1.  [&quot;$M$P&quot;]     inputForward    Set to &quot;true&quot; if you want the &quot;input&quot; attribute of                     <BR>&lt;action&gt; elements to be the name of a local or global                     ActionForward, which will then be used to calculate the                     ultimate URL. Set to &quot;false&quot; (the default) to treat the                     &quot;input&quot; parameter of <BR>&lt;action&gt; elements as a                     module-relative path to the resource                     to be used as the input form. Since Struts 1.1.                     [false]     locale          Set to &quot;true&quot; if you want a Locale object stored in the                     user's session if not already present.                     [true]     maxFileSize     The maximum size (in bytes) of a file to be accepted as a                     file upload.  Can be expressed as a number followed by a                     &quot;K&quot;, &quot;M&quot;, or &quot;G&quot;, which are interpreted to mean kilobytes,                     megabytes, or gigabytes, respectively.                     [&quot;250M&quot;]     memFileSize     The maximum size (in bytes) of a file whose contents will                     be retained in memory after uploading. Files larger than                     this threshold will be written to some alternative storage                     medium, typically a hard disk. Can be expressed as a number                     followed by a &quot;K&quot;, &quot;M&quot;, or &quot;G&quot;, which are interpreted to                     mean kilobytes, megabytes, or gigabytes, respectively.                     [&quot;256K&quot;]     multipartClass  The fully qualified Java class name of the multipart                     request handler class to be used with this module.                     [&quot;org.apache.struts.upload.CommonsMultipartRequestHandler&quot;]     nocache         Set to &quot;true&quot; if you want the controller to add HTTP                     headers for defeating caching to every response from                     this module.  [false]     pagePattern     Replacement pattern defining how the &quot;page&quot; attribute of                     custom tags using it is mapped to a context-relative URL                     of the corresponding resource.  This value may consist of                     any combination of the following:                     - &quot;$M&quot; - Replaced by the module prefix of this module                     - &quot;$P&quot; - Replaced by the value of the &quot;page&quot; attribute                     - &quot;$$&quot; - Causes a literal dollar sign to be rendered                     - &quot;$x&quot; - (Where &quot;x&quot; is any character not defined above)                              Silently swallowed, reserved for future use                     If not specified, the default forwardPattern is                     &quot;$M$P&quot;, which is consistent with previous hard coded                     behavior of URL evaluation for &quot;page&quot; attributes.                     [&quot;$M$P&quot;]     processorClass  The fully qualified Java class name of the                     RequestProcessor subclass to be used with this module.                     [&quot;org.apache.struts.action.RequestProcessor&quot;]     tempDir         Temporary working directory to use when processing                     file uploads.                     [{Directory provided by servlet container}]--&gt;<BR>&lt;!ELEMENT controller (set-property*)&gt;<BR>&lt;!ATTLIST controller  id             ID           #IMPLIED                        bufferSize     %Integer;    #IMPLIED                        className      %ClassName;  #IMPLIED                        contentType    CDATA        #IMPLIED                        debug          %Integer;    #IMPLIED                        forwardPattern CDATA        #IMPLIED                        inputForward   %Boolean;       #IMPLIED                        locale         %Boolean;       #IMPLIED                        maxFileSize    CDATA        #IMPLIED                        memFileSize    CDATA        #IMPLIED                        multipartClass %ClassName;  #IMPLIED                        nocache        %Boolean;       #IMPLIED                        pagePattern    CDATA        #IMPLIED                        processorClass %ClassName;  #IMPLIED                        tempDir        CDATA        #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "controller" element describes the ControllerConfig bean
     [org.apache.struts.config.ControllerConfig] that encapsulates
     an application module's runtime configuration. The following
     attributes are defined:

     bufferSize      The size of the input buffer used when processing
                     file uploads.
                     [4096]

     className       Fully qualified Java class name of the
                     ControllerConfig subclass for this controller object.
                     If specified, the object must be a subclass of the
                     default class.
                     ["org.apache.struts.config.ControllerConfig"]

     contentType     Default content type (and optional character encoding) to
                     be set on each response. May be overridden by the Action,
                     JSP, or other resource to which the request is forwarded.
                     ["text/html"]

     debug           Debugging detail level for this module. [0]
                     DEPRECATED - configure the logging detail level
                     in your underlying logging implementation.

     forwardPattern  Replacement pattern defining how the "path" attribute of a
                     &amp;lt;forward&amp;gt; element is mapped to a context-relative URL when
                     it starts with a slash (and when the contextRelative
                     property is false). This value may consist of any
                     combination of the following:
                     - "$M" - Replaced by the module prefix of this module
                     - "$P" - Replaced by the "path" attribute of the  selected
                     "forward" element
                     - "$$" - Causes a literal dollar sign to be rendered
                     - "$x" - (Where "x" is any character not defined above)
                     Silently swallowed, reserved for future use
                     If not specified, the default forwardPattern is "$M$P",
                     which is consistent with the previous behavior of
                     forwards.  Since Struts 1.1.  ["$M$P"]

     inputForward    Set to "true" if you want the "input" attribute of
                     &amp;lt;action&amp;gt; elements to be the name of a local or global
                     ActionForward, which will then be used to calculate the
                     ultimate URL. Set to "false" (the default) to treat the
                     "input" parameter of &amp;lt;action&amp;gt; elements as a
                     module-relative path to the resource
                     to be used as the input form. Since Struts 1.1.
                     [false]

     locale          Set to "true" if you want a Locale object stored in the
                     user's session if not already present.
                     [true]

     maxFileSize     The maximum size (in bytes) of a file to be accepted as a
                     file upload.  Can be expressed as a number followed by a
                     "K", "M", or "G", which are interpreted to mean kilobytes,
                     megabytes, or gigabytes, respectively.
                     ["250M"]

     memFileSize     The maximum size (in bytes) of a file whose contents will
                     be retained in memory after uploading. Files larger than
                     this threshold will be written to some alternative storage
                     medium, typically a hard disk. Can be expressed as a number
                     followed by a "K", "M", or "G", which are interpreted to
                     mean kilobytes, megabytes, or gigabytes, respectively.
                     ["256K"]

     multipartClass  The fully qualified Java class name of the multipart
                     request handler class to be used with this module.
                     ["org.apache.struts.upload.CommonsMultipartRequestHandler"]

     nocache         Set to "true" if you want the controller to add HTTP
                     headers for defeating caching to every response from
                     this module.  [false]

     pagePattern     Replacement pattern defining how the "page" attribute of
                     custom tags using it is mapped to a context-relative URL
                     of the corresponding resource.  This value may consist of
                     any combination of the following:
                     - "$M" - Replaced by the module prefix of this module
                     - "$P" - Replaced by the value of the "page" attribute
                     - "$$" - Causes a literal dollar sign to be rendered
                     - "$x" - (Where "x" is any character not defined above)
                              Silently swallowed, reserved for future use
                     If not specified, the default forwardPattern is
                     "$M$P", which is consistent with previous hard coded
                     behavior of URL evaluation for "page" attributes.
                     ["$M$P"]

     processorClass  The fully qualified Java class name of the
                     RequestProcessor subclass to be used with this module.
                     ["org.apache.struts.action.RequestProcessor"]

     tempDir         Temporary working directory to use when processing
                     file uploads.
                     [{Directory provided by servlet container}]

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "set-property" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
			<AttDef Name = "bufferSize" Type = "#UNKNOWN: %Integer;"/>
			<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "contentType"/>
			<AttDef Name = "debug" Type = "#UNKNOWN: %Integer;"/>
			<AttDef Name = "forwardPattern"/>
			<AttDef Name = "inputForward" Type = "Enumeration">
				<Enumeration>
					<EnumerationValue Value = "true"/>
					<EnumerationValue Value = "false"/>
					<EnumerationValue Value = "yes"/>
					<EnumerationValue Value = "no"/>
				</Enumeration>
			</AttDef>
			<AttDef Name = "locale" Type = "Enumeration">
				<Enumeration>
					<EnumerationValue Value = "true"/>
					<EnumerationValue Value = "false"/>
					<EnumerationValue Value = "yes"/>
					<EnumerationValue Value = "no"/>
				</Enumeration>
			</AttDef>
			<AttDef Name = "maxFileSize"/>
			<AttDef Name = "memFileSize"/>
			<AttDef Name = "multipartClass" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "nocache" Type = "Enumeration">
				<Enumeration>
					<EnumerationValue Value = "true"/>
					<EnumerationValue Value = "false"/>
					<EnumerationValue Value = "yes"/>
					<EnumerationValue Value = "no"/>
				</Enumeration>
			</AttDef>
			<AttDef Name = "pagePattern"/>
			<AttDef Name = "processorClass" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "tempDir"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "bufferSize" Type = "#UNKNOWN: %Integer;"/>
		<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "contentType"/>
		<AttDef Name = "debug" Type = "#UNKNOWN: %Integer;"/>
		<AttDef Name = "forwardPattern"/>
		<AttDef Name = "inputForward" Type = "Enumeration">
			<Enumeration>
				<EnumerationValue Value = "true"/>
				<EnumerationValue Value = "false"/>
				<EnumerationValue Value = "yes"/>
				<EnumerationValue Value = "no"/>
			</Enumeration>
		</AttDef>
		<AttDef Name = "locale" Type = "Enumeration">
			<Enumeration>
				<EnumerationValue Value = "true"/>
				<EnumerationValue Value = "false"/>
				<EnumerationValue Value = "yes"/>
				<EnumerationValue Value = "no"/>
			</Enumeration>
		</AttDef>
		<AttDef Name = "maxFileSize"/>
		<AttDef Name = "memFileSize"/>
		<AttDef Name = "multipartClass" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "nocache" Type = "Enumeration">
			<Enumeration>
				<EnumerationValue Value = "true"/>
				<EnumerationValue Value = "false"/>
				<EnumerationValue Value = "yes"/>
				<EnumerationValue Value = "no"/>
			</Enumeration>
		</AttDef>
		<AttDef Name = "pagePattern"/>
		<AttDef Name = "processorClass" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "tempDir"/>
	</ElementDecl>
	<ElementDecl Name = "message-resources">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;message-resources&quot; element describes a MessageResources object with     message templates for this module. The following attributes are defined:     className       The configuration bean for this message resources object.                     If specified, the object must be a subclass of the default                     configuration bean.                     [&quot;org.apache.struts.config.MessageResourcesConfig&quot;]     factory         Fully qualified Java class name of the                     MessageResourcesFactory subclass to use for this message                     resources object.                     [&quot;org.apache.struts.util.PropertyMessageResourcesFactory&quot;]     key             Servlet context attribute under which this message                     resources bundle will be stored. The default attribute is                     the value specified by the string constant at                     [Globals.MESSAGES_KEY]. The application module prefix (if                     any) is appended to the key (${key}${prefix}).                     [org.apache.struts.Globals.MESSAGES_KEY]                     NOTE: The application module  prefix includes the leading                     slash, so the default message resource bundle for a module                     named &quot;foo&quot; is stored under                     &quot;org.apache.struts.action.MESSAGE/foo&quot;.     null            Set to &quot;true&quot; if you want our message resources to return a                     null string for unknown message keys, or &quot;false&quot; to return a                     message with the bad key value.     parameter       Configuration parameter to be passed to the createResources                     method of our factory object.--&gt;<BR>&lt;!ELEMENT message-resources (set-property*)&gt;<BR>&lt;!ATTLIST message-resources  id        ID               #IMPLIED                               className %ClassName;      #IMPLIED                               factory   %ClassName;      #IMPLIED                               key       %AttributeName;  #IMPLIED                               null        %Boolean;       #IMPLIED                               parameter CDATA            #REQUIRED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "message-resources" element describes a MessageResources object with
     message templates for this module. The following attributes are defined:

     className       The configuration bean for this message resources object.
                     If specified, the object must be a subclass of the default
                     configuration bean.
                     ["org.apache.struts.config.MessageResourcesConfig"]

     factory         Fully qualified Java class name of the
                     MessageResourcesFactory subclass to use for this message
                     resources object.
                     ["org.apache.struts.util.PropertyMessageResourcesFactory"]

     key             Servlet context attribute under which this message
                     resources bundle will be stored. The default attribute is
                     the value specified by the string constant at
                     [Globals.MESSAGES_KEY]. The application module prefix (if
                     any) is appended to the key (${key}${prefix}).
                     [org.apache.struts.Globals.MESSAGES_KEY]

                     NOTE: The application module  prefix includes the leading
                     slash, so the default message resource bundle for a module
                     named "foo" is stored under
                     "org.apache.struts.action.MESSAGE/foo".

     null            Set to "true" if you want our message resources to return a
                     null string for unknown message keys, or "false" to return a
                     message with the bad key value.

     parameter       Configuration parameter to be passed to the createResources
                     method of our factory object.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "set-property" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
			<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "factory" Type = "#UNKNOWN: %ClassName;"/>
			<AttDef Name = "key" Type = "#UNKNOWN: %AttributeName;"/>
			<AttDef Name = "null" Type = "Enumeration">
				<Enumeration>
					<EnumerationValue Value = "true"/>
					<EnumerationValue Value = "false"/>
					<EnumerationValue Value = "yes"/>
					<EnumerationValue Value = "no"/>
				</Enumeration>
			</AttDef>
			<AttDef Name = "parameter" Required = "Yes"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "factory" Type = "#UNKNOWN: %ClassName;"/>
		<AttDef Name = "key" Type = "#UNKNOWN: %AttributeName;"/>
		<AttDef Name = "null" Type = "Enumeration">
			<Enumeration>
				<EnumerationValue Value = "true"/>
				<EnumerationValue Value = "false"/>
				<EnumerationValue Value = "yes"/>
				<EnumerationValue Value = "no"/>
			</Enumeration>
		</AttDef>
		<AttDef Name = "parameter" Required = "Yes"/>
	</ElementDecl>
	<ElementDecl Name = "plug-in">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;plug-in&quot; element specifies the fully qualified class name of a     general-purpose application plug-in module that receives notification of     application startup and shutdown events. An instance of the specified class     is created for each element, and can be configured with nested <BR>&lt;set-property&gt;     elements. The following attributes are supported:     className       Fully qualified Java class name of the plug-in class; must                     implement [org.apache.struts.action.PlugIn].--&gt;<BR>&lt;!ELEMENT plug-in (set-property*)&gt;<BR>&lt;!ATTLIST plug-in  id        ID           #IMPLIED                     className %ClassName;  #REQUIRED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "plug-in" element specifies the fully qualified class name of a
     general-purpose application plug-in module that receives notification of
     application startup and shutdown events. An instance of the specified class
     is created for each element, and can be configured with nested &amp;lt;set-property&amp;gt;
     elements. The following attributes are supported:

     className       Fully qualified Java class name of the plug-in class; must
                     implement [org.apache.struts.action.PlugIn].

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "set-property" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
			<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;" Required = "Yes"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "className" Type = "#UNKNOWN: %ClassName;" Required = "Yes"/>
	</ElementDecl>
	<ElementDecl Name = "description">
		<dtdsource><![CDATA[
<BR>&lt;!-- ========== Subordinate Elements ====================================== --&gt;<BR>&lt;!-- The &quot;description&quot; element contains descriptive (paragraph length) text     about the surrounding element, suitable for use in GUI tools.--&gt;<BR>&lt;!ELEMENT description (#PCDATA)&gt;<BR>&lt;!ATTLIST description  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> ========== Subordinate Elements ======================================  The "description" element contains descriptive (paragraph length) text
     about the surrounding element, suitable for use in GUI tools.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
	</ElementDecl>
	<ElementDecl Name = "display-name">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;display-name&quot; element contains a short (one line) description of     the surrounding element, suitable for use in GUI tools.--&gt;<BR>&lt;!ELEMENT display-name (#PCDATA)&gt;<BR>&lt;!ATTLIST display-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "display-name" element contains a short (one line) description of
     the surrounding element, suitable for use in GUI tools.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
	</ElementDecl>
	<ElementDecl Name = "icon">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;icon&quot; element contains a small-icon and large-icon element which     specify the location, relative to the Struts configuration file, for small     and large images used to represent the surrounding element in GUI tools.--&gt;<BR>&lt;!ELEMENT icon (small-icon? , large-icon?)&gt;<BR>&lt;!ATTLIST icon  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "icon" element contains a small-icon and large-icon element which
     specify the location, relative to the Struts configuration file, for small
     and large images used to represent the surrounding element in GUI tools.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "small-icon" Frequency = "Optional"/>
				<Ref Element = "large-icon" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
	</ElementDecl>
	<ElementDecl Name = "large-icon">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;large-icon&quot; element specifies the location, relative to the Struts     configuration file, of a resource containing a large (32x32 pixel)     icon image.--&gt;<BR>&lt;!ELEMENT large-icon (%Location;)&gt;<BR>&lt;!ATTLIST large-icon  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "large-icon" element specifies the location, relative to the Struts
     configuration file, of a resource containing a large (32x32 pixel)
     icon image.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
	</ElementDecl>
	<ElementDecl Name = "set-property">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;set-property&quot; element specifies the method name and initial value of     an additional JavaBean configuration property. When the object representing     the surrounding element is instantiated, the accessor for the indicated     property is called and passed the indicated value. The &quot;set-property&quot;     element is especially useful when a custom subclass is used with     <BR>&lt;data-source&gt;, <BR>&lt;forward&gt;, <BR>&lt;action&gt;, or <BR>&lt;plug-in&gt; elements. The subclass     can be passed whatever other properties may be required to configure the     object without changing how the struts-config is parsed.     property        Name of the JavaBeans property whose setter method                     will be called.     value           String representation of the value to which this                     property will be set, after suitable type conversion--&gt;<BR>&lt;!ELEMENT set-property EMPTY&gt;<BR>&lt;!ATTLIST set-property  id       ID          #IMPLIED                          property %PropName;  #REQUIRED                          value    CDATA       #REQUIRED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "set-property" element specifies the method name and initial value of
     an additional JavaBean configuration property. When the object representing
     the surrounding element is instantiated, the accessor for the indicated
     property is called and passed the indicated value. The "set-property"
     element is especially useful when a custom subclass is used with
     &amp;lt;data-source&amp;gt;, &amp;lt;forward&amp;gt;, &amp;lt;action&amp;gt;, or &amp;lt;plug-in&amp;gt; elements. The subclass
     can be passed whatever other properties may be required to configure the
     object without changing how the struts-config is parsed.

     property        Name of the JavaBeans property whose setter method
                     will be called.

     value           String representation of the value to which this
                     property will be set, after suitable type conversion

		</DDML:Doc>
		<Model>
			<Empty/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
			<AttDef Name = "property" Type = "#UNKNOWN: %PropName;" Required = "Yes"/>
			<AttDef Name = "value" Required = "Yes"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "property" Type = "#UNKNOWN: %PropName;" Required = "Yes"/>
		<AttDef Name = "value" Required = "Yes"/>
	</ElementDecl>
	<ElementDecl Name = "small-icon">
		<dtdsource><![CDATA[
<BR>&lt;!-- The &quot;small-icon&quot; element specifies the location, relative to the Struts     configuration file, of a resource containing a small (16x16 pixel)     icon image.--&gt;<BR>&lt;!ELEMENT small-icon (%Location;)&gt;<BR>&lt;!ATTLIST small-icon  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> The "small-icon" element specifies the location, relative to the Struts
     configuration file, of a resource containing a small (16x16 pixel)
     icon image.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID"/>
	</ElementDecl>
</DocumentDef>