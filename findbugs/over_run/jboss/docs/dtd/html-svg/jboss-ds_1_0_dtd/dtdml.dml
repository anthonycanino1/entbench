<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by XML Authority. DDML version 1.0-->
<DocumentDef name = "jboss-ds_1_0.dtd"
	 xmlns = "http://www.purl.org/NET/ddml/v1"
	 xmlns:DDML = "http://www.purl.org/NET/ddml/v1" Version = "1.0">
	<dtdsource><![CDATA[
<BR>&lt;?xml encoding='UTF-8' ?&gt;<BR><BR>&lt;!--dtd for jboss 3.2 datasource configurations (*-ds.xml), transformed byConnectionFactoryTemplate.xsl$Id: jboss-ds_1_0.dtd,v 1.1.2.15 2003/09/28 11:06:47 starksm Exp $The datasources element is the root of the jdbc datasource configuration--&gt;<BR>&lt;!ELEMENT datasources (mbean | local-tx-datasource | xa-datasource | no-tx-datasource)*&gt;<BR>&lt;!-- Specify a jca-jdbc non-XADatasource (local) wrapper, using no transactions--&gt;<BR>&lt;!ELEMENT no-tx-datasource (jndi-name , connection-url , driver-class , connection-property* , user-name? , password? , (application-managed-security | security-domain | security-domain-and-application)? , min-pool-size? , max-pool-size? , blocking-timeout-millis? , idle-timeout-minutes? , depends*)&gt;<BR>&lt;!-- Specify a jca-jdbc non-XADatasource (local) wrapper, using localtransactions--&gt;<BR>&lt;!ELEMENT local-tx-datasource (jndi-name , connection-url , driver-class , transaction-isolation? , connection-property* , user-name? , password? , (application-managed-security | security-domain | security-domain-and-application)? , min-pool-size? , max-pool-size? , blocking-timeout-millis? , idle-timeout-minutes? , no-tx-separate-pools? , new-connection-sql? , check-valid-connection-sql? , valid-connection-checker-class-name? , exception-sorter-class-name? , track-statements? , prepared-statement-cache-size? , depends*)&gt;<BR>&lt;!-- Specify a jca-jdbc XADatasource wrapper--&gt;<BR>&lt;!ELEMENT xa-datasource (jndi-name , track-connection-by-tx , xa-datasource-class , xa-datasource-property* , isSameRM-override-value? , transaction-isolation? , user-name? , password? , (application-managed-security | security-domain | security-domain-and-application)? , min-pool-size? , max-pool-size? , blocking-timeout-millis? , idle-timeout-minutes? , no-tx-separate-pools? , new-connection-sql? , check-valid-connection-sql? , valid-connection-checker-class-name? , exception-sorter-class-name? , track-statements? , prepared-statement-cache-size? , depends*)&gt;<BR>&lt;!-- The JNDI name under which the DataSource wrapper will be bound. Note thatthis name is relative to the &quot;java:/&quot; prefix. The full JNDI name of theDataSource will be &quot;java:/&quot; + jndi-name. DataSource wrappers are bound underthe &quot;java:/&quot; prefix since they are not usable outside of the server VM.Ex:<BR>&lt;jndi-name&gt;DefaultDS<BR>&lt;/jndi-name&gt;--&gt;<BR>&lt;!ELEMENT jndi-name (#PCDATA)&gt;<BR>&lt;!-- The JDBC driver connection URL stringEx:<BR>&lt;connection-url&gt;jdbc:hsqldb:hsql://localhost:1701<BR>&lt;/connection-url&gt;--&gt;<BR>&lt;!ELEMENT connection-url (#PCDATA)&gt;<BR>&lt;!-- The fully qualifed name of the JDBC driver class   Ex:   <BR>&lt;driver-class&gt;org.hsqldb.jdbcDriver<BR>&lt;/driver-class&gt;--&gt;<BR>&lt;!ELEMENT driver-class (#PCDATA)&gt;<BR>&lt;!-- Set java.sql.Connection transaction isolation level to use.The constants defined in the interface Connection are the possible transactionisolation levels and include:   TRANSACTION_READ_UNCOMMITTED   TRANSACTION_READ_COMMITTED   TRANSACTION_REPEATABLE_READ   TRANSACTION_SERIALIZABLE   TRANSACTION_NONE   Ex:   <BR>&lt;transaction-isolation&gt;TRANSACTION_SERIALIZABLE<BR>&lt;/transaction-isoation&gt;--&gt;<BR>&lt;!ELEMENT transaction-isolation (#PCDATA)&gt;<BR>&lt;!-- Specify the default username used when creating a new connection.   Ex:   <BR>&lt;user-name&gt;sa<BR>&lt;/user-name&gt;--&gt;<BR>&lt;!ELEMENT user-name (#PCDATA)&gt;<BR>&lt;!-- Specify the default password used when creating a new connection.   Ex:   <BR>&lt;password&gt;sa-pass<BR>&lt;/password&gt;--&gt;<BR>&lt;!ELEMENT password (#PCDATA)&gt;<BR>&lt;!-- Indicates that app supplied parameters (such as from getConnection(user, pw))are used to distinguish connections in the pool.   Ex:   <BR>&lt;application-managed-security/&gt;--&gt;<BR>&lt;!ELEMENT application-managed-security EMPTY&gt;<BR>&lt;!-- Indicates Subject (from security domain) are used to distinguish connections in the pool. The content of the security-domain is the name of the JAAS security manager that will handleauthentication. This name correlates to the JAAS login-config.xml descriptorapplication-policy/name attribute.   Ex:   <BR>&lt;security-domain&gt;HsqlDbRealm<BR>&lt;/security-domain&gt;--&gt;<BR>&lt;!ELEMENT security-domain (#PCDATA)&gt;<BR>&lt;!-- Indicates that either app supplied parameters (such as fromgetConnection(user, pw)) or Subject (from security domain) are used todistinguish connections in the pool. The content of thesecurity-domain is the name of the JAAS security manager that will handleauthentication. This name correlates to the JAAS login-config.xml descriptorapplication-policy/name attribute.   Ex:   <BR>&lt;security-domain-and-application&gt;HsqlDbRealm<BR>&lt;/security-domain-and-application&gt;--&gt;<BR>&lt;!ELEMENT security-domain-and-application (#PCDATA)&gt;<BR>&lt;!-- Whether to use separete pools for connection retrieved in a transaction     and those retieved outside a transaction--&gt;<BR>&lt;!ELEMENT no-tx-separate-pools (#PCDATA)&gt;<BR>&lt;!-- The min-pool-size element indicates the minimum number of connections apool should hold. These are not created until a Subject is known from arequest for a connection. This default to 0.   Ex:   <BR>&lt;min-pool-size&gt;1<BR>&lt;/min-pool-size&gt;--&gt;<BR>&lt;!ELEMENT min-pool-size (#PCDATA)&gt;<BR>&lt;!-- The max-pool-size element indicates the maximum number of connections for apool. No more than MaxSize connections will be created in each sub-pool. Thisdefaults to 20.--&gt;<BR>&lt;!ELEMENT max-pool-size (#PCDATA)&gt;<BR>&lt;!-- The blocking-timeout-millis element indicates the maximum time inmilliseconds to block while waiting for a connection before throwing anexception. Note that this blocks only while waiting for a permit for aconnection, and will never throw an exception if creating a new connectiontakes an inordinately long time. The default is 5000.--&gt;<BR>&lt;!ELEMENT blocking-timeout-millis (#PCDATA)&gt;<BR>&lt;!-- The idle-timeout-minutes elements indicates the maximum time inminutes a connection may be idle before being closed.  The actual maximum timedepends also on the IdleRemover scan time, which is 1/2 the smallestidle-timeout-minutes of any pool.--&gt;<BR>&lt;!ELEMENT idle-timeout-minutes (#PCDATA)&gt;<BR>&lt;!-- A boolean to specify that all intermediate end(suspend) andstart(resume) calls.  Also, all work on one tx will go through oneconnection.A side effect of this (currently at least) is that a connection will onlybe usable by one tx until the tx commits.   Ex:   <BR>&lt;track-connection-by-tx&gt;true<BR>&lt;/track-connection-by-tx&gt;--&gt;<BR>&lt;!ELEMENT track-connection-by-tx (#PCDATA)&gt;<BR>&lt;!-- The fully qualifed name of the javax.sql.XADataSource implementation class.   Ex:   <BR>&lt;xa-datasource-class&gt;com.informix.jdbcx.IfxXADataSource<BR>&lt;/xa-datasource-class&gt;--&gt;<BR>&lt;!ELEMENT xa-datasource-class (#PCDATA)&gt;<BR>&lt;!-- Specify a property to assign to the XADataSource implementation class.Each property is identified by the name attribute and the property value isgiven by the xa-datasource-property element content. The property is mappedonto the XADataSource implementation by looking for a JavaBeans stylegetter method for the property name. If found, the value of the property isset using the JavaBeans setter with the element text translated to the trueproperty type using the java.beans.PropertyEditor for the type.   Ex:    <BR>&lt;xa-datasource-property name=&quot;IfxWAITTIME&quot;&gt;10<BR>&lt;/xa-datasource-property&gt;    <BR>&lt;xa-datasource-property name=&quot;IfxIFXHOST&quot;&gt;myhost.mydomain.com<BR>&lt;/xa-datasource-property&gt;    <BR>&lt;xa-datasource-property name=&quot;PortNumber&quot;&gt;1557<BR>&lt;/xa-datasource-property&gt;    <BR>&lt;xa-datasource-property name=&quot;DatabaseName&quot;&gt;mydb<BR>&lt;/xa-datasource-property&gt;    <BR>&lt;xa-datasource-property name=&quot;ServerName&quot;&gt;myserver<BR>&lt;/xa-datasource-property&gt;--&gt;<BR>&lt;!ELEMENT xa-datasource-property (#PCDATA)&gt;<BR>&lt;!-- The xa-datasource-property name attribute specifies the name of theXADataSource attribute the xa-datasource-property element content providesthe value of.--&gt;<BR>&lt;!ATTLIST xa-datasource-property name CDATA  #REQUIRED&gt;<BR>&lt;!-- The isSameRM-override-value element allows one to unconditionally setwhether the javax.transaction.xa.XAResource.isSameRM(XAResource) returnstrue or false.Ex:<BR>&lt;isSameRM-override-value&gt;true<BR>&lt;/isSameRM-override-value&gt;--&gt;<BR>&lt;!ELEMENT isSameRM-override-value (#PCDATA)&gt;<BR>&lt;!-- The connection-property element allows you to pass in arbitrary connectionproperties to the Driver.connect(url, props) method. Each connection-propertyspecifies a string name/value pair with the property name coming from thename attribute and the value coming from the element content.   Ex:   <BR>&lt;connection-property name=&quot;char.encoding&quot;&gt;UTF-8<BR>&lt;/connection-property&gt;<BR>&lt;--&gt;<BR>&lt;!ELEMENT connection-property (#PCDATA)&gt;<BR>&lt;!-- The connection-property name attribute gives the name of the connectionproperty.--&gt;<BR>&lt;!ATTLIST connection-property name CDATA  #REQUIRED&gt;<BR>&lt;!-- Specify an SQL statement to execute whenever a connection is added tothe connection pool.--&gt;<BR>&lt;!ELEMENT new-connection-sql (#PCDATA)&gt;<BR>&lt;!-- Specify an SQL statement to check validity of a pool connection. Thismay be called when managed connection is taken from pool for use.--&gt;<BR>&lt;!ELEMENT check-valid-connection-sql (#PCDATA)&gt;<BR>&lt;!-- An org.jboss.resource.adapter.jdbc.ValidConnectionChecker that providesa SQLException isValidConnection(Connection e) method to validate is a connectionis valid. An exception means the connection is destroyed.This overrides the check-valid-connection-sql when present.Ex:<BR>&lt;exception-sorter-class-name&gt;   org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker<BR>&lt;/exception-sorter-class-name&gt;--&gt;<BR>&lt;!ELEMENT valid-connection-checker-class-name (#PCDATA)&gt;<BR>&lt;!-- An org.jboss.resource.adapter.jdbc.ExceptionSorter that providesa boolean isExceptionFatal(SQLException e) method to validate is an exceptionshould be broadcast to all javax.resource.spi.ConnectionEventListener asa connectionErrorOccurred message.Ex:<BR>&lt;exception-sorter-class-name&gt;   org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter<BR>&lt;/exception-sorter-class-name&gt;<BR>&lt;exception-sorter-class-name&gt;   org.jboss.resource.adapter.jdbc.vendor.SybaseExceptionSorter<BR>&lt;/exception-sorter-class-name&gt;--&gt;<BR>&lt;!ELEMENT exception-sorter-class-name (#PCDATA)&gt;<BR>&lt;!-- Whether to check for unclosed statements when a     connection is returned to the pool--&gt;<BR>&lt;!ELEMENT track-statements (#PCDATA)&gt;<BR>&lt;!-- The number of prepared statements per connection in an LRU cache--&gt;<BR>&lt;!ELEMENT prepared-statement-cache-size (#PCDATA)&gt;<BR>&lt;!-- The depends element specifies the JMX ObjectName string of a servicethat the connection manager services depend on.   Ex:   <BR>&lt;depends&gt;jboss:service=Hypersonic<BR>&lt;/depends&gt;--&gt;<BR>&lt;!ELEMENT depends (#PCDATA)&gt;<BR>&lt;!-- The connection-factories element is the root of the generic jca adaptor section--&gt;<BR>&lt;!ELEMENT connection-factories (mbean | tx-connection-factory | no-tx-connection-factory)*&gt;<BR>&lt;!ELEMENT mbean ANY&gt;<BR>&lt;!-- The tx-connection-factory element is used to configure generic resourceadapters supporting transactions--&gt;<BR>&lt;!ELEMENT tx-connection-factory (jndi-name , (local-transaction | xa-transaction) , track-connection-by-tx? , adapter-display-name? , config-property* , (application-managed-security | security-domain | security-domain-and-application)? , min-pool-size? , max-pool-size? , blocking-timeout-millis? , idle-timeout-minutes? , no-tx-separate-pools? , depends*)&gt;<BR>&lt;!-- The no-tx-connection-factory element is used to configure generic resourceadapters that do not support transactions--&gt;<BR>&lt;!ELEMENT no-tx-connection-factory (jndi-name , adapter-display-name? , config-property* , (application-managed-security | security-domain | security-domain-and-application)? , min-pool-size? , max-pool-size? , blocking-timeout-millis? , idle-timeout-minutes? , depends*)&gt;<BR>&lt;!-- The display name to associate with the connection manager mbean.--&gt;<BR>&lt;!ELEMENT adapter-display-name (#PCDATA)&gt;<BR>&lt;!-- The xa-transaction element is used to mark that the tx-connection-factorysupports XA transactions.--&gt;<BR>&lt;!ELEMENT xa-transaction EMPTY&gt;<BR>&lt;!-- The local-transaction element is used to mark that the tx-connection-factorysupports local transactions.--&gt;<BR>&lt;!ELEMENT local-transaction EMPTY&gt;<BR>&lt;!-- The config-property specifies a mannaged connection factory property.--&gt;<BR>&lt;!ELEMENT config-property (#PCDATA)&gt;<BR>&lt;!-- The config-property name attribute gives the name of the connectionfactory property.--&gt;<BR>&lt;!ATTLIST config-property name CDATA  #REQUIRED&gt;<BR>&lt;!-- The config-property type attribute gives the name of the connectionfactory property.--&gt;<BR>&lt;!ATTLIST config-property type CDATA  #REQUIRED&gt;]]>

	</dtdsource>
	<ElementDecl Name = "datasources">
		<dtdsource><![CDATA[
<BR>&lt;!ELEMENT datasources (mbean | local-tx-datasource | xa-datasource | no-tx-datasource)*&gt;]]>

		</dtdsource>
		<Model>
			<Choice Frequency = "ZeroOrMore">
				<Ref Element = "mbean"/>
				<Ref Element = "local-tx-datasource"/>
				<Ref Element = "xa-datasource"/>
				<Ref Element = "no-tx-datasource"/>
			</Choice>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "no-tx-datasource">
		<dtdsource><![CDATA[
<BR>&lt;!-- Specify a jca-jdbc non-XADatasource (local) wrapper, using no transactions--&gt;<BR>&lt;!ELEMENT no-tx-datasource (jndi-name , connection-url , driver-class , connection-property* , user-name? , password? , (application-managed-security | security-domain | security-domain-and-application)? , min-pool-size? , max-pool-size? , blocking-timeout-millis? , idle-timeout-minutes? , depends*)&gt;]]>

		</dtdsource>
		<DDML:Doc> Specify a jca-jdbc non-XADatasource (local) wrapper, using no transactions

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "jndi-name"/>
				<Ref Element = "connection-url"/>
				<Ref Element = "driver-class"/>
				<Ref Element = "connection-property" Frequency = "ZeroOrMore"/>
				<Ref Element = "user-name" Frequency = "Optional"/>
				<Ref Element = "password" Frequency = "Optional"/>
				<Choice Frequency = "Optional">
					<Ref Element = "application-managed-security"/>
					<Ref Element = "security-domain"/>
					<Ref Element = "security-domain-and-application"/>
				</Choice>
				<Ref Element = "min-pool-size" Frequency = "Optional"/>
				<Ref Element = "max-pool-size" Frequency = "Optional"/>
				<Ref Element = "blocking-timeout-millis" Frequency = "Optional"/>
				<Ref Element = "idle-timeout-minutes" Frequency = "Optional"/>
				<Ref Element = "depends" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "local-tx-datasource">
		<dtdsource><![CDATA[
<BR>&lt;!-- Specify a jca-jdbc non-XADatasource (local) wrapper, using localtransactions--&gt;<BR>&lt;!ELEMENT local-tx-datasource (jndi-name , connection-url , driver-class , transaction-isolation? , connection-property* , user-name? , password? , (application-managed-security | security-domain | security-domain-and-application)? , min-pool-size? , max-pool-size? , blocking-timeout-millis? , idle-timeout-minutes? , no-tx-separate-pools? , new-connection-sql? , check-valid-connection-sql? , valid-connection-checker-class-name? , exception-sorter-class-name? , track-statements? , prepared-statement-cache-size? , depends*)&gt;]]>

		</dtdsource>
		<DDML:Doc> Specify a jca-jdbc non-XADatasource (local) wrapper, using local
transactions

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "jndi-name"/>
				<Ref Element = "connection-url"/>
				<Ref Element = "driver-class"/>
				<Ref Element = "transaction-isolation" Frequency = "Optional"/>
				<Ref Element = "connection-property" Frequency = "ZeroOrMore"/>
				<Ref Element = "user-name" Frequency = "Optional"/>
				<Ref Element = "password" Frequency = "Optional"/>
				<Choice Frequency = "Optional">
					<Ref Element = "application-managed-security"/>
					<Ref Element = "security-domain"/>
					<Ref Element = "security-domain-and-application"/>
				</Choice>
				<Ref Element = "min-pool-size" Frequency = "Optional"/>
				<Ref Element = "max-pool-size" Frequency = "Optional"/>
				<Ref Element = "blocking-timeout-millis" Frequency = "Optional"/>
				<Ref Element = "idle-timeout-minutes" Frequency = "Optional"/>
				<Ref Element = "no-tx-separate-pools" Frequency = "Optional"/>
				<Ref Element = "new-connection-sql" Frequency = "Optional"/>
				<Ref Element = "check-valid-connection-sql" Frequency = "Optional"/>
				<Ref Element = "valid-connection-checker-class-name" Frequency = "Optional"/>
				<Ref Element = "exception-sorter-class-name" Frequency = "Optional"/>
				<Ref Element = "track-statements" Frequency = "Optional"/>
				<Ref Element = "prepared-statement-cache-size" Frequency = "Optional"/>
				<Ref Element = "depends" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "xa-datasource">
		<dtdsource><![CDATA[
<BR>&lt;!-- Specify a jca-jdbc XADatasource wrapper--&gt;<BR>&lt;!ELEMENT xa-datasource (jndi-name , track-connection-by-tx , xa-datasource-class , xa-datasource-property* , isSameRM-override-value? , transaction-isolation? , user-name? , password? , (application-managed-security | security-domain | security-domain-and-application)? , min-pool-size? , max-pool-size? , blocking-timeout-millis? , idle-timeout-minutes? , no-tx-separate-pools? , new-connection-sql? , check-valid-connection-sql? , valid-connection-checker-class-name? , exception-sorter-class-name? , track-statements? , prepared-statement-cache-size? , depends*)&gt;]]>

		</dtdsource>
		<DDML:Doc> Specify a jca-jdbc XADatasource wrapper

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "jndi-name"/>
				<Ref Element = "track-connection-by-tx"/>
				<Ref Element = "xa-datasource-class"/>
				<Ref Element = "xa-datasource-property" Frequency = "ZeroOrMore"/>
				<Ref Element = "isSameRM-override-value" Frequency = "Optional"/>
				<Ref Element = "transaction-isolation" Frequency = "Optional"/>
				<Ref Element = "user-name" Frequency = "Optional"/>
				<Ref Element = "password" Frequency = "Optional"/>
				<Choice Frequency = "Optional">
					<Ref Element = "application-managed-security"/>
					<Ref Element = "security-domain"/>
					<Ref Element = "security-domain-and-application"/>
				</Choice>
				<Ref Element = "min-pool-size" Frequency = "Optional"/>
				<Ref Element = "max-pool-size" Frequency = "Optional"/>
				<Ref Element = "blocking-timeout-millis" Frequency = "Optional"/>
				<Ref Element = "idle-timeout-minutes" Frequency = "Optional"/>
				<Ref Element = "no-tx-separate-pools" Frequency = "Optional"/>
				<Ref Element = "new-connection-sql" Frequency = "Optional"/>
				<Ref Element = "check-valid-connection-sql" Frequency = "Optional"/>
				<Ref Element = "valid-connection-checker-class-name" Frequency = "Optional"/>
				<Ref Element = "exception-sorter-class-name" Frequency = "Optional"/>
				<Ref Element = "track-statements" Frequency = "Optional"/>
				<Ref Element = "prepared-statement-cache-size" Frequency = "Optional"/>
				<Ref Element = "depends" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "jndi-name">
		<dtdsource><![CDATA[
<BR>&lt;!-- The JNDI name under which the DataSource wrapper will be bound. Note thatthis name is relative to the &quot;java:/&quot; prefix. The full JNDI name of theDataSource will be &quot;java:/&quot; + jndi-name. DataSource wrappers are bound underthe &quot;java:/&quot; prefix since they are not usable outside of the server VM.Ex:<BR>&lt;jndi-name&gt;DefaultDS<BR>&lt;/jndi-name&gt;--&gt;<BR>&lt;!ELEMENT jndi-name (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The JNDI name under which the DataSource wrapper will be bound. Note that
this name is relative to the "java:/" prefix. The full JNDI name of the
DataSource will be "java:/" + jndi-name. DataSource wrappers are bound under
the "java:/" prefix since they are not usable outside of the server VM.
Ex:
&amp;lt;jndi-name&amp;gt;DefaultDS&amp;lt;/jndi-name&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "connection-url">
		<dtdsource><![CDATA[
<BR>&lt;!-- The JDBC driver connection URL stringEx:<BR>&lt;connection-url&gt;jdbc:hsqldb:hsql://localhost:1701<BR>&lt;/connection-url&gt;--&gt;<BR>&lt;!ELEMENT connection-url (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The JDBC driver connection URL string
Ex:
&amp;lt;connection-url&amp;gt;jdbc:hsqldb:hsql://localhost:1701&amp;lt;/connection-url&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "driver-class">
		<dtdsource><![CDATA[
<BR>&lt;!-- The fully qualifed name of the JDBC driver class   Ex:   <BR>&lt;driver-class&gt;org.hsqldb.jdbcDriver<BR>&lt;/driver-class&gt;--&gt;<BR>&lt;!ELEMENT driver-class (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The fully qualifed name of the JDBC driver class
   Ex:
   &amp;lt;driver-class&amp;gt;org.hsqldb.jdbcDriver&amp;lt;/driver-class&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "transaction-isolation">
		<dtdsource><![CDATA[
<BR>&lt;!-- Set java.sql.Connection transaction isolation level to use.The constants defined in the interface Connection are the possible transactionisolation levels and include:   TRANSACTION_READ_UNCOMMITTED   TRANSACTION_READ_COMMITTED   TRANSACTION_REPEATABLE_READ   TRANSACTION_SERIALIZABLE   TRANSACTION_NONE   Ex:   <BR>&lt;transaction-isolation&gt;TRANSACTION_SERIALIZABLE<BR>&lt;/transaction-isoation&gt;--&gt;<BR>&lt;!ELEMENT transaction-isolation (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> Set java.sql.Connection transaction isolation level to use.
The constants defined in the interface Connection are the possible transaction
isolation levels and include:
   TRANSACTION_READ_UNCOMMITTED
   TRANSACTION_READ_COMMITTED
   TRANSACTION_REPEATABLE_READ
   TRANSACTION_SERIALIZABLE
   TRANSACTION_NONE

   Ex:
   &amp;lt;transaction-isolation&amp;gt;TRANSACTION_SERIALIZABLE&amp;lt;/transaction-isoation&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "user-name">
		<dtdsource><![CDATA[
<BR>&lt;!-- Specify the default username used when creating a new connection.   Ex:   <BR>&lt;user-name&gt;sa<BR>&lt;/user-name&gt;--&gt;<BR>&lt;!ELEMENT user-name (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> Specify the default username used when creating a new connection.
   Ex:
   &amp;lt;user-name&amp;gt;sa&amp;lt;/user-name&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "password">
		<dtdsource><![CDATA[
<BR>&lt;!-- Specify the default password used when creating a new connection.   Ex:   <BR>&lt;password&gt;sa-pass<BR>&lt;/password&gt;--&gt;<BR>&lt;!ELEMENT password (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> Specify the default password used when creating a new connection.
   Ex:
   &amp;lt;password&amp;gt;sa-pass&amp;lt;/password&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "application-managed-security">
		<dtdsource><![CDATA[
<BR>&lt;!-- Indicates that app supplied parameters (such as from getConnection(user, pw))are used to distinguish connections in the pool.   Ex:   <BR>&lt;application-managed-security/&gt;--&gt;<BR>&lt;!ELEMENT application-managed-security EMPTY&gt;]]>

		</dtdsource>
		<DDML:Doc> Indicates that app supplied parameters (such as from getConnection(user, pw))
are used to distinguish connections in the pool.
   Ex:
   &amp;lt;application-managed-security/&amp;gt;

		</DDML:Doc>
		<Model>
			<Empty/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "security-domain">
		<dtdsource><![CDATA[
<BR>&lt;!-- Indicates Subject (from security domain) are used to distinguish connections in the pool. The content of the security-domain is the name of the JAAS security manager that will handleauthentication. This name correlates to the JAAS login-config.xml descriptorapplication-policy/name attribute.   Ex:   <BR>&lt;security-domain&gt;HsqlDbRealm<BR>&lt;/security-domain&gt;--&gt;<BR>&lt;!ELEMENT security-domain (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> Indicates Subject (from security domain) are used to distinguish connections in the pool. 
The content of the security-domain is the name of the JAAS security manager that will handle
authentication. This name correlates to the JAAS login-config.xml descriptor
application-policy/name attribute.

   Ex:
   &amp;lt;security-domain&amp;gt;HsqlDbRealm&amp;lt;/security-domain&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "security-domain-and-application">
		<dtdsource><![CDATA[
<BR>&lt;!-- Indicates that either app supplied parameters (such as fromgetConnection(user, pw)) or Subject (from security domain) are used todistinguish connections in the pool. The content of thesecurity-domain is the name of the JAAS security manager that will handleauthentication. This name correlates to the JAAS login-config.xml descriptorapplication-policy/name attribute.   Ex:   <BR>&lt;security-domain-and-application&gt;HsqlDbRealm<BR>&lt;/security-domain-and-application&gt;--&gt;<BR>&lt;!ELEMENT security-domain-and-application (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> Indicates that either app supplied parameters (such as from
getConnection(user, pw)) or Subject (from security domain) are used to
distinguish connections in the pool. The content of the
security-domain is the name of the JAAS security manager that will handle
authentication. This name correlates to the JAAS login-config.xml descriptor
application-policy/name attribute.

   Ex:
   &amp;lt;security-domain-and-application&amp;gt;HsqlDbRealm&amp;lt;/security-domain-and-application&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "no-tx-separate-pools">
		<dtdsource><![CDATA[
<BR>&lt;!-- Whether to use separete pools for connection retrieved in a transaction     and those retieved outside a transaction--&gt;<BR>&lt;!ELEMENT no-tx-separate-pools (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> Whether to use separete pools for connection retrieved in a transaction
     and those retieved outside a transaction

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "min-pool-size">
		<dtdsource><![CDATA[
<BR>&lt;!-- The min-pool-size element indicates the minimum number of connections apool should hold. These are not created until a Subject is known from arequest for a connection. This default to 0.   Ex:   <BR>&lt;min-pool-size&gt;1<BR>&lt;/min-pool-size&gt;--&gt;<BR>&lt;!ELEMENT min-pool-size (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The min-pool-size element indicates the minimum number of connections a
pool should hold. These are not created until a Subject is known from a
request for a connection. This default to 0.

   Ex:
   &amp;lt;min-pool-size&amp;gt;1&amp;lt;/min-pool-size&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "max-pool-size">
		<dtdsource><![CDATA[
<BR>&lt;!-- The max-pool-size element indicates the maximum number of connections for apool. No more than MaxSize connections will be created in each sub-pool. Thisdefaults to 20.--&gt;<BR>&lt;!ELEMENT max-pool-size (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The max-pool-size element indicates the maximum number of connections for a
pool. No more than MaxSize connections will be created in each sub-pool. This
defaults to 20.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "blocking-timeout-millis">
		<dtdsource><![CDATA[
<BR>&lt;!-- The blocking-timeout-millis element indicates the maximum time inmilliseconds to block while waiting for a connection before throwing anexception. Note that this blocks only while waiting for a permit for aconnection, and will never throw an exception if creating a new connectiontakes an inordinately long time. The default is 5000.--&gt;<BR>&lt;!ELEMENT blocking-timeout-millis (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The blocking-timeout-millis element indicates the maximum time in
milliseconds to block while waiting for a connection before throwing an
exception. Note that this blocks only while waiting for a permit for a
connection, and will never throw an exception if creating a new connection
takes an inordinately long time. The default is 5000.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "idle-timeout-minutes">
		<dtdsource><![CDATA[
<BR>&lt;!-- The idle-timeout-minutes elements indicates the maximum time inminutes a connection may be idle before being closed.  The actual maximum timedepends also on the IdleRemover scan time, which is 1/2 the smallestidle-timeout-minutes of any pool.--&gt;<BR>&lt;!ELEMENT idle-timeout-minutes (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The idle-timeout-minutes elements indicates the maximum time in
minutes a connection may be idle before being closed.  The actual maximum time
depends also on the IdleRemover scan time, which is 1/2 the smallest
idle-timeout-minutes of any pool.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "track-connection-by-tx">
		<dtdsource><![CDATA[
<BR>&lt;!-- A boolean to specify that all intermediate end(suspend) andstart(resume) calls.  Also, all work on one tx will go through oneconnection.A side effect of this (currently at least) is that a connection will onlybe usable by one tx until the tx commits.   Ex:   <BR>&lt;track-connection-by-tx&gt;true<BR>&lt;/track-connection-by-tx&gt;--&gt;<BR>&lt;!ELEMENT track-connection-by-tx (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> A boolean to specify that all intermediate end(suspend) and
start(resume) calls.  Also, all work on one tx will go through one
connection.
A side effect of this (currently at least) is that a connection will only
be usable by one tx until the tx commits.
   Ex:
   &amp;lt;track-connection-by-tx&amp;gt;true&amp;lt;/track-connection-by-tx&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "xa-datasource-class">
		<dtdsource><![CDATA[
<BR>&lt;!-- The fully qualifed name of the javax.sql.XADataSource implementation class.   Ex:   <BR>&lt;xa-datasource-class&gt;com.informix.jdbcx.IfxXADataSource<BR>&lt;/xa-datasource-class&gt;--&gt;<BR>&lt;!ELEMENT xa-datasource-class (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The fully qualifed name of the javax.sql.XADataSource implementation class.
   Ex:
   &amp;lt;xa-datasource-class&amp;gt;com.informix.jdbcx.IfxXADataSource&amp;lt;/xa-datasource-class&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "xa-datasource-property">
		<dtdsource><![CDATA[
<BR>&lt;!-- Specify a property to assign to the XADataSource implementation class.Each property is identified by the name attribute and the property value isgiven by the xa-datasource-property element content. The property is mappedonto the XADataSource implementation by looking for a JavaBeans stylegetter method for the property name. If found, the value of the property isset using the JavaBeans setter with the element text translated to the trueproperty type using the java.beans.PropertyEditor for the type.   Ex:    <BR>&lt;xa-datasource-property name=&quot;IfxWAITTIME&quot;&gt;10<BR>&lt;/xa-datasource-property&gt;    <BR>&lt;xa-datasource-property name=&quot;IfxIFXHOST&quot;&gt;myhost.mydomain.com<BR>&lt;/xa-datasource-property&gt;    <BR>&lt;xa-datasource-property name=&quot;PortNumber&quot;&gt;1557<BR>&lt;/xa-datasource-property&gt;    <BR>&lt;xa-datasource-property name=&quot;DatabaseName&quot;&gt;mydb<BR>&lt;/xa-datasource-property&gt;    <BR>&lt;xa-datasource-property name=&quot;ServerName&quot;&gt;myserver<BR>&lt;/xa-datasource-property&gt;--&gt;<BR>&lt;!ELEMENT xa-datasource-property (#PCDATA)&gt;<BR>&lt;!-- The xa-datasource-property name attribute specifies the name of theXADataSource attribute the xa-datasource-property element content providesthe value of.--&gt;<BR>&lt;!ATTLIST xa-datasource-property name CDATA  #REQUIRED&gt;]]>

		</dtdsource>
		<DDML:Doc> Specify a property to assign to the XADataSource implementation class.
Each property is identified by the name attribute and the property value is
given by the xa-datasource-property element content. The property is mapped
onto the XADataSource implementation by looking for a JavaBeans style
getter method for the property name. If found, the value of the property is
set using the JavaBeans setter with the element text translated to the true
property type using the java.beans.PropertyEditor for the type.

   Ex:
    &amp;lt;xa-datasource-property name="IfxWAITTIME"&amp;gt;10&amp;lt;/xa-datasource-property&amp;gt;
    &amp;lt;xa-datasource-property name="IfxIFXHOST"&amp;gt;myhost.mydomain.com&amp;lt;/xa-datasource-property&amp;gt;
    &amp;lt;xa-datasource-property name="PortNumber"&amp;gt;1557&amp;lt;/xa-datasource-property&amp;gt;
    &amp;lt;xa-datasource-property name="DatabaseName"&amp;gt;mydb&amp;lt;/xa-datasource-property&amp;gt;
    &amp;lt;xa-datasource-property name="ServerName"&amp;gt;myserver&amp;lt;/xa-datasource-property&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "name" Required = "Yes">
				<DDML:Doc> The xa-datasource-property name attribute specifies the name of the
XADataSource attribute the xa-datasource-property element content provides
the value of.

				</DDML:Doc>
			</AttDef>
		</AttGroup>
		<AttDef Name = "name" Required = "Yes">
			<DDML:Doc> The xa-datasource-property name attribute specifies the name of the
XADataSource attribute the xa-datasource-property element content provides
the value of.

			</DDML:Doc>
		</AttDef>
	</ElementDecl>
	<ElementDecl Name = "isSameRM-override-value">
		<dtdsource><![CDATA[
<BR>&lt;!-- The isSameRM-override-value element allows one to unconditionally setwhether the javax.transaction.xa.XAResource.isSameRM(XAResource) returnstrue or false.Ex:<BR>&lt;isSameRM-override-value&gt;true<BR>&lt;/isSameRM-override-value&gt;--&gt;<BR>&lt;!ELEMENT isSameRM-override-value (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The isSameRM-override-value element allows one to unconditionally set
whether the javax.transaction.xa.XAResource.isSameRM(XAResource) returns
true or false.

Ex:
&amp;lt;isSameRM-override-value&amp;gt;true&amp;lt;/isSameRM-override-value&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "connection-property">
		<dtdsource><![CDATA[
<BR>&lt;!-- The connection-property element allows you to pass in arbitrary connectionproperties to the Driver.connect(url, props) method. Each connection-propertyspecifies a string name/value pair with the property name coming from thename attribute and the value coming from the element content.   Ex:   <BR>&lt;connection-property name=&quot;char.encoding&quot;&gt;UTF-8<BR>&lt;/connection-property&gt;<BR>&lt;--&gt;<BR>&lt;!ELEMENT connection-property (#PCDATA)&gt;<BR>&lt;!-- The connection-property name attribute gives the name of the connectionproperty.--&gt;<BR>&lt;!ATTLIST connection-property name CDATA  #REQUIRED&gt;]]>

		</dtdsource>
		<DDML:Doc> The connection-property element allows you to pass in arbitrary connection
properties to the Driver.connect(url, props) method. Each connection-property
specifies a string name/value pair with the property name coming from the
name attribute and the value coming from the element content.

   Ex:
   &amp;lt;connection-property name="char.encoding"&amp;gt;UTF-8&amp;lt;/connection-property&amp;gt;
&amp;lt;
		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "name" Required = "Yes">
				<DDML:Doc> The connection-property name attribute gives the name of the connection
property.

				</DDML:Doc>
			</AttDef>
		</AttGroup>
		<AttDef Name = "name" Required = "Yes">
			<DDML:Doc> The connection-property name attribute gives the name of the connection
property.

			</DDML:Doc>
		</AttDef>
	</ElementDecl>
	<ElementDecl Name = "new-connection-sql">
		<dtdsource><![CDATA[
<BR>&lt;!-- Specify an SQL statement to execute whenever a connection is added tothe connection pool.--&gt;<BR>&lt;!ELEMENT new-connection-sql (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> Specify an SQL statement to execute whenever a connection is added to
the connection pool.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "check-valid-connection-sql">
		<dtdsource><![CDATA[
<BR>&lt;!-- Specify an SQL statement to check validity of a pool connection. Thismay be called when managed connection is taken from pool for use.--&gt;<BR>&lt;!ELEMENT check-valid-connection-sql (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> Specify an SQL statement to check validity of a pool connection. This
may be called when managed connection is taken from pool for use.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "valid-connection-checker-class-name">
		<dtdsource><![CDATA[
<BR>&lt;!-- An org.jboss.resource.adapter.jdbc.ValidConnectionChecker that providesa SQLException isValidConnection(Connection e) method to validate is a connectionis valid. An exception means the connection is destroyed.This overrides the check-valid-connection-sql when present.Ex:<BR>&lt;exception-sorter-class-name&gt;   org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker<BR>&lt;/exception-sorter-class-name&gt;--&gt;<BR>&lt;!ELEMENT valid-connection-checker-class-name (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> An org.jboss.resource.adapter.jdbc.ValidConnectionChecker that provides
a SQLException isValidConnection(Connection e) method to validate is a connection
is valid. An exception means the connection is destroyed.
This overrides the check-valid-connection-sql when present.

Ex:
&amp;lt;exception-sorter-class-name&amp;gt;
   org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker
&amp;lt;/exception-sorter-class-name&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "exception-sorter-class-name">
		<dtdsource><![CDATA[
<BR>&lt;!-- An org.jboss.resource.adapter.jdbc.ExceptionSorter that providesa boolean isExceptionFatal(SQLException e) method to validate is an exceptionshould be broadcast to all javax.resource.spi.ConnectionEventListener asa connectionErrorOccurred message.Ex:<BR>&lt;exception-sorter-class-name&gt;   org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter<BR>&lt;/exception-sorter-class-name&gt;<BR>&lt;exception-sorter-class-name&gt;   org.jboss.resource.adapter.jdbc.vendor.SybaseExceptionSorter<BR>&lt;/exception-sorter-class-name&gt;--&gt;<BR>&lt;!ELEMENT exception-sorter-class-name (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> An org.jboss.resource.adapter.jdbc.ExceptionSorter that provides
a boolean isExceptionFatal(SQLException e) method to validate is an exception
should be broadcast to all javax.resource.spi.ConnectionEventListener as
a connectionErrorOccurred message.

Ex:
&amp;lt;exception-sorter-class-name&amp;gt;
   org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter
&amp;lt;/exception-sorter-class-name&amp;gt;
&amp;lt;exception-sorter-class-name&amp;gt;
   org.jboss.resource.adapter.jdbc.vendor.SybaseExceptionSorter
&amp;lt;/exception-sorter-class-name&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "track-statements">
		<dtdsource><![CDATA[
<BR>&lt;!-- Whether to check for unclosed statements when a     connection is returned to the pool--&gt;<BR>&lt;!ELEMENT track-statements (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> Whether to check for unclosed statements when a
     connection is returned to the pool

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "prepared-statement-cache-size">
		<dtdsource><![CDATA[
<BR>&lt;!-- The number of prepared statements per connection in an LRU cache--&gt;<BR>&lt;!ELEMENT prepared-statement-cache-size (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The number of prepared statements per connection in an LRU cache

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "depends">
		<dtdsource><![CDATA[
<BR>&lt;!-- The depends element specifies the JMX ObjectName string of a servicethat the connection manager services depend on.   Ex:   <BR>&lt;depends&gt;jboss:service=Hypersonic<BR>&lt;/depends&gt;--&gt;<BR>&lt;!ELEMENT depends (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The depends element specifies the JMX ObjectName string of a service
that the connection manager services depend on.

   Ex:
   &amp;lt;depends&amp;gt;jboss:service=Hypersonic&amp;lt;/depends&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "connection-factories">
		<dtdsource><![CDATA[
<BR>&lt;!-- The connection-factories element is the root of the generic jca adaptor section--&gt;<BR>&lt;!ELEMENT connection-factories (mbean | tx-connection-factory | no-tx-connection-factory)*&gt;]]>

		</dtdsource>
		<DDML:Doc> The connection-factories element is the root of the generic jca adaptor section

		</DDML:Doc>
		<Model>
			<Choice Frequency = "ZeroOrMore">
				<Ref Element = "mbean"/>
				<Ref Element = "tx-connection-factory"/>
				<Ref Element = "no-tx-connection-factory"/>
			</Choice>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "mbean">
		<dtdsource><![CDATA[
<BR>&lt;!ELEMENT mbean ANY&gt;]]>

		</dtdsource>
		<Model>
			<Any/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "tx-connection-factory">
		<dtdsource><![CDATA[
<BR>&lt;!-- The tx-connection-factory element is used to configure generic resourceadapters supporting transactions--&gt;<BR>&lt;!ELEMENT tx-connection-factory (jndi-name , (local-transaction | xa-transaction) , track-connection-by-tx? , adapter-display-name? , config-property* , (application-managed-security | security-domain | security-domain-and-application)? , min-pool-size? , max-pool-size? , blocking-timeout-millis? , idle-timeout-minutes? , no-tx-separate-pools? , depends*)&gt;]]>

		</dtdsource>
		<DDML:Doc> The tx-connection-factory element is used to configure generic resource
adapters supporting transactions

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "jndi-name"/>
				<Choice>
					<Ref Element = "local-transaction"/>
					<Ref Element = "xa-transaction"/>
				</Choice>
				<Ref Element = "track-connection-by-tx" Frequency = "Optional"/>
				<Ref Element = "adapter-display-name" Frequency = "Optional"/>
				<Ref Element = "config-property" Frequency = "ZeroOrMore"/>
				<Choice Frequency = "Optional">
					<Ref Element = "application-managed-security"/>
					<Ref Element = "security-domain"/>
					<Ref Element = "security-domain-and-application"/>
				</Choice>
				<Ref Element = "min-pool-size" Frequency = "Optional"/>
				<Ref Element = "max-pool-size" Frequency = "Optional"/>
				<Ref Element = "blocking-timeout-millis" Frequency = "Optional"/>
				<Ref Element = "idle-timeout-minutes" Frequency = "Optional"/>
				<Ref Element = "no-tx-separate-pools" Frequency = "Optional"/>
				<Ref Element = "depends" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "no-tx-connection-factory">
		<dtdsource><![CDATA[
<BR>&lt;!-- The no-tx-connection-factory element is used to configure generic resourceadapters that do not support transactions--&gt;<BR>&lt;!ELEMENT no-tx-connection-factory (jndi-name , adapter-display-name? , config-property* , (application-managed-security | security-domain | security-domain-and-application)? , min-pool-size? , max-pool-size? , blocking-timeout-millis? , idle-timeout-minutes? , depends*)&gt;]]>

		</dtdsource>
		<DDML:Doc> The no-tx-connection-factory element is used to configure generic resource
adapters that do not support transactions

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "jndi-name"/>
				<Ref Element = "adapter-display-name" Frequency = "Optional"/>
				<Ref Element = "config-property" Frequency = "ZeroOrMore"/>
				<Choice Frequency = "Optional">
					<Ref Element = "application-managed-security"/>
					<Ref Element = "security-domain"/>
					<Ref Element = "security-domain-and-application"/>
				</Choice>
				<Ref Element = "min-pool-size" Frequency = "Optional"/>
				<Ref Element = "max-pool-size" Frequency = "Optional"/>
				<Ref Element = "blocking-timeout-millis" Frequency = "Optional"/>
				<Ref Element = "idle-timeout-minutes" Frequency = "Optional"/>
				<Ref Element = "depends" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "adapter-display-name">
		<dtdsource><![CDATA[
<BR>&lt;!-- The display name to associate with the connection manager mbean.--&gt;<BR>&lt;!ELEMENT adapter-display-name (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The display name to associate with the connection manager mbean.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "xa-transaction">
		<dtdsource><![CDATA[
<BR>&lt;!-- The xa-transaction element is used to mark that the tx-connection-factorysupports XA transactions.--&gt;<BR>&lt;!ELEMENT xa-transaction EMPTY&gt;]]>

		</dtdsource>
		<DDML:Doc> The xa-transaction element is used to mark that the tx-connection-factory
supports XA transactions.

		</DDML:Doc>
		<Model>
			<Empty/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "local-transaction">
		<dtdsource><![CDATA[
<BR>&lt;!-- The local-transaction element is used to mark that the tx-connection-factorysupports local transactions.--&gt;<BR>&lt;!ELEMENT local-transaction EMPTY&gt;]]>

		</dtdsource>
		<DDML:Doc> The local-transaction element is used to mark that the tx-connection-factory
supports local transactions.

		</DDML:Doc>
		<Model>
			<Empty/>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "config-property">
		<dtdsource><![CDATA[
<BR>&lt;!-- The config-property specifies a mannaged connection factory property.--&gt;<BR>&lt;!ELEMENT config-property (#PCDATA)&gt;<BR>&lt;!-- The config-property name attribute gives the name of the connectionfactory property.--&gt;<BR>&lt;!ATTLIST config-property name CDATA  #REQUIRED&gt;<BR>&lt;!-- The config-property type attribute gives the name of the connectionfactory property.--&gt;<BR>&lt;!ATTLIST config-property type CDATA  #REQUIRED&gt;]]>

		</dtdsource>
		<DDML:Doc> The config-property specifies a mannaged connection factory property.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "name" Required = "Yes">
				<DDML:Doc> The config-property name attribute gives the name of the connection
factory property.

				</DDML:Doc>
			</AttDef>
			<AttDef Name = "type" Required = "Yes">
				<DDML:Doc> The config-property type attribute gives the name of the connection
factory property.

				</DDML:Doc>
			</AttDef>
		</AttGroup>
		<AttDef Name = "name" Required = "Yes">
			<DDML:Doc> The config-property name attribute gives the name of the connection
factory property.

			</DDML:Doc>
		</AttDef>
		<AttDef Name = "type" Required = "Yes">
			<DDML:Doc> The config-property type attribute gives the name of the connection
factory property.

			</DDML:Doc>
		</AttDef>
	</ElementDecl>
</DocumentDef>