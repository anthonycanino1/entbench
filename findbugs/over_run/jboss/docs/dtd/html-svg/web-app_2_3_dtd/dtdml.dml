<?xml version = "1.0"?>
<!--Generated by XML Authority. DDML version 1.0-->
<DocumentDef name = "web-app_2_3.dtd"
	 xmlns = "http://www.purl.org/NET/ddml/v1"
	 xmlns:DDML = "http://www.purl.org/NET/ddml/v1" Version = "1.0">
	<dtdsource><![CDATA[
<BR><BR>&lt;!--Copyright (c) 2000 Sun Microsystems, Inc.,901 San Antonio Road,Palo Alto, California 94303, U.S.A.All rights reserved.Sun Microsystems, Inc. has intellectual property rights relating totechnology embodied in the product that is described in this document.In particular, and without limitation, these intellectual propertyrights may include one or more of the U.S. patents listed athttp://www.sun.com/patents and one or more additional patents orpending patent applications in the U.S. and in other countries.This document and the product to which it pertains are distributedunder licenses restricting their use, copying, distribution, anddecompilation.  This document may be reproduced and distributed but maynot be changed without prior written authorization of Sun and itslicensors, if any.Third-party software, including font technology, is copyrighted andlicensed from Sun suppliers.Sun,  Sun Microsystems,  the Sun logo,  Java,  JavaServer Pages,  JavaNaming and Directory Interface,  JDBC,  JDK,  JavaMail and  andEnterprise JavaBeans are trademarks or registered trademarks of SunMicrosystems, Inc. in the U.S. and other countries.Federal Acquisitions: Commercial Software - Government Users Subject toStandard License Terms and Conditions.DOCUMENTATION IS PROVIDED &quot;AS IS&quot; AND ALL EXPRESS OR IMPLIEDCONDITIONS, REPRESENTATIONS AND WARRANTIES, INCLUDING ANY IMPLIEDWARRANTY OF MERCHANTABILITY, FITNESS FOR FOR A PARTICULAR PURPOSE ORNON-INFRINGEMENT, ARE DISCLAIMED, EXCEPT TO THE EXTENT THAT SUCHDISCLAIMERS ARE HELD TO BE LEGALLY INVALID._________________________________________________________________________Copyright (c) 2000 Sun Microsystems, Inc.,901 San Antonio Road,Palo Alto, California 94303, E'tats-Unis.Tous droits re'serve's.Sun Microsystems, Inc. a les droits de proprie'te' intellectuelsrelatants a` la technologie incorpore'e dans le produit qui est de'critdans ce document. En particulier, et sans la limitation, ces droits deproprie'te' intellectuels peuvent inclure un ou plus des brevetsame'ricains e'nume're's a` http://www.sun.com/patents et un ou lesbrevets plus supple'mentaires ou les applications de brevet en attentedans les E'tats-Unis et dans les autres pays.Ce produit ou document est prote'ge' par un copyright et distribue'avec des licences qui en restreignent l'utilisation, la copie, ladistribution, et la de'compilation.  Ce documention associe n peute^tre reproduite et distribuer, par quelque moyen que ce soit, sansl'autorisation pre'alable et e'crite de Sun et de ses bailleurs delicence, le cas e'che'ant.Le logiciel de'tenu par des tiers, et qui comprend la technologierelative aux polices de caracte`res, est prote'ge' par un copyright etlicencie' par des fournisseurs de Sun.Sun,  Sun Microsystems,  le logo Sun,  Java,  JavaServer Pages,  JavaNaming and Directory Interface,  JDBC,  JDK,  JavaMail et  andEnterprise JavaBeans sont des marques de fabrique ou des marquesde'pose'es de Sun Microsystems, Inc. aux E'tats-Unis et dans d'autrespays.LA DOCUMENTATION EST FOURNIE &quot;EN L'E'TAT&quot; ET TOUTES AUTRES CONDITIONS,DECLARATIONS ET GARANTIES EXPRESSES OU TACITES SONT FORMELLEMENTEXCLUES, DANS LA MESURE AUTORISEE PAR LA LOI APPLICABLE, Y COMPRISNOTAMMENT TOUTE GARANTIE IMPLICITE RELATIVE A LA QUALITE MARCHANDE, AL'APTITUDE A UNE UTILISATION PARTICULIERE OU A L'ABSENCE DECONTREFAC,ON.--&gt;<BR>&lt;!--This is the XML DTD for the Servlet 2.3 deployment descriptor.All Servlet 2.3 deployment descriptors must include a DOCTYPEof the following form:  <BR>&lt;!DOCTYPE web-app PUBLIC&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;&gt;--&gt;<BR>&lt;!--The following conventions apply to all J2EE deployment descriptorelements unless indicated otherwise.- In elements that contain PCDATA, leading and trailing whitespace  in the data may be ignored.- In elements whose value is an &quot;enumerated type&quot;, the value is  case sensitive.- In elements that specify a pathname to a file within the same  JAR file, relative filenames (i.e., those not starting with &quot;/&quot;)  are considered relative to the root of the JAR file's namespace.  Absolute filenames (i.e., those starting with &quot;/&quot;) also specify  names in the root of the JAR file's namespace.  In general, relative  names are preferred.  The exception is .war files where absolute  names are preferred for consistency with the servlet API.--&gt;<BR>&lt;!--The web-app element is the root of the deployment descriptor fora web application.--&gt;<BR>&lt;!ELEMENT web-app (icon? , display-name? , description? , distributable? , context-param* , filter* , filter-mapping* , listener* , servlet* , servlet-mapping* , session-config? , mime-mapping* , welcome-file-list? , error-page* , taglib* , resource-env-ref* , resource-ref* , security-constraint* , login-config? , security-role* , env-entry* , ejb-ref* , ejb-local-ref*)&gt;<BR>&lt;!ATTLIST web-app  id ID  #IMPLIED &gt;<BR>&lt;!--The auth-constraint element indicates the user roles that shouldbe permitted access to this resource collection. The role-nameused here must either correspond to the role-name of one of thesecurity-role elements defined for this web application, or bethe specially reserved role-name &quot;*&quot; that is a compact syntax forindicating all roles in the web application. If both &quot;*&quot; androlenames appear, the container interprets this as all roles.If no roles are defined, no user is allowed access to the portion ofthe web application described by the containing security-constraint.The container matches role names case sensitively when determiningaccess.Used in: security-constraint--&gt;<BR>&lt;!ELEMENT auth-constraint (description? , role-name*)&gt;<BR>&lt;!--The ID mechanism is to allow tools that produce additional deploymentinformation (i.e., information beyond the standard deploymentdescriptor information) to store the non-standard information in aseparate file, and easily refer from these tool-specific files to theinformation in the standard deployment descriptor.Tools are not allowed to add the non-standard information into thestandard deployment descriptor.--&gt;<BR>&lt;!ATTLIST auth-constraint id ID  #IMPLIED&gt;<BR>&lt;!--The auth-method element is used to configure the authenticationmechanism for the web application. As a prerequisite to gaining access to any web resources which are protected by an authorizationconstraint, a user must have authenticated using the configuredmechanism. Legal values for this element are &quot;BASIC&quot;, &quot;DIGEST&quot;,&quot;FORM&quot;, or &quot;CLIENT-CERT&quot;.Used in: login-config--&gt;<BR>&lt;!ELEMENT auth-method (#PCDATA)&gt;<BR>&lt;!ATTLIST auth-method  id ID  #IMPLIED &gt;<BR>&lt;!--The context-param element contains the declaration of a webapplication's servlet context initialization parameters.Used in: web-app--&gt;<BR>&lt;!ELEMENT context-param (param-name , param-value , description?)&gt;<BR>&lt;!ATTLIST context-param  id ID  #IMPLIED &gt;<BR>&lt;!--The description element is used to provide text describing the parentelement.  The description element should include any information thatthe web application war file producer wants to provide to the consumer ofthe web application war file (i.e., to the Deployer). Typically, the toolsused by the web application war file consumer will display the descriptionwhen processing the parent element that contains the description.Used in: auth-constraint, context-param, ejb-local-ref, ejb-ref,env-entry, filter, init-param, resource-env-ref, resource-ref, run-as,security-role, security-role-ref, servlet, user-data-constraint,web-app, web-resource-collection--&gt;<BR>&lt;!ELEMENT description (#PCDATA)&gt;<BR>&lt;!ATTLIST description  id ID  #IMPLIED &gt;<BR>&lt;!--The display-name element contains a short name that is intended to bedisplayed by tools.  The display name need not be unique.Used in: filter, security-constraint, servlet, web-appExample:<BR>&lt;display-name&gt;Employee Self Service<BR>&lt;/display-name&gt;--&gt;<BR>&lt;!ELEMENT display-name (#PCDATA)&gt;<BR>&lt;!ATTLIST display-name  id ID  #IMPLIED &gt;<BR>&lt;!--The distributable element, by its presence in a web applicationdeployment descriptor, indicates that this web application isprogrammed appropriately to be deployed into a distributed servletcontainerUsed in: web-app--&gt;<BR>&lt;!ELEMENT distributable EMPTY&gt;<BR>&lt;!ATTLIST distributable  id ID  #IMPLIED &gt;<BR>&lt;!--The ejb-link element is used in the ejb-ref or ejb-local-refelements to specify that an EJB reference is linked to anenterprise bean.The name in the ejb-link element is composed of apath name specifying the ejb-jar containing the referenced enterprisebean with the ejb-name of the target bean appended and separated fromthe path name by &quot;#&quot;.  The path name is relative to the war filecontaining the web application that is referencing the enterprise bean.This allows multiple enterprise beans with the same ejb-name to beuniquely identified.Used in: ejb-local-ref, ejb-refExamples:<BR>&lt;ejb-link&gt;EmployeeRecord<BR>&lt;/ejb-link&gt;<BR>&lt;ejb-link&gt;../products/product.jar#ProductEJB<BR>&lt;/ejb-link&gt;--&gt;<BR>&lt;!ELEMENT ejb-link (#PCDATA)&gt;<BR>&lt;!ATTLIST ejb-link  id ID  #IMPLIED &gt;<BR>&lt;!--The ejb-local-ref element is used for the declaration of a reference toan enterprise bean's local home. The declaration consists of:- an optional description- the EJB reference name used in the code of the web application  that's referencing the enterprise bean- the expected type of the referenced enterprise bean- the expected local home and local interfaces of the referenced  enterprise bean- optional ejb-link information, used to specify the referenced  enterprise beanUsed in: web-app--&gt;<BR>&lt;!ELEMENT ejb-local-ref (description? , ejb-ref-name , ejb-ref-type , local-home , local , ejb-link?)&gt;<BR>&lt;!ATTLIST ejb-local-ref  id ID  #IMPLIED &gt;<BR>&lt;!--The ejb-ref element is used for the declaration of a reference toan enterprise bean's home. The declaration consists of:- an optional description- the EJB reference name used in the code of  the web application that's referencing the enterprise bean- the expected type of the referenced enterprise bean- the expected home and remote interfaces of the referenced  enterprise bean- optional ejb-link information, used to specify the referenced  enterprise beanUsed in: web-app--&gt;<BR>&lt;!ELEMENT ejb-ref (description? , ejb-ref-name , ejb-ref-type , home , remote , ejb-link?)&gt;<BR>&lt;!ATTLIST ejb-ref  id ID  #IMPLIED &gt;<BR>&lt;!--The ejb-ref-name element contains the name of an EJB reference. TheEJB reference is an entry in the web application's environment and isrelative to the java:comp/env context.  The name must be uniquewithin the web application.It is recommended that name is prefixed with &quot;ejb/&quot;.Used in: ejb-local-ref, ejb-refExample:<BR>&lt;ejb-ref-name&gt;ejb/Payroll<BR>&lt;/ejb-ref-name&gt;--&gt;<BR>&lt;!ELEMENT ejb-ref-name (#PCDATA)&gt;<BR>&lt;!ATTLIST ejb-ref-name  id ID  #IMPLIED &gt;<BR>&lt;!--The ejb-ref-type element contains the expected type of thereferenced enterprise bean.The ejb-ref-type element must be one of the following:<BR>&lt;ejb-ref-type&gt;Entity<BR>&lt;/ejb-ref-type&gt;<BR>&lt;ejb-ref-type&gt;Session<BR>&lt;/ejb-ref-type&gt;Used in: ejb-local-ref, ejb-ref--&gt;<BR>&lt;!ELEMENT ejb-ref-type (#PCDATA)&gt;<BR>&lt;!ATTLIST ejb-ref-type  id ID  #IMPLIED &gt;<BR>&lt;!--The env-entry element contains the declaration of a web application'senvironment entry. The declaration consists of an optionaldescription, the name of the environment entry, and an optionalvalue.  If a value is not specified, one must be suppliedduring deployment.--&gt;<BR>&lt;!ELEMENT env-entry (description? , env-entry-name , env-entry-value? , env-entry-type)&gt;<BR>&lt;!ATTLIST env-entry  id ID  #IMPLIED &gt;<BR>&lt;!--The env-entry-name element contains the name of a web applications'senvironment entry.  The name is a JNDI name relative to thejava:comp/env context.  The name must be unique within a web application.Example:<BR>&lt;env-entry-name&gt;minAmount<BR>&lt;/env-entry-name&gt;Used in: env-entry--&gt;<BR>&lt;!ELEMENT env-entry-name (#PCDATA)&gt;<BR>&lt;!ATTLIST env-entry-name  id ID  #IMPLIED &gt;<BR>&lt;!--The env-entry-type element contains the fully-qualified Java type ofthe environment entry value that is expected by the web application'scode.The following are the legal values of env-entry-type:java.lang.Booleanjava.lang.Bytejava.lang.Characterjava.lang.Stringjava.lang.Shortjava.lang.Integerjava.lang.Longjava.lang.Floatjava.lang.DoubleUsed in: env-entry--&gt;<BR>&lt;!ELEMENT env-entry-type (#PCDATA)&gt;<BR>&lt;!ATTLIST env-entry-type  id ID  #IMPLIED &gt;<BR>&lt;!--The env-entry-value element contains the value of a web application'senvironment entry. The value must be a String that is valid for theconstructor of the specified type that takes a single Stringparameter, or for java.lang.Character, a single character.Example:<BR>&lt;env-entry-value&gt;100.00<BR>&lt;/env-entry-value&gt;Used in: env-entry--&gt;<BR>&lt;!ELEMENT env-entry-value (#PCDATA)&gt;<BR>&lt;!ATTLIST env-entry-value  id ID  #IMPLIED &gt;<BR>&lt;!--The error-code contains an HTTP error code, ex: 404Used in: error-page--&gt;<BR>&lt;!ELEMENT error-code (#PCDATA)&gt;<BR>&lt;!ATTLIST error-code  id ID  #IMPLIED &gt;<BR>&lt;!--The error-page element contains a mapping between an error codeor exception type to the path of a resource in the web applicationUsed in: web-app--&gt;<BR>&lt;!ELEMENT error-page ((error-code | exception-type) , location)&gt;<BR>&lt;!ATTLIST error-page  id ID  #IMPLIED &gt;<BR>&lt;!--The exception type contains a fully qualified class name of aJava exception type.Used in: error-page--&gt;<BR>&lt;!ELEMENT exception-type (#PCDATA)&gt;<BR>&lt;!ATTLIST exception-type  id ID  #IMPLIED &gt;<BR>&lt;!--The extension element contains a string describing anextension. example: &quot;txt&quot;Used in: mime-mapping--&gt;<BR>&lt;!ELEMENT extension (#PCDATA)&gt;<BR>&lt;!ATTLIST extension  id ID  #IMPLIED &gt;<BR>&lt;!--Declares a filter in the web application. The filter is mapped toeither a servlet or a URL pattern in the filter-mapping element, usingthe filter-name value to reference. Filters can access theinitialization parameters declared in the deployment descriptor atruntime via the FilterConfig interface.Used in: web-app--&gt;<BR>&lt;!ELEMENT filter (icon? , filter-name , display-name? , description? , filter-class , init-param*)&gt;<BR>&lt;!ATTLIST filter  id ID  #IMPLIED &gt;<BR>&lt;!--The fully qualified classname of the filter.Used in: filter--&gt;<BR>&lt;!ELEMENT filter-class (#PCDATA)&gt;<BR>&lt;!ATTLIST filter-class  id ID  #IMPLIED &gt;<BR>&lt;!--Declaration of the filter mappings in this web application. Thecontainer uses the filter-mapping declarations to decide which filtersto apply to a request, and in what order. The container matches therequest URI to a Servlet in the normal way. To determine which filtersto apply it matches filter-mapping declarations either on servlet-name,or on url-pattern for each filter-mapping element, depending on whichstyle is used. The order in which filters are invoked is the order inwhich filter-mapping declarations that match a request URI for aservlet appear in the list of filter-mapping elements.The filter-namevalue must be the value of the <BR>&lt;filter-name&gt; sub-elements of one of the<BR>&lt;filter&gt; declarations in the deployment descriptor.Used in: web-app--&gt;<BR>&lt;!ELEMENT filter-mapping (filter-name , (url-pattern | servlet-name))&gt;<BR>&lt;!ATTLIST filter-mapping  id ID  #IMPLIED &gt;<BR>&lt;!--The logical name of the filter. This name is used to map the filter.Each filter name is unique within the web application.Used in: filter, filter-mapping--&gt;<BR>&lt;!ELEMENT filter-name (#PCDATA)&gt;<BR>&lt;!ATTLIST filter-name  id ID  #IMPLIED &gt;<BR>&lt;!--The form-error-page element defines the location in the web appwhere the error page that is displayed when login is not successfulcan be found. The path begins with a leading / and is interpretedrelative to the root of the WAR.Used in: form-login-config--&gt;<BR>&lt;!ELEMENT form-error-page (#PCDATA)&gt;<BR>&lt;!ATTLIST form-error-page  id ID  #IMPLIED &gt;<BR>&lt;!--The form-login-config element specifies the login and error pagesthat should be used in form based login. If form based authenticationis not used, these elements are ignored.Used in: login-config--&gt;<BR>&lt;!ELEMENT form-login-config (form-login-page , form-error-page)&gt;<BR>&lt;!ATTLIST form-login-config  id ID  #IMPLIED &gt;<BR>&lt;!--The form-login-page element defines the location in the web appwhere the page that can be used for login can be found. The pathbegins with a leading / and is interpreted relative to the root of the WAR.Used in: form-login-config--&gt;<BR>&lt;!ELEMENT form-login-page (#PCDATA)&gt;<BR>&lt;!ATTLIST form-login-page  id ID  #IMPLIED &gt;<BR>&lt;!--The home element contains the fully-qualified name of the enterprisebean's home interface.Used in: ejb-refExample:<BR>&lt;home&gt;com.aardvark.payroll.PayrollHome<BR>&lt;/home&gt;--&gt;<BR>&lt;!ELEMENT home (#PCDATA)&gt;<BR>&lt;!ATTLIST home  id ID  #IMPLIED &gt;<BR>&lt;!--The http-method contains an HTTP method (GET | POST |...).Used in: web-resource-collection--&gt;<BR>&lt;!ELEMENT http-method (#PCDATA)&gt;<BR>&lt;!ATTLIST http-method  id ID  #IMPLIED &gt;<BR>&lt;!--The icon element contains small-icon and large-icon elements thatspecify the file names for small and a large GIF or JPEG icon imagesused to represent the parent element in a GUI tool.Used in: filter, servlet, web-app--&gt;<BR>&lt;!ELEMENT icon (small-icon? , large-icon?)&gt;<BR>&lt;!ATTLIST icon  id ID  #IMPLIED &gt;<BR>&lt;!--The init-param element contains a name/value pair as aninitialization param of the servletUsed in: filter, servlet--&gt;<BR>&lt;!ELEMENT init-param (param-name , param-value , description?)&gt;<BR>&lt;!ATTLIST init-param  id ID  #IMPLIED &gt;<BR>&lt;!--The jsp-file element contains the full path to a JSP file withinthe web application beginning with a `/'.Used in: servlet--&gt;<BR>&lt;!ELEMENT jsp-file (#PCDATA)&gt;<BR>&lt;!ATTLIST jsp-file  id ID  #IMPLIED &gt;<BR>&lt;!--The large-icon element contains the name of a filecontaining a large (32 x 32) icon image. The filename is a relative path within the web application'swar file.The image may be either in the JPEG or GIF format.The icon can be used by tools.Used in: iconExample:<BR>&lt;large-icon&gt;employee-service-icon32x32.jpg<BR>&lt;/large-icon&gt;--&gt;<BR>&lt;!ELEMENT large-icon (#PCDATA)&gt;<BR>&lt;!ATTLIST large-icon  id ID  #IMPLIED &gt;<BR>&lt;!--The listener element indicates the deployment properties for a webapplication listener bean.Used in: web-app--&gt;<BR>&lt;!ELEMENT listener (listener-class)&gt;<BR>&lt;!ATTLIST listener  id ID  #IMPLIED &gt;<BR>&lt;!--The listener-class element declares a class in the application must beregistered as a web application listener bean. The value is the fully qualified classname of the listener class.Used in: listener--&gt;<BR>&lt;!ELEMENT listener-class (#PCDATA)&gt;<BR>&lt;!ATTLIST listener-class  id ID  #IMPLIED &gt;<BR>&lt;!--The load-on-startup element indicates that this servlet should beloaded (instantiated and have its init() called) on the startupof the web application. The optional contents ofthese element must be an integer indicating the order in whichthe servlet should be loaded. If the value is a negative integer,or the element is not present, the container is free to load theservlet whenever it chooses. If the value is a positive integeror 0, the container must load and initialize the servlet as theapplication is deployed. The container must guarantee thatservlets marked with lower integers are loaded before servletsmarked with higher integers. The container may choose the orderof loading of servlets with the same load-on-start-up value.Used in: servlet--&gt;<BR>&lt;!ELEMENT load-on-startup (#PCDATA)&gt;<BR>&lt;!ATTLIST load-on-startup  id ID  #IMPLIED &gt;<BR>&lt;!--The local element contains the fully-qualified name of theenterprise bean's local interface.Used in: ejb-local-ref--&gt;<BR>&lt;!ELEMENT local (#PCDATA)&gt;<BR>&lt;!ATTLIST local  id ID  #IMPLIED &gt;<BR>&lt;!--The local-home element contains the fully-qualified name of theenterprise bean's local home interface.Used in: ejb-local-ref--&gt;<BR>&lt;!ELEMENT local-home (#PCDATA)&gt;<BR>&lt;!ATTLIST local-home  id ID  #IMPLIED &gt;<BR>&lt;!--The location element contains the location of the resource in the webapplication relative to the root of the web application. The value ofthe location must have a leading `/'.Used in: error-page--&gt;<BR>&lt;!ELEMENT location (#PCDATA)&gt;<BR>&lt;!ATTLIST location  id ID  #IMPLIED &gt;<BR>&lt;!--The login-config element is used to configure the authenticationmethod that should be used, the realm name that should be used forthis application, and the attributes that are needed by the form loginmechanism.Used in: web-app--&gt;<BR>&lt;!ELEMENT login-config (auth-method? , realm-name? , form-login-config?)&gt;<BR>&lt;!ATTLIST login-config  id ID  #IMPLIED &gt;<BR>&lt;!--The mime-mapping element defines a mapping between an extensionand a mime type.Used in: web-app--&gt;<BR>&lt;!ELEMENT mime-mapping (extension , mime-type)&gt;<BR>&lt;!ATTLIST mime-mapping  id ID  #IMPLIED &gt;<BR>&lt;!--The mime-type element contains a defined mime type. example:&quot;text/plain&quot;Used in: mime-mapping--&gt;<BR>&lt;!ELEMENT mime-type (#PCDATA)&gt;<BR>&lt;!ATTLIST mime-type  id ID  #IMPLIED &gt;<BR>&lt;!--The param-name element contains the name of a parameter. Each parametername must be unique in the web application.Used in: context-param, init-param--&gt;<BR>&lt;!ELEMENT param-name (#PCDATA)&gt;<BR>&lt;!ATTLIST param-name  id ID  #IMPLIED &gt;<BR>&lt;!--The param-value element contains the value of a parameter.Used in: context-param, init-param--&gt;<BR>&lt;!ELEMENT param-value (#PCDATA)&gt;<BR>&lt;!ATTLIST param-value  id ID  #IMPLIED &gt;<BR>&lt;!--The realm name element specifies the realm name to use in HTTPBasic authorization.Used in: login-config--&gt;<BR>&lt;!ELEMENT realm-name (#PCDATA)&gt;<BR>&lt;!ATTLIST realm-name  id ID  #IMPLIED &gt;<BR>&lt;!--The remote element contains the fully-qualified name of the enterprisebean's remote interface.Used in: ejb-refExample:<BR>&lt;remote&gt;com.wombat.empl.EmployeeService<BR>&lt;/remote&gt;--&gt;<BR>&lt;!ELEMENT remote (#PCDATA)&gt;<BR>&lt;!ATTLIST remote  id ID  #IMPLIED &gt;<BR>&lt;!--The res-auth element specifies whether the web application code signson programmatically to the resource manager, or whether the Containerwill sign on to the resource manager on behalf of the web application. In thelatter case, the Container uses information that is supplied by theDeployer.The value of this element must be one of the two following:<BR>&lt;res-auth&gt;Application<BR>&lt;/res-auth&gt;<BR>&lt;res-auth&gt;Container<BR>&lt;/res-auth&gt;Used in: resource-ref--&gt;<BR>&lt;!ELEMENT res-auth (#PCDATA)&gt;<BR>&lt;!ATTLIST res-auth  id ID  #IMPLIED &gt;<BR>&lt;!--The res-ref-name element specifies the name of a resource managerconnection factory reference.  The name is a JNDI name relative to thejava:comp/env context.  The name must be unique within a web application.Used in: resource-ref--&gt;<BR>&lt;!ELEMENT res-ref-name (#PCDATA)&gt;<BR>&lt;!ATTLIST res-ref-name  id ID  #IMPLIED &gt;<BR>&lt;!--The res-sharing-scope element specifies whether connections obtainedthrough the given resource manager connection factory reference can beshared. The value of this element, if specified, must be one of thetwo following:<BR>&lt;res-sharing-scope&gt;Shareable<BR>&lt;/res-sharing-scope&gt;<BR>&lt;res-sharing-scope&gt;Unshareable<BR>&lt;/res-sharing-scope&gt;The default value is Shareable.Used in: resource-ref--&gt;<BR>&lt;!ELEMENT res-sharing-scope (#PCDATA)&gt;<BR>&lt;!ATTLIST res-sharing-scope  id ID  #IMPLIED &gt;<BR>&lt;!--The res-type element specifies the type of the data source. The typeis specified by the fully qualified Java language class or interfaceexpected to be implemented by the data source.Used in: resource-ref--&gt;<BR>&lt;!ELEMENT res-type (#PCDATA)&gt;<BR>&lt;!ATTLIST res-type  id ID  #IMPLIED &gt;<BR>&lt;!--The resource-env-ref element contains a declaration of a web application'sreference to an administered object associated with a resourcein the web application's environment.  It consists of an optionaldescription, the resource environment reference name, and anindication of the resource environment reference type expected bythe web application code.Used in: web-appExample:<BR>&lt;resource-env-ref&gt;    <BR>&lt;resource-env-ref-name&gt;jms/StockQueue<BR>&lt;/resource-env-ref-name&gt;    <BR>&lt;resource-env-ref-type&gt;javax.jms.Queue<BR>&lt;/resource-env-ref-type&gt;<BR>&lt;/resource-env-ref&gt;--&gt;<BR>&lt;!ELEMENT resource-env-ref (description? , resource-env-ref-name , resource-env-ref-type)&gt;<BR>&lt;!ATTLIST resource-env-ref  id ID  #IMPLIED &gt;<BR>&lt;!--The resource-env-ref-name element specifies the name of a resourceenvironment reference; its value is the environment entry name used inthe web application code.  The name is a JNDI name relative to thejava:comp/env context and must be unique within a web application.Used in: resource-env-ref--&gt;<BR>&lt;!ELEMENT resource-env-ref-name (#PCDATA)&gt;<BR>&lt;!ATTLIST resource-env-ref-name  id ID  #IMPLIED &gt;<BR>&lt;!--The resource-env-ref-type element specifies the type of a resourceenvironment reference.  It is the fully qualified name of a Javalanguage class or interface.Used in: resource-env-ref--&gt;<BR>&lt;!ELEMENT resource-env-ref-type (#PCDATA)&gt;<BR>&lt;!ATTLIST resource-env-ref-type  id ID  #IMPLIED &gt;<BR>&lt;!--The resource-ref element contains a declaration of a web application'sreference to an external resource. It consists of an optionaldescription, the resource manager connection factory reference name,the indication of the resource manager connection factory typeexpected by the web application code, the type of authentication(Application or Container), and an optional specification of theshareability of connections obtained from the resource (Shareable orUnshareable).Used in: web-appExample:    <BR>&lt;resource-ref&gt;<BR>&lt;res-ref-name&gt;jdbc/EmployeeAppDB<BR>&lt;/res-ref-name&gt;<BR>&lt;res-type&gt;javax.sql.DataSource<BR>&lt;/res-type&gt;<BR>&lt;res-auth&gt;Container<BR>&lt;/res-auth&gt;<BR>&lt;res-sharing-scope&gt;Shareable<BR>&lt;/res-sharing-scope&gt;    <BR>&lt;/resource-ref&gt;--&gt;<BR>&lt;!ELEMENT resource-ref (description? , res-ref-name , res-type , res-auth , res-sharing-scope?)&gt;<BR>&lt;!ATTLIST resource-ref  id ID  #IMPLIED &gt;<BR>&lt;!--The role-link element is a reference to a defined security role. Therole-link element must contain the name of one of the security rolesdefined in the security-role elements.Used in: security-role-ref--&gt;<BR>&lt;!ELEMENT role-link (#PCDATA)&gt;<BR>&lt;!ATTLIST role-link  id ID  #IMPLIED &gt;<BR>&lt;!--The role-name element contains the name of a security role.The name must conform to the lexical rules for an NMTOKEN.Used in: auth-constraint, run-as, security-role, security-role-ref--&gt;<BR>&lt;!ELEMENT role-name (#PCDATA)&gt;<BR>&lt;!ATTLIST role-name  id ID  #IMPLIED &gt;<BR>&lt;!--The run-as element specifies the run-as identity to be used for theexecution of the web application. It contains an optional description, andthe name of a security role.Used in: servlet--&gt;<BR>&lt;!ELEMENT run-as (description? , role-name)&gt;<BR>&lt;!ATTLIST run-as  id ID  #IMPLIED &gt;<BR>&lt;!--The security-constraint element is used to associate securityconstraints with one or more web resource collectionsUsed in: web-app--&gt;<BR>&lt;!ELEMENT security-constraint (display-name? , web-resource-collection+ , auth-constraint? , user-data-constraint?)&gt;<BR>&lt;!ATTLIST security-constraint  id ID  #IMPLIED &gt;<BR>&lt;!--The security-role element contains the definition of a securityrole. The definition consists of an optional description of thesecurity role, and the security role name.Used in: web-appExample:    <BR>&lt;security-role&gt;<BR>&lt;description&gt;    This role includes all employees who are authorized    to access the employee service application.<BR>&lt;/description&gt;<BR>&lt;role-name&gt;employee<BR>&lt;/role-name&gt;    <BR>&lt;/security-role&gt;--&gt;<BR>&lt;!ELEMENT security-role (description? , role-name)&gt;<BR>&lt;!ATTLIST security-role  id ID  #IMPLIED &gt;<BR>&lt;!--The security-role-ref element contains the declaration of a securityrole reference in the web application's code. The declaration consistsof an optional description, the security role name used in the code,and an optional link to a security role. If the security role is notspecified, the Deployer must choose an appropriate security role.The value of the role-name element must be the String used as theparameter to the EJBContext.isCallerInRole(String roleName) methodor the HttpServletRequest.isUserInRole(String role) method.Used in: servlet--&gt;<BR>&lt;!ELEMENT security-role-ref (description? , role-name , role-link?)&gt;<BR>&lt;!ATTLIST security-role-ref  id ID  #IMPLIED &gt;<BR>&lt;!--The servlet element contains the declarative data of aservlet. If a jsp-file is specified and the load-on-startup element ispresent, then the JSP should be precompiled and loaded.Used in: web-app--&gt;<BR>&lt;!ELEMENT servlet (icon? , servlet-name , display-name? , description? , (servlet-class | jsp-file) , init-param* , load-on-startup? , run-as? , security-role-ref*)&gt;<BR>&lt;!ATTLIST servlet  id ID  #IMPLIED &gt;<BR>&lt;!--The servlet-class element contains the fully qualified class nameof the servlet.Used in: servlet--&gt;<BR>&lt;!ELEMENT servlet-class (#PCDATA)&gt;<BR>&lt;!ATTLIST servlet-class  id ID  #IMPLIED &gt;<BR>&lt;!--The servlet-mapping element defines a mapping between a servletand a url patternUsed in: web-app--&gt;<BR>&lt;!ELEMENT servlet-mapping (servlet-name , url-pattern)&gt;<BR>&lt;!ATTLIST servlet-mapping  id ID  #IMPLIED &gt;<BR>&lt;!--The servlet-name element contains the canonical name of theservlet. Each servlet name is unique within the web application.Used in: filter-mapping, servlet, servlet-mapping--&gt;<BR>&lt;!ELEMENT servlet-name (#PCDATA)&gt;<BR>&lt;!ATTLIST servlet-name  id ID  #IMPLIED &gt;<BR>&lt;!--The session-config element defines the session parameters forthis web application.Used in: web-app--&gt;<BR>&lt;!ELEMENT session-config (session-timeout?)&gt;<BR>&lt;!ATTLIST session-config  id ID  #IMPLIED &gt;<BR>&lt;!--The session-timeout element defines the default session timeoutinterval for all sessions created in this web application. Thespecified timeout must be expressed in a whole number of minutes.If the timeout is 0 or less, the container ensures the defaultbehaviour of sessions is never to time out.Used in: session-config--&gt;<BR>&lt;!ELEMENT session-timeout (#PCDATA)&gt;<BR>&lt;!ATTLIST session-timeout  id ID  #IMPLIED &gt;<BR>&lt;!--The small-icon element contains the name of a filecontaining a small (16 x 16) icon image. The filename is a relative path within the web application'swar file.The image may be either in the JPEG or GIF format.The icon can be used by tools.Used in: iconExample:<BR>&lt;small-icon&gt;employee-service-icon16x16.jpg<BR>&lt;/small-icon&gt;--&gt;<BR>&lt;!ELEMENT small-icon (#PCDATA)&gt;<BR>&lt;!ATTLIST small-icon  id ID  #IMPLIED &gt;<BR>&lt;!--The taglib element is used to describe a JSP tag library.Used in: web-app--&gt;<BR>&lt;!ELEMENT taglib (taglib-uri , taglib-location)&gt;<BR>&lt;!ATTLIST taglib  id ID  #IMPLIED &gt;<BR>&lt;!--the taglib-location element contains the location (as a resourcerelative to the root of the web application) where to find the TagLibary Description file for the tag library.Used in: taglib--&gt;<BR>&lt;!ELEMENT taglib-location (#PCDATA)&gt;<BR>&lt;!ATTLIST taglib-location  id ID  #IMPLIED &gt;<BR>&lt;!--The taglib-uri element describes a URI, relative to the locationof the web.xml document, identifying a Tag Library used in the WebApplication.Used in: taglib--&gt;<BR>&lt;!ELEMENT taglib-uri (#PCDATA)&gt;<BR>&lt;!ATTLIST taglib-uri  id ID  #IMPLIED &gt;<BR>&lt;!--The transport-guarantee element specifies that the communicationbetween client and server should be NONE, INTEGRAL, orCONFIDENTIAL. NONE means that the application does not require anytransport guarantees. A value of INTEGRAL means that the applicationrequires that the data sent between the client and server be sent insuch a way that it can't be changed in transit. CONFIDENTIAL meansthat the application requires that the data be transmitted in afashion that prevents other entities from observing the contents ofthe transmission. In most cases, the presence of the INTEGRAL orCONFIDENTIAL flag will indicate that the use of SSL is required.Used in: user-data-constraint--&gt;<BR>&lt;!ELEMENT transport-guarantee (#PCDATA)&gt;<BR>&lt;!ATTLIST transport-guarantee  id ID  #IMPLIED &gt;<BR>&lt;!--The url-pattern element contains the url pattern of the mapping. Mustfollow the rules specified in Section 11.2 of the Servlet APISpecification.Used in: filter-mapping, servlet-mapping, web-resource-collection--&gt;<BR>&lt;!ELEMENT url-pattern (#PCDATA)&gt;<BR>&lt;!ATTLIST url-pattern  id ID  #IMPLIED &gt;<BR>&lt;!--The user-data-constraint element is used to indicate how datacommunicated between the client and container should be protected.Used in: security-constraint--&gt;<BR>&lt;!ELEMENT user-data-constraint (description? , transport-guarantee)&gt;<BR>&lt;!ATTLIST user-data-constraint  id ID  #IMPLIED &gt;<BR>&lt;!--The web-resource-collection element is used to identify a subsetof the resources and HTTP methods on those resources within a webapplication to which a security constraint applies. If no HTTP methodsare specified, then the security constraint applies to all HTTPmethods.Used in: security-constraint--&gt;<BR>&lt;!ELEMENT web-resource-collection (web-resource-name , description? , url-pattern* , http-method*)&gt;<BR>&lt;!ATTLIST web-resource-collection  id ID  #IMPLIED &gt;<BR>&lt;!--The web-resource-name contains the name of this web resourcecollection.Used in: web-resource-collection--&gt;<BR>&lt;!ELEMENT web-resource-name (#PCDATA)&gt;<BR>&lt;!ATTLIST web-resource-name  id ID  #IMPLIED &gt;<BR>&lt;!--The welcome-file element contains file name to use as a defaultwelcome file, such as index.htmlUsed in: welcome-file-list--&gt;<BR>&lt;!ELEMENT welcome-file (#PCDATA)&gt;<BR>&lt;!ATTLIST welcome-file  id ID  #IMPLIED &gt;<BR>&lt;!--The welcome-file-list contains an ordered list of welcome fileselements.Used in: web-app--&gt;<BR>&lt;!ELEMENT welcome-file-list (welcome-file+)&gt;<BR>&lt;!ATTLIST welcome-file-list  id ID  #IMPLIED &gt;]]>

	</dtdsource>
	<ElementDecl Name = "web-app">
		<dtdsource><![CDATA[
<BR>&lt;!ELEMENT web-app (icon? , display-name? , description? , distributable? , context-param* , filter* , filter-mapping* , listener* , servlet* , servlet-mapping* , session-config? , mime-mapping* , welcome-file-list? , error-page* , taglib* , resource-env-ref* , resource-ref* , security-constraint* , login-config? , security-role* , env-entry* , ejb-ref* , ejb-local-ref*)&gt;<BR>&lt;!ATTLIST web-app  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<Model>
			<Seq>
				<Ref Element = "icon" Frequency = "Optional"/>
				<Ref Element = "display-name" Frequency = "Optional"/>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "distributable" Frequency = "Optional"/>
				<Ref Element = "context-param" Frequency = "ZeroOrMore"/>
				<Ref Element = "filter" Frequency = "ZeroOrMore"/>
				<Ref Element = "filter-mapping" Frequency = "ZeroOrMore"/>
				<Ref Element = "listener" Frequency = "ZeroOrMore"/>
				<Ref Element = "servlet" Frequency = "ZeroOrMore"/>
				<Ref Element = "servlet-mapping" Frequency = "ZeroOrMore"/>
				<Ref Element = "session-config" Frequency = "Optional"/>
				<Ref Element = "mime-mapping" Frequency = "ZeroOrMore"/>
				<Ref Element = "welcome-file-list" Frequency = "Optional"/>
				<Ref Element = "error-page" Frequency = "ZeroOrMore"/>
				<Ref Element = "taglib" Frequency = "ZeroOrMore"/>
				<Ref Element = "resource-env-ref" Frequency = "ZeroOrMore"/>
				<Ref Element = "resource-ref" Frequency = "ZeroOrMore"/>
				<Ref Element = "security-constraint" Frequency = "ZeroOrMore"/>
				<Ref Element = "login-config" Frequency = "Optional"/>
				<Ref Element = "security-role" Frequency = "ZeroOrMore"/>
				<Ref Element = "env-entry" Frequency = "ZeroOrMore"/>
				<Ref Element = "ejb-ref" Frequency = "ZeroOrMore"/>
				<Ref Element = "ejb-local-ref" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "auth-constraint">
		<dtdsource><![CDATA[
<BR>&lt;!--The auth-constraint element indicates the user roles that shouldbe permitted access to this resource collection. The role-nameused here must either correspond to the role-name of one of thesecurity-role elements defined for this web application, or bethe specially reserved role-name &quot;*&quot; that is a compact syntax forindicating all roles in the web application. If both &quot;*&quot; androlenames appear, the container interprets this as all roles.If no roles are defined, no user is allowed access to the portion ofthe web application described by the containing security-constraint.The container matches role names case sensitively when determiningaccess.Used in: security-constraint--&gt;<BR>&lt;!ELEMENT auth-constraint (description? , role-name*)&gt;<BR>&lt;!--The ID mechanism is to allow tools that produce additional deploymentinformation (i.e., information beyond the standard deploymentdescriptor information) to store the non-standard information in aseparate file, and easily refer from these tool-specific files to theinformation in the standard deployment descriptor.Tools are not allowed to add the non-standard information into thestandard deployment descriptor.--&gt;<BR>&lt;!ATTLIST auth-constraint id ID  #IMPLIED&gt;]]>

		</dtdsource>
		<DDML:Doc>
The auth-constraint element indicates the user roles that should
be permitted access to this resource collection. The role-name
used here must either correspond to the role-name of one of the
security-role elements defined for this web application, or be
the specially reserved role-name "*" that is a compact syntax for
indicating all roles in the web application. If both "*" and
rolenames appear, the container interprets this as all roles.
If no roles are defined, no user is allowed access to the portion of
the web application described by the containing security-constraint.
The container matches role names case sensitively when determining
access.


Used in: security-constraint

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "role-name" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID">
				<DDML:Doc>
The ID mechanism is to allow tools that produce additional deployment
information (i.e., information beyond the standard deployment
descriptor information) to store the non-standard information in a
separate file, and easily refer from these tool-specific files to the
information in the standard deployment descriptor.

Tools are not allowed to add the non-standard information into the
standard deployment descriptor.

				</DDML:Doc>
			</AttDef>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "auth-method">
		<dtdsource><![CDATA[
<BR>&lt;!--The auth-method element is used to configure the authenticationmechanism for the web application. As a prerequisite to gaining access to any web resources which are protected by an authorizationconstraint, a user must have authenticated using the configuredmechanism. Legal values for this element are &quot;BASIC&quot;, &quot;DIGEST&quot;,&quot;FORM&quot;, or &quot;CLIENT-CERT&quot;.Used in: login-config--&gt;<BR>&lt;!ELEMENT auth-method (#PCDATA)&gt;<BR>&lt;!ATTLIST auth-method  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The auth-method element is used to configure the authentication
mechanism for the web application. As a prerequisite to gaining access to any web resources which are protected by an authorization
constraint, a user must have authenticated using the configured
mechanism. Legal values for this element are "BASIC", "DIGEST",
"FORM", or "CLIENT-CERT".

Used in: login-config

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "context-param">
		<dtdsource><![CDATA[
<BR>&lt;!--The context-param element contains the declaration of a webapplication's servlet context initialization parameters.Used in: web-app--&gt;<BR>&lt;!ELEMENT context-param (param-name , param-value , description?)&gt;<BR>&lt;!ATTLIST context-param  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The context-param element contains the declaration of a web
application's servlet context initialization parameters.

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "param-name"/>
				<Ref Element = "param-value"/>
				<Ref Element = "description" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "description">
		<dtdsource><![CDATA[
<BR>&lt;!--The description element is used to provide text describing the parentelement.  The description element should include any information thatthe web application war file producer wants to provide to the consumer ofthe web application war file (i.e., to the Deployer). Typically, the toolsused by the web application war file consumer will display the descriptionwhen processing the parent element that contains the description.Used in: auth-constraint, context-param, ejb-local-ref, ejb-ref,env-entry, filter, init-param, resource-env-ref, resource-ref, run-as,security-role, security-role-ref, servlet, user-data-constraint,web-app, web-resource-collection--&gt;<BR>&lt;!ELEMENT description (#PCDATA)&gt;<BR>&lt;!ATTLIST description  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The description element is used to provide text describing the parent
element.  The description element should include any information that
the web application war file producer wants to provide to the consumer of
the web application war file (i.e., to the Deployer). Typically, the tools
used by the web application war file consumer will display the description
when processing the parent element that contains the description.

Used in: auth-constraint, context-param, ejb-local-ref, ejb-ref,
env-entry, filter, init-param, resource-env-ref, resource-ref, run-as,
security-role, security-role-ref, servlet, user-data-constraint,
web-app, web-resource-collection

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "display-name">
		<dtdsource><![CDATA[
<BR>&lt;!--The display-name element contains a short name that is intended to bedisplayed by tools.  The display name need not be unique.Used in: filter, security-constraint, servlet, web-appExample:<BR>&lt;display-name&gt;Employee Self Service<BR>&lt;/display-name&gt;--&gt;<BR>&lt;!ELEMENT display-name (#PCDATA)&gt;<BR>&lt;!ATTLIST display-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The display-name element contains a short name that is intended to be
displayed by tools.  The display name need not be unique.

Used in: filter, security-constraint, servlet, web-app

Example:

&amp;lt;display-name&amp;gt;Employee Self Service&amp;lt;/display-name&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "distributable">
		<dtdsource><![CDATA[
<BR>&lt;!--The distributable element, by its presence in a web applicationdeployment descriptor, indicates that this web application isprogrammed appropriately to be deployed into a distributed servletcontainerUsed in: web-app--&gt;<BR>&lt;!ELEMENT distributable EMPTY&gt;<BR>&lt;!ATTLIST distributable  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The distributable element, by its presence in a web application
deployment descriptor, indicates that this web application is
programmed appropriately to be deployed into a distributed servlet
container

Used in: web-app

		</DDML:Doc>
		<Model>
			<Empty/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "ejb-link">
		<dtdsource><![CDATA[
<BR>&lt;!--The ejb-link element is used in the ejb-ref or ejb-local-refelements to specify that an EJB reference is linked to anenterprise bean.The name in the ejb-link element is composed of apath name specifying the ejb-jar containing the referenced enterprisebean with the ejb-name of the target bean appended and separated fromthe path name by &quot;#&quot;.  The path name is relative to the war filecontaining the web application that is referencing the enterprise bean.This allows multiple enterprise beans with the same ejb-name to beuniquely identified.Used in: ejb-local-ref, ejb-refExamples:<BR>&lt;ejb-link&gt;EmployeeRecord<BR>&lt;/ejb-link&gt;<BR>&lt;ejb-link&gt;../products/product.jar#ProductEJB<BR>&lt;/ejb-link&gt;--&gt;<BR>&lt;!ELEMENT ejb-link (#PCDATA)&gt;<BR>&lt;!ATTLIST ejb-link  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The ejb-link element is used in the ejb-ref or ejb-local-ref
elements to specify that an EJB reference is linked to an
enterprise bean.

The name in the ejb-link element is composed of a
path name specifying the ejb-jar containing the referenced enterprise
bean with the ejb-name of the target bean appended and separated from
the path name by "#".  The path name is relative to the war file
containing the web application that is referencing the enterprise bean.
This allows multiple enterprise beans with the same ejb-name to be
uniquely identified.

Used in: ejb-local-ref, ejb-ref

Examples:

	&amp;lt;ejb-link&amp;gt;EmployeeRecord&amp;lt;/ejb-link&amp;gt;

	&amp;lt;ejb-link&amp;gt;../products/product.jar#ProductEJB&amp;lt;/ejb-link&amp;gt;


		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "ejb-local-ref">
		<dtdsource><![CDATA[
<BR>&lt;!--The ejb-local-ref element is used for the declaration of a reference toan enterprise bean's local home. The declaration consists of:- an optional description- the EJB reference name used in the code of the web application  that's referencing the enterprise bean- the expected type of the referenced enterprise bean- the expected local home and local interfaces of the referenced  enterprise bean- optional ejb-link information, used to specify the referenced  enterprise beanUsed in: web-app--&gt;<BR>&lt;!ELEMENT ejb-local-ref (description? , ejb-ref-name , ejb-ref-type , local-home , local , ejb-link?)&gt;<BR>&lt;!ATTLIST ejb-local-ref  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The ejb-local-ref element is used for the declaration of a reference to
an enterprise bean's local home. The declaration consists of:

	- an optional description
	- the EJB reference name used in the code of the web application
	  that's referencing the enterprise bean
	- the expected type of the referenced enterprise bean
	- the expected local home and local interfaces of the referenced
	  enterprise bean
	- optional ejb-link information, used to specify the referenced
	  enterprise bean

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "ejb-ref-name"/>
				<Ref Element = "ejb-ref-type"/>
				<Ref Element = "local-home"/>
				<Ref Element = "local"/>
				<Ref Element = "ejb-link" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "ejb-ref">
		<dtdsource><![CDATA[
<BR>&lt;!--The ejb-ref element is used for the declaration of a reference toan enterprise bean's home. The declaration consists of:- an optional description- the EJB reference name used in the code of  the web application that's referencing the enterprise bean- the expected type of the referenced enterprise bean- the expected home and remote interfaces of the referenced  enterprise bean- optional ejb-link information, used to specify the referenced  enterprise beanUsed in: web-app--&gt;<BR>&lt;!ELEMENT ejb-ref (description? , ejb-ref-name , ejb-ref-type , home , remote , ejb-link?)&gt;<BR>&lt;!ATTLIST ejb-ref  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The ejb-ref element is used for the declaration of a reference to
an enterprise bean's home. The declaration consists of:

	- an optional description
	- the EJB reference name used in the code of
	  the web application that's referencing the enterprise bean
	- the expected type of the referenced enterprise bean
	- the expected home and remote interfaces of the referenced
	  enterprise bean
	- optional ejb-link information, used to specify the referenced
	  enterprise bean

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "ejb-ref-name"/>
				<Ref Element = "ejb-ref-type"/>
				<Ref Element = "home"/>
				<Ref Element = "remote"/>
				<Ref Element = "ejb-link" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "ejb-ref-name">
		<dtdsource><![CDATA[
<BR>&lt;!--The ejb-ref-name element contains the name of an EJB reference. TheEJB reference is an entry in the web application's environment and isrelative to the java:comp/env context.  The name must be uniquewithin the web application.It is recommended that name is prefixed with &quot;ejb/&quot;.Used in: ejb-local-ref, ejb-refExample:<BR>&lt;ejb-ref-name&gt;ejb/Payroll<BR>&lt;/ejb-ref-name&gt;--&gt;<BR>&lt;!ELEMENT ejb-ref-name (#PCDATA)&gt;<BR>&lt;!ATTLIST ejb-ref-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The ejb-ref-name element contains the name of an EJB reference. The
EJB reference is an entry in the web application's environment and is
relative to the java:comp/env context.  The name must be unique
within the web application.

It is recommended that name is prefixed with "ejb/".

Used in: ejb-local-ref, ejb-ref

Example:

&amp;lt;ejb-ref-name&amp;gt;ejb/Payroll&amp;lt;/ejb-ref-name&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "ejb-ref-type">
		<dtdsource><![CDATA[
<BR>&lt;!--The ejb-ref-type element contains the expected type of thereferenced enterprise bean.The ejb-ref-type element must be one of the following:<BR>&lt;ejb-ref-type&gt;Entity<BR>&lt;/ejb-ref-type&gt;<BR>&lt;ejb-ref-type&gt;Session<BR>&lt;/ejb-ref-type&gt;Used in: ejb-local-ref, ejb-ref--&gt;<BR>&lt;!ELEMENT ejb-ref-type (#PCDATA)&gt;<BR>&lt;!ATTLIST ejb-ref-type  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The ejb-ref-type element contains the expected type of the
referenced enterprise bean.

The ejb-ref-type element must be one of the following:

	&amp;lt;ejb-ref-type&amp;gt;Entity&amp;lt;/ejb-ref-type&amp;gt;
	&amp;lt;ejb-ref-type&amp;gt;Session&amp;lt;/ejb-ref-type&amp;gt;

Used in: ejb-local-ref, ejb-ref

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "env-entry">
		<dtdsource><![CDATA[
<BR>&lt;!--The env-entry element contains the declaration of a web application'senvironment entry. The declaration consists of an optionaldescription, the name of the environment entry, and an optionalvalue.  If a value is not specified, one must be suppliedduring deployment.--&gt;<BR>&lt;!ELEMENT env-entry (description? , env-entry-name , env-entry-value? , env-entry-type)&gt;<BR>&lt;!ATTLIST env-entry  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The env-entry element contains the declaration of a web application's
environment entry. The declaration consists of an optional
description, the name of the environment entry, and an optional
value.  If a value is not specified, one must be supplied
during deployment.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "env-entry-name"/>
				<Ref Element = "env-entry-value" Frequency = "Optional"/>
				<Ref Element = "env-entry-type"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "env-entry-name">
		<dtdsource><![CDATA[
<BR>&lt;!--The env-entry-name element contains the name of a web applications'senvironment entry.  The name is a JNDI name relative to thejava:comp/env context.  The name must be unique within a web application.Example:<BR>&lt;env-entry-name&gt;minAmount<BR>&lt;/env-entry-name&gt;Used in: env-entry--&gt;<BR>&lt;!ELEMENT env-entry-name (#PCDATA)&gt;<BR>&lt;!ATTLIST env-entry-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The env-entry-name element contains the name of a web applications's
environment entry.  The name is a JNDI name relative to the
java:comp/env context.  The name must be unique within a web application.

Example:

&amp;lt;env-entry-name&amp;gt;minAmount&amp;lt;/env-entry-name&amp;gt;

Used in: env-entry

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "env-entry-type">
		<dtdsource><![CDATA[
<BR>&lt;!--The env-entry-type element contains the fully-qualified Java type ofthe environment entry value that is expected by the web application'scode.The following are the legal values of env-entry-type:java.lang.Booleanjava.lang.Bytejava.lang.Characterjava.lang.Stringjava.lang.Shortjava.lang.Integerjava.lang.Longjava.lang.Floatjava.lang.DoubleUsed in: env-entry--&gt;<BR>&lt;!ELEMENT env-entry-type (#PCDATA)&gt;<BR>&lt;!ATTLIST env-entry-type  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The env-entry-type element contains the fully-qualified Java type of
the environment entry value that is expected by the web application's
code.

The following are the legal values of env-entry-type:

	java.lang.Boolean
	java.lang.Byte
	java.lang.Character
	java.lang.String
	java.lang.Short
	java.lang.Integer
	java.lang.Long
	java.lang.Float
	java.lang.Double

Used in: env-entry

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "env-entry-value">
		<dtdsource><![CDATA[
<BR>&lt;!--The env-entry-value element contains the value of a web application'senvironment entry. The value must be a String that is valid for theconstructor of the specified type that takes a single Stringparameter, or for java.lang.Character, a single character.Example:<BR>&lt;env-entry-value&gt;100.00<BR>&lt;/env-entry-value&gt;Used in: env-entry--&gt;<BR>&lt;!ELEMENT env-entry-value (#PCDATA)&gt;<BR>&lt;!ATTLIST env-entry-value  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The env-entry-value element contains the value of a web application's
environment entry. The value must be a String that is valid for the
constructor of the specified type that takes a single String
parameter, or for java.lang.Character, a single character.

Example:

&amp;lt;env-entry-value&amp;gt;100.00&amp;lt;/env-entry-value&amp;gt;

Used in: env-entry

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "error-code">
		<dtdsource><![CDATA[
<BR>&lt;!--The error-code contains an HTTP error code, ex: 404Used in: error-page--&gt;<BR>&lt;!ELEMENT error-code (#PCDATA)&gt;<BR>&lt;!ATTLIST error-code  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The error-code contains an HTTP error code, ex: 404

Used in: error-page

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "error-page">
		<dtdsource><![CDATA[
<BR>&lt;!--The error-page element contains a mapping between an error codeor exception type to the path of a resource in the web applicationUsed in: web-app--&gt;<BR>&lt;!ELEMENT error-page ((error-code | exception-type) , location)&gt;<BR>&lt;!ATTLIST error-page  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The error-page element contains a mapping between an error code
or exception type to the path of a resource in the web application

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Choice>
					<Ref Element = "error-code"/>
					<Ref Element = "exception-type"/>
				</Choice>
				<Ref Element = "location"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "exception-type">
		<dtdsource><![CDATA[
<BR>&lt;!--The exception type contains a fully qualified class name of aJava exception type.Used in: error-page--&gt;<BR>&lt;!ELEMENT exception-type (#PCDATA)&gt;<BR>&lt;!ATTLIST exception-type  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The exception type contains a fully qualified class name of a
Java exception type.

Used in: error-page

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "extension">
		<dtdsource><![CDATA[
<BR>&lt;!--The extension element contains a string describing anextension. example: &quot;txt&quot;Used in: mime-mapping--&gt;<BR>&lt;!ELEMENT extension (#PCDATA)&gt;<BR>&lt;!ATTLIST extension  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The extension element contains a string describing an
extension. example: "txt"

Used in: mime-mapping

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "filter">
		<dtdsource><![CDATA[
<BR>&lt;!--Declares a filter in the web application. The filter is mapped toeither a servlet or a URL pattern in the filter-mapping element, usingthe filter-name value to reference. Filters can access theinitialization parameters declared in the deployment descriptor atruntime via the FilterConfig interface.Used in: web-app--&gt;<BR>&lt;!ELEMENT filter (icon? , filter-name , display-name? , description? , filter-class , init-param*)&gt;<BR>&lt;!ATTLIST filter  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
Declares a filter in the web application. The filter is mapped to
either a servlet or a URL pattern in the filter-mapping element, using
the filter-name value to reference. Filters can access the
initialization parameters declared in the deployment descriptor at
runtime via the FilterConfig interface.

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "icon" Frequency = "Optional"/>
				<Ref Element = "filter-name"/>
				<Ref Element = "display-name" Frequency = "Optional"/>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "filter-class"/>
				<Ref Element = "init-param" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "filter-class">
		<dtdsource><![CDATA[
<BR>&lt;!--The fully qualified classname of the filter.Used in: filter--&gt;<BR>&lt;!ELEMENT filter-class (#PCDATA)&gt;<BR>&lt;!ATTLIST filter-class  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The fully qualified classname of the filter.

Used in: filter

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "filter-mapping">
		<dtdsource><![CDATA[
<BR>&lt;!--Declaration of the filter mappings in this web application. Thecontainer uses the filter-mapping declarations to decide which filtersto apply to a request, and in what order. The container matches therequest URI to a Servlet in the normal way. To determine which filtersto apply it matches filter-mapping declarations either on servlet-name,or on url-pattern for each filter-mapping element, depending on whichstyle is used. The order in which filters are invoked is the order inwhich filter-mapping declarations that match a request URI for aservlet appear in the list of filter-mapping elements.The filter-namevalue must be the value of the <BR>&lt;filter-name&gt; sub-elements of one of the<BR>&lt;filter&gt; declarations in the deployment descriptor.Used in: web-app--&gt;<BR>&lt;!ELEMENT filter-mapping (filter-name , (url-pattern | servlet-name))&gt;<BR>&lt;!ATTLIST filter-mapping  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
Declaration of the filter mappings in this web application. The
container uses the filter-mapping declarations to decide which filters
to apply to a request, and in what order. The container matches the
request URI to a Servlet in the normal way. To determine which filters
to apply it matches filter-mapping declarations either on servlet-name,
or on url-pattern for each filter-mapping element, depending on which
style is used. The order in which filters are invoked is the order in
which filter-mapping declarations that match a request URI for a
servlet appear in the list of filter-mapping elements.The filter-name
value must be the value of the &amp;lt;filter-name&amp;gt; sub-elements of one of the
&amp;lt;filter&amp;gt; declarations in the deployment descriptor.

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "filter-name"/>
				<Choice>
					<Ref Element = "url-pattern"/>
					<Ref Element = "servlet-name"/>
				</Choice>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "filter-name">
		<dtdsource><![CDATA[
<BR>&lt;!--The logical name of the filter. This name is used to map the filter.Each filter name is unique within the web application.Used in: filter, filter-mapping--&gt;<BR>&lt;!ELEMENT filter-name (#PCDATA)&gt;<BR>&lt;!ATTLIST filter-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The logical name of the filter. This name is used to map the filter.
Each filter name is unique within the web application.

Used in: filter, filter-mapping

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "form-error-page">
		<dtdsource><![CDATA[
<BR>&lt;!--The form-error-page element defines the location in the web appwhere the error page that is displayed when login is not successfulcan be found. The path begins with a leading / and is interpretedrelative to the root of the WAR.Used in: form-login-config--&gt;<BR>&lt;!ELEMENT form-error-page (#PCDATA)&gt;<BR>&lt;!ATTLIST form-error-page  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The form-error-page element defines the location in the web app
where the error page that is displayed when login is not successful
can be found. The path begins with a leading / and is interpreted
relative to the root of the WAR.

Used in: form-login-config

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "form-login-config">
		<dtdsource><![CDATA[
<BR>&lt;!--The form-login-config element specifies the login and error pagesthat should be used in form based login. If form based authenticationis not used, these elements are ignored.Used in: login-config--&gt;<BR>&lt;!ELEMENT form-login-config (form-login-page , form-error-page)&gt;<BR>&lt;!ATTLIST form-login-config  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The form-login-config element specifies the login and error pages
that should be used in form based login. If form based authentication
is not used, these elements are ignored.

Used in: login-config

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "form-login-page"/>
				<Ref Element = "form-error-page"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "form-login-page">
		<dtdsource><![CDATA[
<BR>&lt;!--The form-login-page element defines the location in the web appwhere the page that can be used for login can be found. The pathbegins with a leading / and is interpreted relative to the root of the WAR.Used in: form-login-config--&gt;<BR>&lt;!ELEMENT form-login-page (#PCDATA)&gt;<BR>&lt;!ATTLIST form-login-page  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The form-login-page element defines the location in the web app
where the page that can be used for login can be found. The path
begins with a leading / and is interpreted relative to the root of the WAR.

Used in: form-login-config

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "home">
		<dtdsource><![CDATA[
<BR>&lt;!--The home element contains the fully-qualified name of the enterprisebean's home interface.Used in: ejb-refExample:<BR>&lt;home&gt;com.aardvark.payroll.PayrollHome<BR>&lt;/home&gt;--&gt;<BR>&lt;!ELEMENT home (#PCDATA)&gt;<BR>&lt;!ATTLIST home  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The home element contains the fully-qualified name of the enterprise
bean's home interface.

Used in: ejb-ref

Example:

&amp;lt;home&amp;gt;com.aardvark.payroll.PayrollHome&amp;lt;/home&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "http-method">
		<dtdsource><![CDATA[
<BR>&lt;!--The http-method contains an HTTP method (GET | POST |...).Used in: web-resource-collection--&gt;<BR>&lt;!ELEMENT http-method (#PCDATA)&gt;<BR>&lt;!ATTLIST http-method  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The http-method contains an HTTP method (GET | POST |...).

Used in: web-resource-collection

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "icon">
		<dtdsource><![CDATA[
<BR>&lt;!--The icon element contains small-icon and large-icon elements thatspecify the file names for small and a large GIF or JPEG icon imagesused to represent the parent element in a GUI tool.Used in: filter, servlet, web-app--&gt;<BR>&lt;!ELEMENT icon (small-icon? , large-icon?)&gt;<BR>&lt;!ATTLIST icon  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The icon element contains small-icon and large-icon elements that
specify the file names for small and a large GIF or JPEG icon images
used to represent the parent element in a GUI tool.

Used in: filter, servlet, web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "small-icon" Frequency = "Optional"/>
				<Ref Element = "large-icon" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "init-param">
		<dtdsource><![CDATA[
<BR>&lt;!--The init-param element contains a name/value pair as aninitialization param of the servletUsed in: filter, servlet--&gt;<BR>&lt;!ELEMENT init-param (param-name , param-value , description?)&gt;<BR>&lt;!ATTLIST init-param  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The init-param element contains a name/value pair as an
initialization param of the servlet

Used in: filter, servlet

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "param-name"/>
				<Ref Element = "param-value"/>
				<Ref Element = "description" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "jsp-file">
		<dtdsource><![CDATA[
<BR>&lt;!--The jsp-file element contains the full path to a JSP file withinthe web application beginning with a `/'.Used in: servlet--&gt;<BR>&lt;!ELEMENT jsp-file (#PCDATA)&gt;<BR>&lt;!ATTLIST jsp-file  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The jsp-file element contains the full path to a JSP file within
the web application beginning with a `/'.

Used in: servlet

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "large-icon">
		<dtdsource><![CDATA[
<BR>&lt;!--The large-icon element contains the name of a filecontaining a large (32 x 32) icon image. The filename is a relative path within the web application'swar file.The image may be either in the JPEG or GIF format.The icon can be used by tools.Used in: iconExample:<BR>&lt;large-icon&gt;employee-service-icon32x32.jpg<BR>&lt;/large-icon&gt;--&gt;<BR>&lt;!ELEMENT large-icon (#PCDATA)&gt;<BR>&lt;!ATTLIST large-icon  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The large-icon element contains the name of a file
containing a large (32 x 32) icon image. The file
name is a relative path within the web application's
war file.

The image may be either in the JPEG or GIF format.
The icon can be used by tools.

Used in: icon

Example:

&amp;lt;large-icon&amp;gt;employee-service-icon32x32.jpg&amp;lt;/large-icon&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "listener">
		<dtdsource><![CDATA[
<BR>&lt;!--The listener element indicates the deployment properties for a webapplication listener bean.Used in: web-app--&gt;<BR>&lt;!ELEMENT listener (listener-class)&gt;<BR>&lt;!ATTLIST listener  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The listener element indicates the deployment properties for a web
application listener bean.

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "listener-class"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "listener-class">
		<dtdsource><![CDATA[
<BR>&lt;!--The listener-class element declares a class in the application must beregistered as a web application listener bean. The value is the fully qualified classname of the listener class.Used in: listener--&gt;<BR>&lt;!ELEMENT listener-class (#PCDATA)&gt;<BR>&lt;!ATTLIST listener-class  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The listener-class element declares a class in the application must be
registered as a web application listener bean. The value is the fully qualified classname of the listener class.


Used in: listener

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "load-on-startup">
		<dtdsource><![CDATA[
<BR>&lt;!--The load-on-startup element indicates that this servlet should beloaded (instantiated and have its init() called) on the startupof the web application. The optional contents ofthese element must be an integer indicating the order in whichthe servlet should be loaded. If the value is a negative integer,or the element is not present, the container is free to load theservlet whenever it chooses. If the value is a positive integeror 0, the container must load and initialize the servlet as theapplication is deployed. The container must guarantee thatservlets marked with lower integers are loaded before servletsmarked with higher integers. The container may choose the orderof loading of servlets with the same load-on-start-up value.Used in: servlet--&gt;<BR>&lt;!ELEMENT load-on-startup (#PCDATA)&gt;<BR>&lt;!ATTLIST load-on-startup  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The load-on-startup element indicates that this servlet should be
loaded (instantiated and have its init() called) on the startup
of the web application. The optional contents of
these element must be an integer indicating the order in which
the servlet should be loaded. If the value is a negative integer,
or the element is not present, the container is free to load the
servlet whenever it chooses. If the value is a positive integer
or 0, the container must load and initialize the servlet as the
application is deployed. The container must guarantee that
servlets marked with lower integers are loaded before servlets
marked with higher integers. The container may choose the order
of loading of servlets with the same load-on-start-up value.

Used in: servlet

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "local">
		<dtdsource><![CDATA[
<BR>&lt;!--The local element contains the fully-qualified name of theenterprise bean's local interface.Used in: ejb-local-ref--&gt;<BR>&lt;!ELEMENT local (#PCDATA)&gt;<BR>&lt;!ATTLIST local  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>

The local element contains the fully-qualified name of the
enterprise bean's local interface.

Used in: ejb-local-ref


		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "local-home">
		<dtdsource><![CDATA[
<BR>&lt;!--The local-home element contains the fully-qualified name of theenterprise bean's local home interface.Used in: ejb-local-ref--&gt;<BR>&lt;!ELEMENT local-home (#PCDATA)&gt;<BR>&lt;!ATTLIST local-home  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>

The local-home element contains the fully-qualified name of the
enterprise bean's local home interface.

Used in: ejb-local-ref

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "location">
		<dtdsource><![CDATA[
<BR>&lt;!--The location element contains the location of the resource in the webapplication relative to the root of the web application. The value ofthe location must have a leading `/'.Used in: error-page--&gt;<BR>&lt;!ELEMENT location (#PCDATA)&gt;<BR>&lt;!ATTLIST location  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The location element contains the location of the resource in the web
application relative to the root of the web application. The value of
the location must have a leading `/'.

Used in: error-page

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "login-config">
		<dtdsource><![CDATA[
<BR>&lt;!--The login-config element is used to configure the authenticationmethod that should be used, the realm name that should be used forthis application, and the attributes that are needed by the form loginmechanism.Used in: web-app--&gt;<BR>&lt;!ELEMENT login-config (auth-method? , realm-name? , form-login-config?)&gt;<BR>&lt;!ATTLIST login-config  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The login-config element is used to configure the authentication
method that should be used, the realm name that should be used for
this application, and the attributes that are needed by the form login
mechanism.

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "auth-method" Frequency = "Optional"/>
				<Ref Element = "realm-name" Frequency = "Optional"/>
				<Ref Element = "form-login-config" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "mime-mapping">
		<dtdsource><![CDATA[
<BR>&lt;!--The mime-mapping element defines a mapping between an extensionand a mime type.Used in: web-app--&gt;<BR>&lt;!ELEMENT mime-mapping (extension , mime-type)&gt;<BR>&lt;!ATTLIST mime-mapping  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The mime-mapping element defines a mapping between an extension
and a mime type.

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "extension"/>
				<Ref Element = "mime-type"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "mime-type">
		<dtdsource><![CDATA[
<BR>&lt;!--The mime-type element contains a defined mime type. example:&quot;text/plain&quot;Used in: mime-mapping--&gt;<BR>&lt;!ELEMENT mime-type (#PCDATA)&gt;<BR>&lt;!ATTLIST mime-type  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The mime-type element contains a defined mime type. example:
"text/plain"

Used in: mime-mapping

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "param-name">
		<dtdsource><![CDATA[
<BR>&lt;!--The param-name element contains the name of a parameter. Each parametername must be unique in the web application.Used in: context-param, init-param--&gt;<BR>&lt;!ELEMENT param-name (#PCDATA)&gt;<BR>&lt;!ATTLIST param-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The param-name element contains the name of a parameter. Each parameter
name must be unique in the web application.


Used in: context-param, init-param

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "param-value">
		<dtdsource><![CDATA[
<BR>&lt;!--The param-value element contains the value of a parameter.Used in: context-param, init-param--&gt;<BR>&lt;!ELEMENT param-value (#PCDATA)&gt;<BR>&lt;!ATTLIST param-value  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The param-value element contains the value of a parameter.

Used in: context-param, init-param

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "realm-name">
		<dtdsource><![CDATA[
<BR>&lt;!--The realm name element specifies the realm name to use in HTTPBasic authorization.Used in: login-config--&gt;<BR>&lt;!ELEMENT realm-name (#PCDATA)&gt;<BR>&lt;!ATTLIST realm-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The realm name element specifies the realm name to use in HTTP
Basic authorization.

Used in: login-config

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "remote">
		<dtdsource><![CDATA[
<BR>&lt;!--The remote element contains the fully-qualified name of the enterprisebean's remote interface.Used in: ejb-refExample:<BR>&lt;remote&gt;com.wombat.empl.EmployeeService<BR>&lt;/remote&gt;--&gt;<BR>&lt;!ELEMENT remote (#PCDATA)&gt;<BR>&lt;!ATTLIST remote  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The remote element contains the fully-qualified name of the enterprise
bean's remote interface.

Used in: ejb-ref

Example:

&amp;lt;remote&amp;gt;com.wombat.empl.EmployeeService&amp;lt;/remote&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "res-auth">
		<dtdsource><![CDATA[
<BR>&lt;!--The res-auth element specifies whether the web application code signson programmatically to the resource manager, or whether the Containerwill sign on to the resource manager on behalf of the web application. In thelatter case, the Container uses information that is supplied by theDeployer.The value of this element must be one of the two following:<BR>&lt;res-auth&gt;Application<BR>&lt;/res-auth&gt;<BR>&lt;res-auth&gt;Container<BR>&lt;/res-auth&gt;Used in: resource-ref--&gt;<BR>&lt;!ELEMENT res-auth (#PCDATA)&gt;<BR>&lt;!ATTLIST res-auth  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The res-auth element specifies whether the web application code signs
on programmatically to the resource manager, or whether the Container
will sign on to the resource manager on behalf of the web application. In the
latter case, the Container uses information that is supplied by the
Deployer.

The value of this element must be one of the two following:

	&amp;lt;res-auth&amp;gt;Application&amp;lt;/res-auth&amp;gt;
	&amp;lt;res-auth&amp;gt;Container&amp;lt;/res-auth&amp;gt;

Used in: resource-ref

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "res-ref-name">
		<dtdsource><![CDATA[
<BR>&lt;!--The res-ref-name element specifies the name of a resource managerconnection factory reference.  The name is a JNDI name relative to thejava:comp/env context.  The name must be unique within a web application.Used in: resource-ref--&gt;<BR>&lt;!ELEMENT res-ref-name (#PCDATA)&gt;<BR>&lt;!ATTLIST res-ref-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The res-ref-name element specifies the name of a resource manager
connection factory reference.  The name is a JNDI name relative to the
java:comp/env context.  The name must be unique within a web application.

Used in: resource-ref

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "res-sharing-scope">
		<dtdsource><![CDATA[
<BR>&lt;!--The res-sharing-scope element specifies whether connections obtainedthrough the given resource manager connection factory reference can beshared. The value of this element, if specified, must be one of thetwo following:<BR>&lt;res-sharing-scope&gt;Shareable<BR>&lt;/res-sharing-scope&gt;<BR>&lt;res-sharing-scope&gt;Unshareable<BR>&lt;/res-sharing-scope&gt;The default value is Shareable.Used in: resource-ref--&gt;<BR>&lt;!ELEMENT res-sharing-scope (#PCDATA)&gt;<BR>&lt;!ATTLIST res-sharing-scope  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The res-sharing-scope element specifies whether connections obtained
through the given resource manager connection factory reference can be
shared. The value of this element, if specified, must be one of the
two following:

	&amp;lt;res-sharing-scope&amp;gt;Shareable&amp;lt;/res-sharing-scope&amp;gt;
	&amp;lt;res-sharing-scope&amp;gt;Unshareable&amp;lt;/res-sharing-scope&amp;gt;

The default value is Shareable.

Used in: resource-ref

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "res-type">
		<dtdsource><![CDATA[
<BR>&lt;!--The res-type element specifies the type of the data source. The typeis specified by the fully qualified Java language class or interfaceexpected to be implemented by the data source.Used in: resource-ref--&gt;<BR>&lt;!ELEMENT res-type (#PCDATA)&gt;<BR>&lt;!ATTLIST res-type  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The res-type element specifies the type of the data source. The type
is specified by the fully qualified Java language class or interface
expected to be implemented by the data source.

Used in: resource-ref

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "resource-env-ref">
		<dtdsource><![CDATA[
<BR>&lt;!--The resource-env-ref element contains a declaration of a web application'sreference to an administered object associated with a resourcein the web application's environment.  It consists of an optionaldescription, the resource environment reference name, and anindication of the resource environment reference type expected bythe web application code.Used in: web-appExample:<BR>&lt;resource-env-ref&gt;    <BR>&lt;resource-env-ref-name&gt;jms/StockQueue<BR>&lt;/resource-env-ref-name&gt;    <BR>&lt;resource-env-ref-type&gt;javax.jms.Queue<BR>&lt;/resource-env-ref-type&gt;<BR>&lt;/resource-env-ref&gt;--&gt;<BR>&lt;!ELEMENT resource-env-ref (description? , resource-env-ref-name , resource-env-ref-type)&gt;<BR>&lt;!ATTLIST resource-env-ref  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The resource-env-ref element contains a declaration of a web application's
reference to an administered object associated with a resource
in the web application's environment.  It consists of an optional
description, the resource environment reference name, and an
indication of the resource environment reference type expected by
the web application code.

Used in: web-app

Example:

&amp;lt;resource-env-ref&amp;gt;
    &amp;lt;resource-env-ref-name&amp;gt;jms/StockQueue&amp;lt;/resource-env-ref-name&amp;gt;
    &amp;lt;resource-env-ref-type&amp;gt;javax.jms.Queue&amp;lt;/resource-env-ref-type&amp;gt;
&amp;lt;/resource-env-ref&amp;gt;

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "resource-env-ref-name"/>
				<Ref Element = "resource-env-ref-type"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "resource-env-ref-name">
		<dtdsource><![CDATA[
<BR>&lt;!--The resource-env-ref-name element specifies the name of a resourceenvironment reference; its value is the environment entry name used inthe web application code.  The name is a JNDI name relative to thejava:comp/env context and must be unique within a web application.Used in: resource-env-ref--&gt;<BR>&lt;!ELEMENT resource-env-ref-name (#PCDATA)&gt;<BR>&lt;!ATTLIST resource-env-ref-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The resource-env-ref-name element specifies the name of a resource
environment reference; its value is the environment entry name used in
the web application code.  The name is a JNDI name relative to the
java:comp/env context and must be unique within a web application.

Used in: resource-env-ref

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "resource-env-ref-type">
		<dtdsource><![CDATA[
<BR>&lt;!--The resource-env-ref-type element specifies the type of a resourceenvironment reference.  It is the fully qualified name of a Javalanguage class or interface.Used in: resource-env-ref--&gt;<BR>&lt;!ELEMENT resource-env-ref-type (#PCDATA)&gt;<BR>&lt;!ATTLIST resource-env-ref-type  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The resource-env-ref-type element specifies the type of a resource
environment reference.  It is the fully qualified name of a Java
language class or interface.

Used in: resource-env-ref

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "resource-ref">
		<dtdsource><![CDATA[
<BR>&lt;!--The resource-ref element contains a declaration of a web application'sreference to an external resource. It consists of an optionaldescription, the resource manager connection factory reference name,the indication of the resource manager connection factory typeexpected by the web application code, the type of authentication(Application or Container), and an optional specification of theshareability of connections obtained from the resource (Shareable orUnshareable).Used in: web-appExample:    <BR>&lt;resource-ref&gt;<BR>&lt;res-ref-name&gt;jdbc/EmployeeAppDB<BR>&lt;/res-ref-name&gt;<BR>&lt;res-type&gt;javax.sql.DataSource<BR>&lt;/res-type&gt;<BR>&lt;res-auth&gt;Container<BR>&lt;/res-auth&gt;<BR>&lt;res-sharing-scope&gt;Shareable<BR>&lt;/res-sharing-scope&gt;    <BR>&lt;/resource-ref&gt;--&gt;<BR>&lt;!ELEMENT resource-ref (description? , res-ref-name , res-type , res-auth , res-sharing-scope?)&gt;<BR>&lt;!ATTLIST resource-ref  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The resource-ref element contains a declaration of a web application's
reference to an external resource. It consists of an optional
description, the resource manager connection factory reference name,
the indication of the resource manager connection factory type
expected by the web application code, the type of authentication
(Application or Container), and an optional specification of the
shareability of connections obtained from the resource (Shareable or
Unshareable).

Used in: web-app

Example:

    &amp;lt;resource-ref&amp;gt;
	&amp;lt;res-ref-name&amp;gt;jdbc/EmployeeAppDB&amp;lt;/res-ref-name&amp;gt;
	&amp;lt;res-type&amp;gt;javax.sql.DataSource&amp;lt;/res-type&amp;gt;
	&amp;lt;res-auth&amp;gt;Container&amp;lt;/res-auth&amp;gt;
	&amp;lt;res-sharing-scope&amp;gt;Shareable&amp;lt;/res-sharing-scope&amp;gt;
    &amp;lt;/resource-ref&amp;gt;

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "res-ref-name"/>
				<Ref Element = "res-type"/>
				<Ref Element = "res-auth"/>
				<Ref Element = "res-sharing-scope" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "role-link">
		<dtdsource><![CDATA[
<BR>&lt;!--The role-link element is a reference to a defined security role. Therole-link element must contain the name of one of the security rolesdefined in the security-role elements.Used in: security-role-ref--&gt;<BR>&lt;!ELEMENT role-link (#PCDATA)&gt;<BR>&lt;!ATTLIST role-link  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The role-link element is a reference to a defined security role. The
role-link element must contain the name of one of the security roles
defined in the security-role elements.

Used in: security-role-ref

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "role-name">
		<dtdsource><![CDATA[
<BR>&lt;!--The role-name element contains the name of a security role.The name must conform to the lexical rules for an NMTOKEN.Used in: auth-constraint, run-as, security-role, security-role-ref--&gt;<BR>&lt;!ELEMENT role-name (#PCDATA)&gt;<BR>&lt;!ATTLIST role-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The role-name element contains the name of a security role.

The name must conform to the lexical rules for an NMTOKEN.

Used in: auth-constraint, run-as, security-role, security-role-ref

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "run-as">
		<dtdsource><![CDATA[
<BR>&lt;!--The run-as element specifies the run-as identity to be used for theexecution of the web application. It contains an optional description, andthe name of a security role.Used in: servlet--&gt;<BR>&lt;!ELEMENT run-as (description? , role-name)&gt;<BR>&lt;!ATTLIST run-as  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The run-as element specifies the run-as identity to be used for the
execution of the web application. It contains an optional description, and
the name of a security role.

Used in: servlet

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "role-name"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "security-constraint">
		<dtdsource><![CDATA[
<BR>&lt;!--The security-constraint element is used to associate securityconstraints with one or more web resource collectionsUsed in: web-app--&gt;<BR>&lt;!ELEMENT security-constraint (display-name? , web-resource-collection+ , auth-constraint? , user-data-constraint?)&gt;<BR>&lt;!ATTLIST security-constraint  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The security-constraint element is used to associate security
constraints with one or more web resource collections

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "display-name" Frequency = "Optional"/>
				<Ref Element = "web-resource-collection" Frequency = "OneOrMore"/>
				<Ref Element = "auth-constraint" Frequency = "Optional"/>
				<Ref Element = "user-data-constraint" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "security-role">
		<dtdsource><![CDATA[
<BR>&lt;!--The security-role element contains the definition of a securityrole. The definition consists of an optional description of thesecurity role, and the security role name.Used in: web-appExample:    <BR>&lt;security-role&gt;<BR>&lt;description&gt;    This role includes all employees who are authorized    to access the employee service application.<BR>&lt;/description&gt;<BR>&lt;role-name&gt;employee<BR>&lt;/role-name&gt;    <BR>&lt;/security-role&gt;--&gt;<BR>&lt;!ELEMENT security-role (description? , role-name)&gt;<BR>&lt;!ATTLIST security-role  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The security-role element contains the definition of a security
role. The definition consists of an optional description of the
security role, and the security role name.

Used in: web-app

Example:

    &amp;lt;security-role&amp;gt;
	&amp;lt;description&amp;gt;
	    This role includes all employees who are authorized
	    to access the employee service application.
	&amp;lt;/description&amp;gt;
	&amp;lt;role-name&amp;gt;employee&amp;lt;/role-name&amp;gt;
    &amp;lt;/security-role&amp;gt;

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "role-name"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "security-role-ref">
		<dtdsource><![CDATA[
<BR>&lt;!--The security-role-ref element contains the declaration of a securityrole reference in the web application's code. The declaration consistsof an optional description, the security role name used in the code,and an optional link to a security role. If the security role is notspecified, the Deployer must choose an appropriate security role.The value of the role-name element must be the String used as theparameter to the EJBContext.isCallerInRole(String roleName) methodor the HttpServletRequest.isUserInRole(String role) method.Used in: servlet--&gt;<BR>&lt;!ELEMENT security-role-ref (description? , role-name , role-link?)&gt;<BR>&lt;!ATTLIST security-role-ref  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The security-role-ref element contains the declaration of a security
role reference in the web application's code. The declaration consists
of an optional description, the security role name used in the code,
and an optional link to a security role. If the security role is not
specified, the Deployer must choose an appropriate security role.

The value of the role-name element must be the String used as the
parameter to the EJBContext.isCallerInRole(String roleName) method
or the HttpServletRequest.isUserInRole(String role) method.

Used in: servlet


		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "role-name"/>
				<Ref Element = "role-link" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "servlet">
		<dtdsource><![CDATA[
<BR>&lt;!--The servlet element contains the declarative data of aservlet. If a jsp-file is specified and the load-on-startup element ispresent, then the JSP should be precompiled and loaded.Used in: web-app--&gt;<BR>&lt;!ELEMENT servlet (icon? , servlet-name , display-name? , description? , (servlet-class | jsp-file) , init-param* , load-on-startup? , run-as? , security-role-ref*)&gt;<BR>&lt;!ATTLIST servlet  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The servlet element contains the declarative data of a
servlet. If a jsp-file is specified and the load-on-startup element is
present, then the JSP should be precompiled and loaded.

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "icon" Frequency = "Optional"/>
				<Ref Element = "servlet-name"/>
				<Ref Element = "display-name" Frequency = "Optional"/>
				<Ref Element = "description" Frequency = "Optional"/>
				<Choice>
					<Ref Element = "servlet-class"/>
					<Ref Element = "jsp-file"/>
				</Choice>
				<Ref Element = "init-param" Frequency = "ZeroOrMore"/>
				<Ref Element = "load-on-startup" Frequency = "Optional"/>
				<Ref Element = "run-as" Frequency = "Optional"/>
				<Ref Element = "security-role-ref" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "servlet-class">
		<dtdsource><![CDATA[
<BR>&lt;!--The servlet-class element contains the fully qualified class nameof the servlet.Used in: servlet--&gt;<BR>&lt;!ELEMENT servlet-class (#PCDATA)&gt;<BR>&lt;!ATTLIST servlet-class  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The servlet-class element contains the fully qualified class name
of the servlet.

Used in: servlet

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "servlet-mapping">
		<dtdsource><![CDATA[
<BR>&lt;!--The servlet-mapping element defines a mapping between a servletand a url patternUsed in: web-app--&gt;<BR>&lt;!ELEMENT servlet-mapping (servlet-name , url-pattern)&gt;<BR>&lt;!ATTLIST servlet-mapping  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The servlet-mapping element defines a mapping between a servlet
and a url pattern

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "servlet-name"/>
				<Ref Element = "url-pattern"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "servlet-name">
		<dtdsource><![CDATA[
<BR>&lt;!--The servlet-name element contains the canonical name of theservlet. Each servlet name is unique within the web application.Used in: filter-mapping, servlet, servlet-mapping--&gt;<BR>&lt;!ELEMENT servlet-name (#PCDATA)&gt;<BR>&lt;!ATTLIST servlet-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The servlet-name element contains the canonical name of the
servlet. Each servlet name is unique within the web application.

Used in: filter-mapping, servlet, servlet-mapping

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "session-config">
		<dtdsource><![CDATA[
<BR>&lt;!--The session-config element defines the session parameters forthis web application.Used in: web-app--&gt;<BR>&lt;!ELEMENT session-config (session-timeout?)&gt;<BR>&lt;!ATTLIST session-config  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The session-config element defines the session parameters for
this web application.

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "session-timeout" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "session-timeout">
		<dtdsource><![CDATA[
<BR>&lt;!--The session-timeout element defines the default session timeoutinterval for all sessions created in this web application. Thespecified timeout must be expressed in a whole number of minutes.If the timeout is 0 or less, the container ensures the defaultbehaviour of sessions is never to time out.Used in: session-config--&gt;<BR>&lt;!ELEMENT session-timeout (#PCDATA)&gt;<BR>&lt;!ATTLIST session-timeout  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The session-timeout element defines the default session timeout
interval for all sessions created in this web application. The
specified timeout must be expressed in a whole number of minutes.
If the timeout is 0 or less, the container ensures the default
behaviour of sessions is never to time out.

Used in: session-config

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "small-icon">
		<dtdsource><![CDATA[
<BR>&lt;!--The small-icon element contains the name of a filecontaining a small (16 x 16) icon image. The filename is a relative path within the web application'swar file.The image may be either in the JPEG or GIF format.The icon can be used by tools.Used in: iconExample:<BR>&lt;small-icon&gt;employee-service-icon16x16.jpg<BR>&lt;/small-icon&gt;--&gt;<BR>&lt;!ELEMENT small-icon (#PCDATA)&gt;<BR>&lt;!ATTLIST small-icon  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The small-icon element contains the name of a file
containing a small (16 x 16) icon image. The file
name is a relative path within the web application's
war file.

The image may be either in the JPEG or GIF format.
The icon can be used by tools.

Used in: icon

Example:

&amp;lt;small-icon&amp;gt;employee-service-icon16x16.jpg&amp;lt;/small-icon&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "taglib">
		<dtdsource><![CDATA[
<BR>&lt;!--The taglib element is used to describe a JSP tag library.Used in: web-app--&gt;<BR>&lt;!ELEMENT taglib (taglib-uri , taglib-location)&gt;<BR>&lt;!ATTLIST taglib  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The taglib element is used to describe a JSP tag library.

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "taglib-uri"/>
				<Ref Element = "taglib-location"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "taglib-location">
		<dtdsource><![CDATA[
<BR>&lt;!--the taglib-location element contains the location (as a resourcerelative to the root of the web application) where to find the TagLibary Description file for the tag library.Used in: taglib--&gt;<BR>&lt;!ELEMENT taglib-location (#PCDATA)&gt;<BR>&lt;!ATTLIST taglib-location  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
the taglib-location element contains the location (as a resource
relative to the root of the web application) where to find the Tag
Libary Description file for the tag library.

Used in: taglib

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "taglib-uri">
		<dtdsource><![CDATA[
<BR>&lt;!--The taglib-uri element describes a URI, relative to the locationof the web.xml document, identifying a Tag Library used in the WebApplication.Used in: taglib--&gt;<BR>&lt;!ELEMENT taglib-uri (#PCDATA)&gt;<BR>&lt;!ATTLIST taglib-uri  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The taglib-uri element describes a URI, relative to the location
of the web.xml document, identifying a Tag Library used in the Web
Application.

Used in: taglib

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "transport-guarantee">
		<dtdsource><![CDATA[
<BR>&lt;!--The transport-guarantee element specifies that the communicationbetween client and server should be NONE, INTEGRAL, orCONFIDENTIAL. NONE means that the application does not require anytransport guarantees. A value of INTEGRAL means that the applicationrequires that the data sent between the client and server be sent insuch a way that it can't be changed in transit. CONFIDENTIAL meansthat the application requires that the data be transmitted in afashion that prevents other entities from observing the contents ofthe transmission. In most cases, the presence of the INTEGRAL orCONFIDENTIAL flag will indicate that the use of SSL is required.Used in: user-data-constraint--&gt;<BR>&lt;!ELEMENT transport-guarantee (#PCDATA)&gt;<BR>&lt;!ATTLIST transport-guarantee  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The transport-guarantee element specifies that the communication
between client and server should be NONE, INTEGRAL, or
CONFIDENTIAL. NONE means that the application does not require any
transport guarantees. A value of INTEGRAL means that the application
requires that the data sent between the client and server be sent in
such a way that it can't be changed in transit. CONFIDENTIAL means
that the application requires that the data be transmitted in a
fashion that prevents other entities from observing the contents of
the transmission. In most cases, the presence of the INTEGRAL or
CONFIDENTIAL flag will indicate that the use of SSL is required.

Used in: user-data-constraint

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "url-pattern">
		<dtdsource><![CDATA[
<BR>&lt;!--The url-pattern element contains the url pattern of the mapping. Mustfollow the rules specified in Section 11.2 of the Servlet APISpecification.Used in: filter-mapping, servlet-mapping, web-resource-collection--&gt;<BR>&lt;!ELEMENT url-pattern (#PCDATA)&gt;<BR>&lt;!ATTLIST url-pattern  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The url-pattern element contains the url pattern of the mapping. Must
follow the rules specified in Section 11.2 of the Servlet API
Specification.

Used in: filter-mapping, servlet-mapping, web-resource-collection

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "user-data-constraint">
		<dtdsource><![CDATA[
<BR>&lt;!--The user-data-constraint element is used to indicate how datacommunicated between the client and container should be protected.Used in: security-constraint--&gt;<BR>&lt;!ELEMENT user-data-constraint (description? , transport-guarantee)&gt;<BR>&lt;!ATTLIST user-data-constraint  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The user-data-constraint element is used to indicate how data
communicated between the client and container should be protected.

Used in: security-constraint

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "transport-guarantee"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "web-resource-collection">
		<dtdsource><![CDATA[
<BR>&lt;!--The web-resource-collection element is used to identify a subsetof the resources and HTTP methods on those resources within a webapplication to which a security constraint applies. If no HTTP methodsare specified, then the security constraint applies to all HTTPmethods.Used in: security-constraint--&gt;<BR>&lt;!ELEMENT web-resource-collection (web-resource-name , description? , url-pattern* , http-method*)&gt;<BR>&lt;!ATTLIST web-resource-collection  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The web-resource-collection element is used to identify a subset
of the resources and HTTP methods on those resources within a web
application to which a security constraint applies. If no HTTP methods
are specified, then the security constraint applies to all HTTP
methods.

Used in: security-constraint

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "web-resource-name"/>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "url-pattern" Frequency = "ZeroOrMore"/>
				<Ref Element = "http-method" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "web-resource-name">
		<dtdsource><![CDATA[
<BR>&lt;!--The web-resource-name contains the name of this web resourcecollection.Used in: web-resource-collection--&gt;<BR>&lt;!ELEMENT web-resource-name (#PCDATA)&gt;<BR>&lt;!ATTLIST web-resource-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The web-resource-name contains the name of this web resource
collection.

Used in: web-resource-collection

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "welcome-file">
		<dtdsource><![CDATA[
<BR>&lt;!--The welcome-file element contains file name to use as a defaultwelcome file, such as index.htmlUsed in: welcome-file-list--&gt;<BR>&lt;!ELEMENT welcome-file (#PCDATA)&gt;<BR>&lt;!ATTLIST welcome-file  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The welcome-file element contains file name to use as a default
welcome file, such as index.html

Used in: welcome-file-list

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "welcome-file-list">
		<dtdsource><![CDATA[
<BR>&lt;!--The welcome-file-list contains an ordered list of welcome fileselements.Used in: web-app--&gt;<BR>&lt;!ELEMENT welcome-file-list (welcome-file+)&gt;<BR>&lt;!ATTLIST welcome-file-list  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The welcome-file-list contains an ordered list of welcome files
elements.

Used in: web-app

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "welcome-file" Frequency = "OneOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID">
			<DDML:Doc>
The ID mechanism is to allow tools that produce additional deployment
information (i.e., information beyond the standard deployment
descriptor information) to store the non-standard information in a
separate file, and easily refer from these tool-specific files to the
information in the standard deployment descriptor.

Tools are not allowed to add the non-standard information into the
standard deployment descriptor.

			</DDML:Doc>
		</AttDef>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
	</ElementDecl>
</DocumentDef>