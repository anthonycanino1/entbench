<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by XML Authority. DDML version 1.0-->
<DocumentDef name = "security_config.dtd"
	 xmlns = "http://www.purl.org/NET/ddml/v1"
	 xmlns:DDML = "http://www.purl.org/NET/ddml/v1" Version = "1.0">
	<dtdsource><![CDATA[
<BR>&lt;?xml encoding='UTF-8' ?&gt;<BR><BR>&lt;!-- This is the XML DTD for the JBoss 3.0 security policy configuration.The DOCTYPE is:  <BR>&lt;!DOCTYPE policy PUBLIC      &quot;-//JBoss//DTD JBOSS Security Config 3.0//EN&quot;      &quot;http://www.jboss.org/j2ee/dtd/security_config.dtd&quot;&gt;$Id: security_config.dtd,v 1.2 2002/06/27 19:40:33 starksm Exp $$Revision: 1.2 $The outline of the application-policy is:<BR>&lt;policy&gt; <BR>&lt;application-policy name=&quot;security-domain-name&quot;&gt;  <BR>&lt;authentication&gt;    <BR>&lt;login-module code=&quot;login.module1.class.name&quot; flag=&quot;control_flag&quot;&gt;      <BR>&lt;module-option name = &quot;option1-name&quot;&gt;option1-value<BR>&lt;/module-option&gt;      <BR>&lt;module-option name = &quot;option2-name&quot;&gt;option2-value<BR>&lt;/module-option&gt;      ...    <BR>&lt;/login-module&gt;    <BR>&lt;login-module code=&quot;login.module2.class.name&quot; flag=&quot;control_flag&quot;&gt;      ...    <BR>&lt;/login-module&gt;    ...  <BR>&lt;/authentication&gt; <BR>&lt;/application-policy&gt;<BR>&lt;/policy&gt;--&gt;<BR>&lt;!-- The root element of the security policy configuration --&gt;<BR>&lt;!ELEMENT policy (application-policy+)&gt;<BR>&lt;!-- An application-policy defines the security configuration for an application domain. Currentlythis consists of only the login module configurations specified in the authentication --&gt;<BR>&lt;!ELEMENT application-policy (authentication)&gt;<BR>&lt;!-- The application-policy name attribute gives the name of the security domain.--&gt;<BR>&lt;!ATTLIST application-policy name CDATA  #REQUIRED&gt;<BR>&lt;!-- The authentication element contains the login module stack configuration. Eachlogin module configuration is specified using a login-module element.--&gt;<BR>&lt;!ELEMENT authentication (login-module+)&gt;<BR>&lt;!-- The login-module element defines a JAAS login module configuration entry. Eachentry must have a code and flag attribute along with zero or more login module optionsspecified via the module-option element.--&gt;<BR>&lt;!ELEMENT login-module (module-option*)&gt;<BR>&lt;!-- The flag attribute controls how a login module participates in the overall authentication proceedure.Required     - The LoginModule is required to succeed.If it succeeds or fails, authentication still continuesto proceed down the LoginModule list.Requisite    - The LoginModule is required to succeed.If it succeeds, authentication continues down theLoginModule list.  If it fails,control immediately returns to the application(authentication does not proceed down theLoginModule list).Sufficient   - The LoginModule is not required tosucceed.  If it does succeed, control immediatelyreturns to the application (authentication does notproceed down the LoginModule list).If it fails, authentication continues down theLoginModule list.Optional     - The LoginModule is not required tosucceed.  If it succeeds or fails,authentication still continues to proceed down theLoginModule list.The overall authentication succeeds only if all required and requisite LoginModules succeed. If a sufficientLoginModule is configured and succeeds, then only the required and requisite LoginModules prior to thatsufficient LoginModule need to have succeeded for the overall authentication to succeed. If no required orrequisite LoginModules are configured for an application, then at least one sufficient or optional LoginModulemust succeed. --&gt;<BR>&lt;!ATTLIST login-module flag  (required | requisite | sufficient | optional )  #REQUIRED&gt;<BR>&lt;!-- The code attribute gives the fully qualifed class name of the javax.security.auth.spi.LoginModuleinterface implementation for the login module.--&gt;<BR>&lt;!ATTLIST login-module code CDATA  #REQUIRED&gt;<BR>&lt;!-- A module option defines a name, value pair of strings that are passed to a LoginModule when itis initialized during the login proceedure. The name attribute defines the option name while theelement value is the option string value.--&gt;<BR>&lt;!ELEMENT module-option (#PCDATA)&gt;<BR>&lt;!-- The name attribute specifies the name of the login module option.--&gt;<BR>&lt;!ATTLIST module-option name CDATA  #REQUIRED&gt;]]>

	</dtdsource>
	<ElementDecl Name = "policy">
		<dtdsource><![CDATA[
<BR>&lt;!ELEMENT policy (application-policy+)&gt;]]>

		</dtdsource>
		<Model>
			<Seq>
				<Ref Element = "application-policy" Frequency = "OneOrMore"/>
			</Seq>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "application-policy">
		<dtdsource><![CDATA[
<BR>&lt;!-- An application-policy defines the security configuration for an application domain. Currentlythis consists of only the login module configurations specified in the authentication --&gt;<BR>&lt;!ELEMENT application-policy (authentication)&gt;<BR>&lt;!-- The application-policy name attribute gives the name of the security domain.--&gt;<BR>&lt;!ATTLIST application-policy name CDATA  #REQUIRED&gt;]]>

		</dtdsource>
		<DDML:Doc> An application-policy defines the security configuration for an application domain. Currently
this consists of only the login module configurations specified in the authentication 
		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "authentication"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "name" Required = "Yes">
				<DDML:Doc> The application-policy name attribute gives the name of the security domain.

				</DDML:Doc>
			</AttDef>
		</AttGroup>
		<AttDef Name = "name" Required = "Yes">
			<DDML:Doc> The application-policy name attribute gives the name of the security domain.

			</DDML:Doc>
		</AttDef>
	</ElementDecl>
	<ElementDecl Name = "authentication">
		<dtdsource><![CDATA[
<BR>&lt;!-- The authentication element contains the login module stack configuration. Eachlogin module configuration is specified using a login-module element.--&gt;<BR>&lt;!ELEMENT authentication (login-module+)&gt;]]>

		</dtdsource>
		<DDML:Doc> The authentication element contains the login module stack configuration. Each
login module configuration is specified using a login-module element.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "login-module" Frequency = "OneOrMore"/>
			</Seq>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "login-module">
		<dtdsource><![CDATA[
<BR>&lt;!-- The login-module element defines a JAAS login module configuration entry. Eachentry must have a code and flag attribute along with zero or more login module optionsspecified via the module-option element.--&gt;<BR>&lt;!ELEMENT login-module (module-option*)&gt;<BR>&lt;!-- The flag attribute controls how a login module participates in the overall authentication proceedure.Required     - The LoginModule is required to succeed.If it succeeds or fails, authentication still continuesto proceed down the LoginModule list.Requisite    - The LoginModule is required to succeed.If it succeeds, authentication continues down theLoginModule list.  If it fails,control immediately returns to the application(authentication does not proceed down theLoginModule list).Sufficient   - The LoginModule is not required tosucceed.  If it does succeed, control immediatelyreturns to the application (authentication does notproceed down the LoginModule list).If it fails, authentication continues down theLoginModule list.Optional     - The LoginModule is not required tosucceed.  If it succeeds or fails,authentication still continues to proceed down theLoginModule list.The overall authentication succeeds only if all required and requisite LoginModules succeed. If a sufficientLoginModule is configured and succeeds, then only the required and requisite LoginModules prior to thatsufficient LoginModule need to have succeeded for the overall authentication to succeed. If no required orrequisite LoginModules are configured for an application, then at least one sufficient or optional LoginModulemust succeed. --&gt;<BR>&lt;!ATTLIST login-module flag  (required | requisite | sufficient | optional )  #REQUIRED&gt;<BR>&lt;!-- The code attribute gives the fully qualifed class name of the javax.security.auth.spi.LoginModuleinterface implementation for the login module.--&gt;<BR>&lt;!ATTLIST login-module code CDATA  #REQUIRED&gt;]]>

		</dtdsource>
		<DDML:Doc> The login-module element defines a JAAS login module configuration entry. Each
entry must have a code and flag attribute along with zero or more login module options
specified via the module-option element.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "module-option" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "flag" Type = "Enumeration" Required = "Yes">
				<DDML:Doc> The flag attribute controls how a login module participates in the overall authentication proceedure.
Required     - The LoginModule is required to succeed.
			If it succeeds or fails, authentication still continues
			to proceed down the LoginModule list.

Requisite    - The LoginModule is required to succeed.
			If it succeeds, authentication continues down the
			LoginModule list.  If it fails,
			control immediately returns to the application
			(authentication does not proceed down the
			LoginModule list).

Sufficient   - The LoginModule is not required to
			succeed.  If it does succeed, control immediately
			returns to the application (authentication does not
			proceed down the LoginModule list).
			If it fails, authentication continues down the
			LoginModule list.

Optional     - The LoginModule is not required to
			succeed.  If it succeeds or fails,
			authentication still continues to proceed down the
			LoginModule list.

The overall authentication succeeds only if all required and requisite LoginModules succeed. If a sufficient
LoginModule is configured and succeeds, then only the required and requisite LoginModules prior to that
sufficient LoginModule need to have succeeded for the overall authentication to succeed. If no required or
requisite LoginModules are configured for an application, then at least one sufficient or optional LoginModule
must succeed. 

				</DDML:Doc>
				<Enumeration>
					<EnumerationValue Value = "required"/>
					<EnumerationValue Value = "requisite"/>
					<EnumerationValue Value = "sufficient"/>
					<EnumerationValue Value = "optional"/>
				</Enumeration>
			</AttDef>
			<AttDef Name = "code" Required = "Yes">
				<DDML:Doc> The code attribute gives the fully qualifed class name of the javax.security.auth.spi.LoginModule
interface implementation for the login module.

				</DDML:Doc>
			</AttDef>
		</AttGroup>
		<AttDef Name = "flag" Type = "Enumeration" Required = "Yes">
			<DDML:Doc> The flag attribute controls how a login module participates in the overall authentication proceedure.
Required     - The LoginModule is required to succeed.
			If it succeeds or fails, authentication still continues
			to proceed down the LoginModule list.

Requisite    - The LoginModule is required to succeed.
			If it succeeds, authentication continues down the
			LoginModule list.  If it fails,
			control immediately returns to the application
			(authentication does not proceed down the
			LoginModule list).

Sufficient   - The LoginModule is not required to
			succeed.  If it does succeed, control immediately
			returns to the application (authentication does not
			proceed down the LoginModule list).
			If it fails, authentication continues down the
			LoginModule list.

Optional     - The LoginModule is not required to
			succeed.  If it succeeds or fails,
			authentication still continues to proceed down the
			LoginModule list.

The overall authentication succeeds only if all required and requisite LoginModules succeed. If a sufficient
LoginModule is configured and succeeds, then only the required and requisite LoginModules prior to that
sufficient LoginModule need to have succeeded for the overall authentication to succeed. If no required or
requisite LoginModules are configured for an application, then at least one sufficient or optional LoginModule
must succeed. 

			</DDML:Doc>
			<Enumeration>
				<EnumerationValue Value = "required"/>
				<EnumerationValue Value = "requisite"/>
				<EnumerationValue Value = "sufficient"/>
				<EnumerationValue Value = "optional"/>
			</Enumeration>
		</AttDef>
		<AttDef Name = "code" Required = "Yes">
			<DDML:Doc> The code attribute gives the fully qualifed class name of the javax.security.auth.spi.LoginModule
interface implementation for the login module.

			</DDML:Doc>
		</AttDef>
	</ElementDecl>
	<ElementDecl Name = "module-option">
		<dtdsource><![CDATA[
<BR>&lt;!-- A module option defines a name, value pair of strings that are passed to a LoginModule when itis initialized during the login proceedure. The name attribute defines the option name while theelement value is the option string value.--&gt;<BR>&lt;!ELEMENT module-option (#PCDATA)&gt;<BR>&lt;!-- The name attribute specifies the name of the login module option.--&gt;<BR>&lt;!ATTLIST module-option name CDATA  #REQUIRED&gt;]]>

		</dtdsource>
		<DDML:Doc> A module option defines a name, value pair of strings that are passed to a LoginModule when it
is initialized during the login proceedure. The name attribute defines the option name while the
element value is the option string value.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "name" Required = "Yes">
				<DDML:Doc> The name attribute specifies the name of the login module option.

				</DDML:Doc>
			</AttDef>
		</AttGroup>
		<AttDef Name = "name" Required = "Yes">
			<DDML:Doc> The name attribute specifies the name of the login module option.

			</DDML:Doc>
		</AttDef>
	</ElementDecl>
</DocumentDef>