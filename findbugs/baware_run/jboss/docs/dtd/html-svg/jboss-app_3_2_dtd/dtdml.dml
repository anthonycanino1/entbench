<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by XML Authority. DDML version 1.0-->
<DocumentDef name = "jboss-app_3_2.dtd"
	 xmlns = "http://www.purl.org/NET/ddml/v1"
	 xmlns:DDML = "http://www.purl.org/NET/ddml/v1" Version = "1.0">
	<dtdsource><![CDATA[
<BR>&lt;?xml encoding='UTF-8' ?&gt;<BR><BR>&lt;!-- The JBoss 3.2.x specific elements for ears.$Id: jboss-app_3_2.dtd,v 1.1.2.1 2003/03/19 16:46:44 starksm Exp $DOCTYPE jboss-app    PUBLIC &quot;-//JBoss//DTD J2EE Application 1.3V2//EN&quot;    &quot;http://www.jboss.org/j2ee/dtd/jboss-app_3_2.dtd&quot;--&gt;<BR>&lt;!-- The jboss-app element is the root element.--&gt;<BR>&lt;!ELEMENT jboss-app (loader-repository? , module*)&gt;<BR>&lt;!-- The loader-repository specifies the name of the UnifiedLoaderRepository   MBean to use for the ear to provide ear level scoping of classes deployed   in the ear. It is a unique JMX ObjectName string. It may also specify   an arbitrary configuration by including a loader-repository-config element.Examples:   <BR>&lt;loader-repository&gt;jboss.test:loader=cts-cmp2v1-sar.ear<BR>&lt;/loader-repository&gt;   <BR>&lt;loader-repository loaderRepositoryClass='dot.com.LoaderRepository'&gt;      dot.com:loader=unique-archive-name      <BR>&lt;loader-repository-config configParserClass='dot.com.LoaderParser'&gt;         java2ParentDelegaton=true      <BR>&lt;/loader-repository-config&gt;   <BR>&lt;/loader-repository&gt;--&gt;<BR>&lt;!ELEMENT loader-repository (#PCDATA | loader-repository-config)*&gt;<BR>&lt;!-- The loaderRepositoryClass attribute gives the classname of theorg.jboss.mx.loading.LoaderRepository implementation.--&gt;<BR>&lt;!ATTLIST loader-repository loaderRepositoryClass CDATA  #IMPLIED&gt;<BR>&lt;!-- The loader-repository-config element specifies any arbitrary configurationfragment for use in configuring the loader-repository instance. The actualcontent of this element is specific to the loaderRepositoryClass and thecode parsing the element.--&gt;<BR>&lt;!ELEMENT loader-repository-config (#PCDATA)&gt;<BR>&lt;!-- The configParserClass attribute gives the classname of theorg.jboss.mx.loading.LoaderRepositoryFactory.LoaderRepositoryConfigParserimplementation to use to parse the loader-repository-config content.--&gt;<BR>&lt;!ATTLIST loader-repository-config configParserClass CDATA  #IMPLIED&gt;<BR>&lt;!-- The module element is used to specify a jboss specific module archive.--&gt;<BR>&lt;!ELEMENT module (service)&gt;<BR>&lt;!-- The service element specifies a service archive (SAR) to deploy.Example:   <BR>&lt;module&gt;      <BR>&lt;service&gt;external.sar<BR>&lt;/service&gt;   <BR>&lt;/module&gt;--&gt;<BR>&lt;!ELEMENT service (#PCDATA)&gt;]]>

	</dtdsource>
	<ElementDecl Name = "jboss-app">
		<dtdsource><![CDATA[
<BR>&lt;!ELEMENT jboss-app (loader-repository? , module*)&gt;]]>

		</dtdsource>
		<Model>
			<Seq>
				<Ref Element = "loader-repository" Frequency = "Optional"/>
				<Ref Element = "module" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "loader-repository">
		<dtdsource><![CDATA[
<BR>&lt;!-- The loader-repository specifies the name of the UnifiedLoaderRepository   MBean to use for the ear to provide ear level scoping of classes deployed   in the ear. It is a unique JMX ObjectName string. It may also specify   an arbitrary configuration by including a loader-repository-config element.Examples:   <BR>&lt;loader-repository&gt;jboss.test:loader=cts-cmp2v1-sar.ear<BR>&lt;/loader-repository&gt;   <BR>&lt;loader-repository loaderRepositoryClass='dot.com.LoaderRepository'&gt;      dot.com:loader=unique-archive-name      <BR>&lt;loader-repository-config configParserClass='dot.com.LoaderParser'&gt;         java2ParentDelegaton=true      <BR>&lt;/loader-repository-config&gt;   <BR>&lt;/loader-repository&gt;--&gt;<BR>&lt;!ELEMENT loader-repository (#PCDATA | loader-repository-config)*&gt;<BR>&lt;!-- The loaderRepositoryClass attribute gives the classname of theorg.jboss.mx.loading.LoaderRepository implementation.--&gt;<BR>&lt;!ATTLIST loader-repository loaderRepositoryClass CDATA  #IMPLIED&gt;]]>

		</dtdsource>
		<DDML:Doc> The loader-repository specifies the name of the UnifiedLoaderRepository
   MBean to use for the ear to provide ear level scoping of classes deployed
   in the ear. It is a unique JMX ObjectName string. It may also specify
   an arbitrary configuration by including a loader-repository-config element.

Examples:
   &amp;lt;loader-repository&amp;gt;jboss.test:loader=cts-cmp2v1-sar.ear&amp;lt;/loader-repository&amp;gt;

   &amp;lt;loader-repository loaderRepositoryClass='dot.com.LoaderRepository'&amp;gt;
      dot.com:loader=unique-archive-name
      &amp;lt;loader-repository-config configParserClass='dot.com.LoaderParser'&amp;gt;
         java2ParentDelegaton=true
      &amp;lt;/loader-repository-config&amp;gt;
   &amp;lt;/loader-repository&amp;gt;

		</DDML:Doc>
		<Model>
			<Mixed>
				<Ref Element = "loader-repository-config"/>
			</Mixed>
		</Model>
		<AttGroup>
			<AttDef Name = "loaderRepositoryClass">
				<DDML:Doc> The loaderRepositoryClass attribute gives the classname of the
org.jboss.mx.loading.LoaderRepository implementation.

				</DDML:Doc>
			</AttDef>
		</AttGroup>
		<AttDef Name = "loaderRepositoryClass">
			<DDML:Doc> The loaderRepositoryClass attribute gives the classname of the
org.jboss.mx.loading.LoaderRepository implementation.

			</DDML:Doc>
		</AttDef>
	</ElementDecl>
	<ElementDecl Name = "loader-repository-config">
		<dtdsource><![CDATA[
<BR>&lt;!-- The loader-repository-config element specifies any arbitrary configurationfragment for use in configuring the loader-repository instance. The actualcontent of this element is specific to the loaderRepositoryClass and thecode parsing the element.--&gt;<BR>&lt;!ELEMENT loader-repository-config (#PCDATA)&gt;<BR>&lt;!-- The configParserClass attribute gives the classname of theorg.jboss.mx.loading.LoaderRepositoryFactory.LoaderRepositoryConfigParserimplementation to use to parse the loader-repository-config content.--&gt;<BR>&lt;!ATTLIST loader-repository-config configParserClass CDATA  #IMPLIED&gt;]]>

		</dtdsource>
		<DDML:Doc> The loader-repository-config element specifies any arbitrary configuration
fragment for use in configuring the loader-repository instance. The actual
content of this element is specific to the loaderRepositoryClass and the
code parsing the element.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "configParserClass">
				<DDML:Doc> The configParserClass attribute gives the classname of the
org.jboss.mx.loading.LoaderRepositoryFactory.LoaderRepositoryConfigParser
implementation to use to parse the loader-repository-config content.

				</DDML:Doc>
			</AttDef>
		</AttGroup>
		<AttDef Name = "configParserClass">
			<DDML:Doc> The configParserClass attribute gives the classname of the
org.jboss.mx.loading.LoaderRepositoryFactory.LoaderRepositoryConfigParser
implementation to use to parse the loader-repository-config content.

			</DDML:Doc>
		</AttDef>
	</ElementDecl>
	<ElementDecl Name = "module">
		<dtdsource><![CDATA[
<BR>&lt;!-- The module element is used to specify a jboss specific module archive.--&gt;<BR>&lt;!ELEMENT module (service)&gt;]]>

		</dtdsource>
		<DDML:Doc> The module element is used to specify a jboss specific module archive.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "service"/>
			</Seq>
		</Model>
	</ElementDecl>
	<ElementDecl Name = "service">
		<dtdsource><![CDATA[
<BR>&lt;!-- The service element specifies a service archive (SAR) to deploy.Example:   <BR>&lt;module&gt;      <BR>&lt;service&gt;external.sar<BR>&lt;/service&gt;   <BR>&lt;/module&gt;--&gt;<BR>&lt;!ELEMENT service (#PCDATA)&gt;]]>

		</dtdsource>
		<DDML:Doc> The service element specifies a service archive (SAR) to deploy.

Example:
   &amp;lt;module&amp;gt;
      &amp;lt;service&amp;gt;external.sar&amp;lt;/service&amp;gt;
   &amp;lt;/module&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
	</ElementDecl>
</DocumentDef>