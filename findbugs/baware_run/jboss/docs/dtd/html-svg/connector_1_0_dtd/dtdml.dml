<?xml version = "1.0" encoding = "ISO-8859-1"?>
<!--Generated by XML Authority. DDML version 1.0-->
<DocumentDef name = "connector_1_0.dtd"
	 xmlns = "http://www.purl.org/NET/ddml/v1"
	 xmlns:DDML = "http://www.purl.org/NET/ddml/v1" Version = "1.0">
	<dtdsource><![CDATA[
<BR>&lt;?xml encoding='ISO-8859-1' ?&gt;<BR><BR>&lt;!--LONG NOTICE:English:Copyright © 2000 Sun Microsystems, Inc., 901 San Antonio Road, PaloAlto, California 94303, U.S.A. All rights reserved.Sun Microsystems, Inc. has intellectual property rights relating totechnology embodied in the product that is described in this document.In particular, and without limitation, these intellectual propertyrights may include one or more of the U.S. patents listed athttp://www.sun.com/patents and one or more additional patents or pendingpatent applications in the U.S. and in other countries.This document and the product to which it pertains are distributed underlicenses restricting their use, copying, distribution, anddecompilation. This Product or document may be reproduced but may not bechanged without prior written authorization of Sun and its licensors, ifany.Third-party software, including font technology, is copyrighted andlicensed from Sun suppliers.Sun,  Sun Microsystems,  the Sun logo,  Java,  JavaServer Pages,  JavaNaming and Directory Interface,  JDBC,  JDK,  JavaMail and  andEnterprise JavaBeans are trademarks or registered trademarks of SunMicrosystems, Inc. in the U.S. and other countries.Federal Acquisitions: Commercial Software - Government Users Subject toStandard License Terms and Conditions.DOCUMENTATION IS PROVIDED &quot;AS IS&quot; AND ALL EXPRESS OR IMPLIED CONDITIONS,REPRESENTATIONS AND WARRANTIES, INCLUDING ANY IMPLIED WARRANTY OFMERCHANTABILITY, FITNESS FOR FOR A PARTICULAR PURPOSE ORNON-INFRINGEMENT, ARE DISCLAIMED, EXCEPT TO THE EXTENT THAT SUCHDISCLAIMERS ARE HELD TO BE LEGALLY INVALID.French:Copyright © 2000 Sun Microsystems, Inc., 901 San Antonio Road, PaloAlto, California 94303, États-Unis. Tous droits réservés.Sun Microsystems, Inc. a les droits de propriété intellectuelsrelatants à la technologie incorporée dans le produit qui estdécrit dans ce document. En particulier, et sans la limitation, cesdroits de propriété intellectuels peuvent inclure un ou plus desbrevets américains énumérés à http://www.sun.com/patentset un ou les brevets plus supplémentaires ou les applications debrevet en attente dans les États - Unis et dans les autres pays.Ce produit ou document est protégé par un copyright etdistribué avec des licences qui en restreignent l'utilisation, lacopie, la distribution, et la décompilation. Ce produit sadocumention associe n peut être reproduite, par quelque moyen que cesoit, sans l'autorisation préalable et écrite de Sun et de sesbailleurs de licence, le cas échéant.Le logiciel détenu par des tiers, et qui comprend la technologierelative aux polices de caractères, est protégé par uncopyright et licencié par des fournisseurs de Sun.Sun,  Sun Microsystems,  le logo Sun,  Java,  JavaServer Pages,  JavaNaming and Directory Interface,  JDBC,  JDK,  JavaMail et  andEnterprise JavaBeans sont des marques de fabrique ou des marquesdéposées de Sun Microsystems, Inc. aux États-Unis et dansd'autres pays.LA DOCUMENTATION EST FOURNIE &quot;EN L'ÉTAT&quot; ET TOUTES AUTRES CONDITIONS,DECLARATIONS ET GARANTIES EXPRESSES OU TACITES SONT FORMELLEMENTEXCLUES, DANS LA MESURE AUTORISEE PAR LA LOI APPLICABLE, Y COMPRISNOTAMMENT TOUTE GARANTIE IMPLICITE RELATIVE A LA QUALITE MARCHANDE, AL'APTITUDE A UNE UTILISATION PARTICULIERE OU A L'ABSENCE DECONTREFAÇON.--&gt;<BR>&lt;!-- XML DTD for Resource Adapter deployment Descriptor 1.0 --&gt;<BR>&lt;!--The connector element is the root element of the deployment descriptor for the resource adapter. This element includes general information - vendor name, version, specification version supported, icon -  about the resource adapter module. It also includes information specific to the implementation of the resource adapter library as specified through the element resourceadapter.--&gt;<BR>&lt;!ELEMENT connector (display-name , description? , icon? , vendor-name , spec-version , eis-type , version , license? , resourceadapter)&gt;<BR>&lt;!ATTLIST connector  id ID  #IMPLIED &gt;<BR>&lt;!-- The element resourceadapter specifies information about the resourceadapter. The information includes fully-qualified names ofclass/interfaces required as part of the connector architecture specified contracts, level of transaction support provided, configurable properties for ManagedConnectionFactory instances, one or more authentication mechanisms supported and additional required security permissions.If there is no authentication-mechanism specified as part of resource adapterelement then the resource adapter does not support any standardsecurity authentication mechanisms as part of security contract.The application server ignores the security part of the system contracts in this case.--&gt;<BR>&lt;!ELEMENT resourceadapter (managedconnectionfactory-class , connectionfactory-interface , connectionfactory-impl-class , connection-interface , connection-impl-class , transaction-support , config-property* , authentication-mechanism* , reauthentication-support , security-permission*)&gt;<BR>&lt;!ATTLIST resourceadapter  id ID  #IMPLIED &gt;<BR>&lt;!--The element authentication-mechanism specifies an authentication mechanismsupported by the resource adapter. Note that this support is forthe resource adapter and not for the underlying EIS instance. Theoptional description specifies any resource adapter specific requirementfor the support of security contract and authentication mechanism.Note that BasicPassword mech-type should support the javax.resource.spi.security.PasswordCredential interface. The Kerbv5mech-type should support the javax.resource.spi.security.Generic-Credential interface.--&gt;<BR>&lt;!ELEMENT authentication-mechanism (description? , authentication-mechanism-type , credential-interface)&gt;<BR>&lt;!--The ID mechanism is to allow tools that produce additional deploymentinformation (beyond the standard deployment descriptor) to store thenon-standard information in a separate file and to refer to standarddeployment descriptor from these non-standard tools specific file.The connector specification does not allow the tools to add the non-standard information into the standard deployment descriptor.--&gt;<BR>&lt;!ATTLIST authentication-mechanism id ID  #IMPLIED&gt;<BR>&lt;!--The element credential-interface specifies the interface that theresource adapter implementation supports for the representationof the credentials. This element should be used by application serverto find out the Credential interface it should use as part of thesecurity contract.The possible values are:   <BR>&lt;credential-interface&gt;javax.resource.spi.security.PasswordCredential        <BR>&lt;/credential-interface&gt;   <BR>&lt;credential-interface&gt;javax.resource.spi.security.GenericCredential        <BR>&lt;/credential-interface&gt;--&gt;<BR>&lt;!ELEMENT credential-interface (#PCDATA)&gt;<BR>&lt;!ATTLIST credential-interface  id ID  #IMPLIED &gt;<BR>&lt;!--The element authentication-mechanism-type specifies type of an authenticationmechanism.The example values are:   <BR>&lt;authentication-mechanism-type&gt;BasicPassword<BR>&lt;/authentication-mechanism-type&gt;   <BR>&lt;authentication-mechanism-type&gt;Kerbv5<BR>&lt;/authentication-mechanism-type&gt;Any additional security mechanisms are outside the scope of the Connector architecture specification.--&gt;<BR>&lt;!ELEMENT authentication-mechanism-type (#PCDATA)&gt;<BR>&lt;!ATTLIST authentication-mechanism-type  id ID  #IMPLIED &gt;<BR>&lt;!-- The element connectionfactory-interface specifies the fully-qualifiedname of the ConnectionFactory interface supported by the resourceadapter. Example: <BR>&lt;connectionfactory-interface&gt;com.wombat.ConnectionFactory         <BR>&lt;/connectionfactory-interface&gt;OR<BR>&lt;connectionfactory-interface&gt;javax.resource.cci.ConnectionFactory         <BR>&lt;/connectionfactory-interface&gt;--&gt;<BR>&lt;!ELEMENT connectionfactory-interface (#PCDATA)&gt;<BR>&lt;!ATTLIST connectionfactory-interface  id ID  #IMPLIED &gt;<BR>&lt;!-- The element connectionfactory-impl-class specifies the fully-qualifiedname of the ConnectionFactory class that implements resource adapterspecific ConnectionFactory interface.Example: <BR>&lt;connectionfactory-impl-class&gt;com.wombat.ConnectionFactoryImpl         <BR>&lt;/connectionfactory-impl-class&gt;--&gt;<BR>&lt;!ELEMENT connectionfactory-impl-class (#PCDATA)&gt;<BR>&lt;!ATTLIST connectionfactory-impl-class  id ID  #IMPLIED &gt;<BR>&lt;!-- The element connection-interface specifies the fully-qualifiedname of the Connection interface supported by the resourceadapter.Example: <BR>&lt;connection-interface&gt;javax.resource.cci.Connection         <BR>&lt;/connection-interface&gt;--&gt;<BR>&lt;!ELEMENT connection-interface (#PCDATA)&gt;<BR>&lt;!ATTLIST connection-interface  id ID  #IMPLIED &gt;<BR>&lt;!-- The element connection-impl-class specifies the fully-qualifiedname of the Connection class that implements resource adapterspecific Connection interface.Example: <BR>&lt;connection-impl-class&gt;com.wombat.ConnectionImpl         <BR>&lt;/connection-impl-class&gt;--&gt;<BR>&lt;!ELEMENT connection-impl-class (#PCDATA)&gt;<BR>&lt;!ATTLIST connection-impl-class  id ID  #IMPLIED &gt;<BR>&lt;!--The element config-entry contains a declaration of a single configuration property for a ManagedConnectionFactory instance. Each ManagedConnectionFactory instance creates connections to a specific EIS instance based on the properties configured on the ManagedConnectionFactory instance. The configurable properties are specified only once in the deployment descriptor, even though a resource adapter can be used to configure multiple ManagedConnnection-Factory instances (that create connections to different instances ofthe same EIS).The declaration consists of an optional description, name, typeand an optional value of the configuration property. If the resourceadapter provider does not specify a value than the deployer isresponsible for providing a valid value for a configuration property.Any bounds or well-defined values of properties should be described in the description element.--&gt;<BR>&lt;!ELEMENT config-property (description? , config-property-name , config-property-type , config-property-value?)&gt;<BR>&lt;!ATTLIST config-property  id ID  #IMPLIED &gt;<BR>&lt;!-- The element config-property-name contains the name of a configuration property.Example: <BR>&lt;config-property-name&gt;ServerName<BR>&lt;/config-property-name&gt;The connector architecture defines a set of well-defined propertiesall of type java.lang.String. These are as follows:     <BR>&lt;config-property-name&gt;ServerName<BR>&lt;/config-property-name&gt;     <BR>&lt;config-property-name&gt;PortNumber<BR>&lt;/config-property-name&gt;     <BR>&lt;config-property-name&gt;UserName<BR>&lt;/config-property-name&gt;     <BR>&lt;config-property-name&gt;Password<BR>&lt;/config-property-name&gt;     <BR>&lt;config-property-name&gt;ConnectionURL<BR>&lt;/config-property-name&gt;A resource adapter provider can extend this property set to include properties specific to the resource adapter and its underlying EIS.--&gt;<BR>&lt;!ELEMENT config-property-name (#PCDATA)&gt;<BR>&lt;!ATTLIST config-property-name  id ID  #IMPLIED &gt;<BR>&lt;!-- The element config-property-type contains the fully qualified Javatype of a configuration property as required by ManagedConnection-Factory instance.The following are the legal values of config-property-type:   java.lang.Boolean, java.lang.String, java.lang.Integer,   java.lang.Double, java.lang.Byte, java.lang.Short,   java.lang.Long, java.lang.Float, java.lang.CharacterExample: <BR>&lt;config-property-type&gt;java.lang.String<BR>&lt;/config-property-type&gt;--&gt;<BR>&lt;!ELEMENT config-property-type (#PCDATA)&gt;<BR>&lt;!ATTLIST config-property-type  id ID  #IMPLIED &gt;<BR>&lt;!-- The element config-property-value contains the value of a configurationentry.Example: <BR>&lt;config-property-value&gt;WombatServer<BR>&lt;/config-property-value&gt;--&gt;<BR>&lt;!ELEMENT config-property-value (#PCDATA)&gt;<BR>&lt;!ATTLIST config-property-value  id ID  #IMPLIED &gt;<BR>&lt;!-- The element display-name contains a short name for the resource adapterthat is intended to be displayed by the tools --&gt;<BR>&lt;!ELEMENT display-name (#PCDATA)&gt;<BR>&lt;!ATTLIST display-name  id ID  #IMPLIED &gt;<BR>&lt;!-- The element description is used by resource adapter provider to providetext describing the parent element. The description element should includeany information that the resource provider wants to provide to thedeployer. Typically tools used by the consumer of resource adaptermodule will display the description when processing the parent element--&gt;<BR>&lt;!ELEMENT description (#PCDATA)&gt;<BR>&lt;!ATTLIST description  id ID  #IMPLIED &gt;<BR>&lt;!-- The element eis-type contains information about the type of theEIS. For example, the type of an EIS can be product name of EISindependent of any version info.This helps in identifying EIS instances that can be used withthis resource adapter.--&gt;<BR>&lt;!ELEMENT eis-type (#PCDATA)&gt;<BR>&lt;!ATTLIST eis-type  id ID  #IMPLIED &gt;<BR>&lt;!--The icon element contains a small icon and large icon elementwhich specify the URIs for a small and a large GIF or JPEG iconimage to represent the application in GUI.--&gt;<BR>&lt;!ELEMENT icon (small-icon? , large-icon?)&gt;<BR>&lt;!ATTLIST icon  id ID  #IMPLIED &gt;<BR>&lt;!--The large-icon element contains the name of a file containing an iconfor the resource adapter module. The file name is relative path withinthe resource adapter module. This file must be either in JPEG or GIFformat. The icon is used by tools to display information about theresource adapter module.Example:<BR>&lt;large-icon&gt;lib/images/wombatadapter_large.jpg<BR>&lt;/large-icon&gt;--&gt;<BR>&lt;!ELEMENT large-icon (#PCDATA)&gt;<BR>&lt;!ATTLIST large-icon  id ID  #IMPLIED &gt;<BR>&lt;!--The small-icon element contains the name of a file containing an iconfor the resource adapter module. The file name is relative path withinthe resource adapter module. This file must be either in JPEG or GIFformat. The icon is used by tools to display information about theresource adapter module.Example:<BR>&lt;small-icon&gt;lib/images/wombatadapter_small.jpg<BR>&lt;/small-icon&gt;--&gt;<BR>&lt;!ELEMENT small-icon (#PCDATA)&gt;<BR>&lt;!ATTLIST small-icon  id ID  #IMPLIED &gt;<BR>&lt;!-- The element managedconnectionfactory-class specifies the fully qualifiedname of the Java class that implements the javax.resource.spi.Managed-ConnectionFactory interface. This Java class is provided as part ofresource adapter's implementation of connector architecture specified contracts.Example:  <BR>&lt;managedconnectionfactory-class&gt;com.wombat.ManagedConnectionFactoryImpl  <BR>&lt;/managedconnectionfactory-class&gt;--&gt;<BR>&lt;!ELEMENT managedconnectionfactory-class (#PCDATA)&gt;<BR>&lt;!ATTLIST managedconnectionfactory-class  id ID  #IMPLIED &gt;<BR>&lt;!-- The element reauthentication-support specifies whether the resourceadapter implementation supports re-authentication of existing Managed-Connection instance. Note that this information is for the resourceadapter implementation and not for the underlying EIS instance.This element must be one of the following:        <BR>&lt;reauthentication-support&gt;true<BR>&lt;/reauthentication-support&gt;        <BR>&lt;reauthentication-support&gt;false<BR>&lt;/reauthentication-support&gt;--&gt;<BR>&lt;!ELEMENT reauthentication-support (#PCDATA)&gt;<BR>&lt;!ATTLIST reauthentication-support  id ID  #IMPLIED &gt;<BR>&lt;!-- The element license specifies licensing requirements for the resource adapter module. This element specifies whether a license is requiredto deploy and use this resource adapter, and an optional description of the licensing terms (examples: duration of license, number of connection restrictions).--&gt;<BR>&lt;!ELEMENT license (description? , license-required)&gt;<BR>&lt;!ATTLIST license  id ID  #IMPLIED &gt;<BR>&lt;!-- The element license-required specifies whether a license is required to deploy and use the resource adapter. This element must be one ofthe following:<BR>&lt;license-required&gt;true<BR>&lt;/license-required&gt;<BR>&lt;license-required&gt;false<BR>&lt;/license-required&gt;--&gt;<BR>&lt;!ELEMENT license-required (#PCDATA)&gt;<BR>&lt;!ATTLIST license-required  id ID  #IMPLIED &gt;<BR>&lt;!-- The element spec-version specifies the version of the connectorarchitecture specification that is supported by this resource adapter. This information enables deployer to configure the resourceadapter to support deployment and runtime requirements of thecorresponding connector architecture specification.Example:  <BR>&lt;spec-version&gt;1.0<BR>&lt;/spec-version&gt;--&gt;<BR>&lt;!ELEMENT spec-version (#PCDATA)&gt;<BR>&lt;!ATTLIST spec-version  id ID  #IMPLIED &gt;<BR>&lt;!-- The element security permission specifies a security permission that is required by the resource adapter code.The security permission listed in the deployment descriptor are ones that are different from those required by the default permission set as specified in the connector specification. The optional descriptioncan mention specific reason that resource adapter requires a givensecurity permission.--&gt;<BR>&lt;!ELEMENT security-permission (description? , security-permission-spec)&gt;<BR>&lt;!ATTLIST security-permission  id ID  #IMPLIED &gt;<BR>&lt;!--The element permission-spec specifies a security permission basedon the Security policy file syntax [reference: Java 2, Security  architecture specification]http://java.sun.com/products/jdk/1.3/docs/guide/security/PolicyFiles.html#FileSyntax--&gt;<BR>&lt;!ELEMENT security-permission-spec (#PCDATA)&gt;<BR>&lt;!ATTLIST security-permission-spec  id ID  #IMPLIED &gt;<BR>&lt;!-- The transaction-support element specifies the level of transactionsupport provided by the resource adapter. The value of transaction-support must be one of the following: <BR>&lt;transaction-support&gt;no_transaction<BR>&lt;/transaction-support&gt; <BR>&lt;transaction-support&gt;local_transaction<BR>&lt;/transaction-support&gt; <BR>&lt;transaction-support&gt;xa_transaction<BR>&lt;/transaction-support&gt;--&gt;<BR>&lt;!ELEMENT transaction-support (#PCDATA)&gt;<BR>&lt;!ATTLIST transaction-support  id ID  #IMPLIED &gt;<BR>&lt;!-- The element vendor-name specifies the name of resource adapter providervendor.Example:  <BR>&lt;vendor-name&gt;Wombat Corp.<BR>&lt;/vendor-name&gt;--&gt;<BR>&lt;!ELEMENT vendor-name (#PCDATA)&gt;<BR>&lt;!ATTLIST vendor-name  id ID  #IMPLIED &gt;<BR>&lt;!-- The element version specifies a string-based version of the resource adapter from the resource adapter provider.Example:  <BR>&lt;version&gt;1.0<BR>&lt;/version&gt;--&gt;<BR>&lt;!ELEMENT version (#PCDATA)&gt;<BR>&lt;!ATTLIST version  id ID  #IMPLIED &gt;]]>

	</dtdsource>
	<ElementDecl Name = "connector">
		<dtdsource><![CDATA[
<BR>&lt;!ELEMENT connector (display-name , description? , icon? , vendor-name , spec-version , eis-type , version , license? , resourceadapter)&gt;<BR>&lt;!ATTLIST connector  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<Model>
			<Seq>
				<Ref Element = "display-name"/>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "icon" Frequency = "Optional"/>
				<Ref Element = "vendor-name"/>
				<Ref Element = "spec-version"/>
				<Ref Element = "eis-type"/>
				<Ref Element = "version"/>
				<Ref Element = "license" Frequency = "Optional"/>
				<Ref Element = "resourceadapter"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "resourceadapter">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element resourceadapter specifies information about the resourceadapter. The information includes fully-qualified names ofclass/interfaces required as part of the connector architecture specified contracts, level of transaction support provided, configurable properties for ManagedConnectionFactory instances, one or more authentication mechanisms supported and additional required security permissions.If there is no authentication-mechanism specified as part of resource adapterelement then the resource adapter does not support any standardsecurity authentication mechanisms as part of security contract.The application server ignores the security part of the system contracts in this case.--&gt;<BR>&lt;!ELEMENT resourceadapter (managedconnectionfactory-class , connectionfactory-interface , connectionfactory-impl-class , connection-interface , connection-impl-class , transaction-support , config-property* , authentication-mechanism* , reauthentication-support , security-permission*)&gt;<BR>&lt;!ATTLIST resourceadapter  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element resourceadapter specifies information about the resource
adapter. The information includes fully-qualified names of
class/interfaces required as part of the connector architecture 
specified contracts, level of transaction support provided, 
configurable properties for ManagedConnectionFactory instances, 
one or more authentication mechanisms supported and additional 
required security permissions.

If there is no authentication-mechanism specified as part of resource adapter
element then the resource adapter does not support any standard
security authentication mechanisms as part of security contract.
The application server ignores the security part of the system 
contracts in this case.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "managedconnectionfactory-class"/>
				<Ref Element = "connectionfactory-interface"/>
				<Ref Element = "connectionfactory-impl-class"/>
				<Ref Element = "connection-interface"/>
				<Ref Element = "connection-impl-class"/>
				<Ref Element = "transaction-support"/>
				<Ref Element = "config-property" Frequency = "ZeroOrMore"/>
				<Ref Element = "authentication-mechanism" Frequency = "ZeroOrMore"/>
				<Ref Element = "reauthentication-support"/>
				<Ref Element = "security-permission" Frequency = "ZeroOrMore"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "authentication-mechanism">
		<dtdsource><![CDATA[
<BR>&lt;!--The element authentication-mechanism specifies an authentication mechanismsupported by the resource adapter. Note that this support is forthe resource adapter and not for the underlying EIS instance. Theoptional description specifies any resource adapter specific requirementfor the support of security contract and authentication mechanism.Note that BasicPassword mech-type should support the javax.resource.spi.security.PasswordCredential interface. The Kerbv5mech-type should support the javax.resource.spi.security.Generic-Credential interface.--&gt;<BR>&lt;!ELEMENT authentication-mechanism (description? , authentication-mechanism-type , credential-interface)&gt;<BR>&lt;!--The ID mechanism is to allow tools that produce additional deploymentinformation (beyond the standard deployment descriptor) to store thenon-standard information in a separate file and to refer to standarddeployment descriptor from these non-standard tools specific file.The connector specification does not allow the tools to add the non-standard information into the standard deployment descriptor.--&gt;<BR>&lt;!ATTLIST authentication-mechanism id ID  #IMPLIED&gt;]]>

		</dtdsource>
		<DDML:Doc>
The element authentication-mechanism specifies an authentication mechanism
supported by the resource adapter. Note that this support is for
the resource adapter and not for the underlying EIS instance. The
optional description specifies any resource adapter specific requirement
for the support of security contract and authentication mechanism.

Note that BasicPassword mech-type should support the 
javax.resource.spi.security.PasswordCredential interface. The Kerbv5
mech-type should support the javax.resource.spi.security.Generic-
Credential interface.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "authentication-mechanism-type"/>
				<Ref Element = "credential-interface"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID">
				<DDML:Doc>
The ID mechanism is to allow tools that produce additional deployment
information (beyond the standard deployment descriptor) to store the
non-standard information in a separate file and to refer to standard
deployment descriptor from these non-standard tools specific file.

The connector specification does not allow the tools to add the non-
standard information into the standard deployment descriptor.

				</DDML:Doc>
			</AttDef>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "credential-interface">
		<dtdsource><![CDATA[
<BR>&lt;!--The element credential-interface specifies the interface that theresource adapter implementation supports for the representationof the credentials. This element should be used by application serverto find out the Credential interface it should use as part of thesecurity contract.The possible values are:   <BR>&lt;credential-interface&gt;javax.resource.spi.security.PasswordCredential        <BR>&lt;/credential-interface&gt;   <BR>&lt;credential-interface&gt;javax.resource.spi.security.GenericCredential        <BR>&lt;/credential-interface&gt;--&gt;<BR>&lt;!ELEMENT credential-interface (#PCDATA)&gt;<BR>&lt;!ATTLIST credential-interface  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The element credential-interface specifies the interface that the
resource adapter implementation supports for the representation
of the credentials. This element should be used by application server
to find out the Credential interface it should use as part of the
security contract.

The possible values are:
   &amp;lt;credential-interface&amp;gt;javax.resource.spi.security.PasswordCredential
        &amp;lt;/credential-interface&amp;gt;
   &amp;lt;credential-interface&amp;gt;javax.resource.spi.security.GenericCredential
        &amp;lt;/credential-interface&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "authentication-mechanism-type">
		<dtdsource><![CDATA[
<BR>&lt;!--The element authentication-mechanism-type specifies type of an authenticationmechanism.The example values are:   <BR>&lt;authentication-mechanism-type&gt;BasicPassword<BR>&lt;/authentication-mechanism-type&gt;   <BR>&lt;authentication-mechanism-type&gt;Kerbv5<BR>&lt;/authentication-mechanism-type&gt;Any additional security mechanisms are outside the scope of the Connector architecture specification.--&gt;<BR>&lt;!ELEMENT authentication-mechanism-type (#PCDATA)&gt;<BR>&lt;!ATTLIST authentication-mechanism-type  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The element authentication-mechanism-type specifies type of an authentication
mechanism.

The example values are:
   &amp;lt;authentication-mechanism-type&amp;gt;BasicPassword&amp;lt;/authentication-mechanism-type&amp;gt;
   &amp;lt;authentication-mechanism-type&amp;gt;Kerbv5&amp;lt;/authentication-mechanism-type&amp;gt;

Any additional security mechanisms are outside the scope of the 
Connector architecture specification.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "connectionfactory-interface">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element connectionfactory-interface specifies the fully-qualifiedname of the ConnectionFactory interface supported by the resourceadapter. Example: <BR>&lt;connectionfactory-interface&gt;com.wombat.ConnectionFactory         <BR>&lt;/connectionfactory-interface&gt;OR<BR>&lt;connectionfactory-interface&gt;javax.resource.cci.ConnectionFactory         <BR>&lt;/connectionfactory-interface&gt;--&gt;<BR>&lt;!ELEMENT connectionfactory-interface (#PCDATA)&gt;<BR>&lt;!ATTLIST connectionfactory-interface  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element connectionfactory-interface specifies the fully-qualified
name of the ConnectionFactory interface supported by the resource
adapter. 

Example: &amp;lt;connectionfactory-interface&amp;gt;com.wombat.ConnectionFactory
         &amp;lt;/connectionfactory-interface&amp;gt;
OR
&amp;lt;connectionfactory-interface&amp;gt;javax.resource.cci.ConnectionFactory
         &amp;lt;/connectionfactory-interface&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "connectionfactory-impl-class">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element connectionfactory-impl-class specifies the fully-qualifiedname of the ConnectionFactory class that implements resource adapterspecific ConnectionFactory interface.Example: <BR>&lt;connectionfactory-impl-class&gt;com.wombat.ConnectionFactoryImpl         <BR>&lt;/connectionfactory-impl-class&gt;--&gt;<BR>&lt;!ELEMENT connectionfactory-impl-class (#PCDATA)&gt;<BR>&lt;!ATTLIST connectionfactory-impl-class  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element connectionfactory-impl-class specifies the fully-qualified
name of the ConnectionFactory class that implements resource adapter
specific ConnectionFactory interface.

Example: &amp;lt;connectionfactory-impl-class&amp;gt;com.wombat.ConnectionFactoryImpl
         &amp;lt;/connectionfactory-impl-class&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "connection-interface">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element connection-interface specifies the fully-qualifiedname of the Connection interface supported by the resourceadapter.Example: <BR>&lt;connection-interface&gt;javax.resource.cci.Connection         <BR>&lt;/connection-interface&gt;--&gt;<BR>&lt;!ELEMENT connection-interface (#PCDATA)&gt;<BR>&lt;!ATTLIST connection-interface  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element connection-interface specifies the fully-qualified
name of the Connection interface supported by the resource
adapter.

Example: &amp;lt;connection-interface&amp;gt;javax.resource.cci.Connection
         &amp;lt;/connection-interface&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "connection-impl-class">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element connection-impl-class specifies the fully-qualifiedname of the Connection class that implements resource adapterspecific Connection interface.Example: <BR>&lt;connection-impl-class&gt;com.wombat.ConnectionImpl         <BR>&lt;/connection-impl-class&gt;--&gt;<BR>&lt;!ELEMENT connection-impl-class (#PCDATA)&gt;<BR>&lt;!ATTLIST connection-impl-class  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element connection-impl-class specifies the fully-qualified
name of the Connection class that implements resource adapter
specific Connection interface.

Example: &amp;lt;connection-impl-class&amp;gt;com.wombat.ConnectionImpl
         &amp;lt;/connection-impl-class&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "config-property">
		<dtdsource><![CDATA[
<BR>&lt;!--The element config-entry contains a declaration of a single configuration property for a ManagedConnectionFactory instance. Each ManagedConnectionFactory instance creates connections to a specific EIS instance based on the properties configured on the ManagedConnectionFactory instance. The configurable properties are specified only once in the deployment descriptor, even though a resource adapter can be used to configure multiple ManagedConnnection-Factory instances (that create connections to different instances ofthe same EIS).The declaration consists of an optional description, name, typeand an optional value of the configuration property. If the resourceadapter provider does not specify a value than the deployer isresponsible for providing a valid value for a configuration property.Any bounds or well-defined values of properties should be described in the description element.--&gt;<BR>&lt;!ELEMENT config-property (description? , config-property-name , config-property-type , config-property-value?)&gt;<BR>&lt;!ATTLIST config-property  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The element config-entry contains a declaration of a single 
configuration property for a ManagedConnectionFactory instance. 

Each ManagedConnectionFactory instance creates connections to a 
specific EIS instance based on the properties configured on the 
ManagedConnectionFactory instance. The configurable properties are 
specified only once in the deployment descriptor, even though a 
resource adapter can be used to configure multiple ManagedConnnection-
Factory instances (that create connections to different instances of
the same EIS).

The declaration consists of an optional description, name, type
and an optional value of the configuration property. If the resource
adapter provider does not specify a value than the deployer is
responsible for providing a valid value for a configuration property.

Any bounds or well-defined values of properties should be described 
in the description element.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "config-property-name"/>
				<Ref Element = "config-property-type"/>
				<Ref Element = "config-property-value" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "config-property-name">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element config-property-name contains the name of a configuration property.Example: <BR>&lt;config-property-name&gt;ServerName<BR>&lt;/config-property-name&gt;The connector architecture defines a set of well-defined propertiesall of type java.lang.String. These are as follows:     <BR>&lt;config-property-name&gt;ServerName<BR>&lt;/config-property-name&gt;     <BR>&lt;config-property-name&gt;PortNumber<BR>&lt;/config-property-name&gt;     <BR>&lt;config-property-name&gt;UserName<BR>&lt;/config-property-name&gt;     <BR>&lt;config-property-name&gt;Password<BR>&lt;/config-property-name&gt;     <BR>&lt;config-property-name&gt;ConnectionURL<BR>&lt;/config-property-name&gt;A resource adapter provider can extend this property set to include properties specific to the resource adapter and its underlying EIS.--&gt;<BR>&lt;!ELEMENT config-property-name (#PCDATA)&gt;<BR>&lt;!ATTLIST config-property-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element config-property-name contains the name of a configuration 
property.

Example: &amp;lt;config-property-name&amp;gt;ServerName&amp;lt;/config-property-name&amp;gt;

The connector architecture defines a set of well-defined properties
all of type java.lang.String. These are as follows:
     &amp;lt;config-property-name&amp;gt;ServerName&amp;lt;/config-property-name&amp;gt;
     &amp;lt;config-property-name&amp;gt;PortNumber&amp;lt;/config-property-name&amp;gt;
     &amp;lt;config-property-name&amp;gt;UserName&amp;lt;/config-property-name&amp;gt;
     &amp;lt;config-property-name&amp;gt;Password&amp;lt;/config-property-name&amp;gt;
     &amp;lt;config-property-name&amp;gt;ConnectionURL&amp;lt;/config-property-name&amp;gt;

A resource adapter provider can extend this property set to include 
properties specific to the resource adapter and its underlying EIS.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "config-property-type">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element config-property-type contains the fully qualified Javatype of a configuration property as required by ManagedConnection-Factory instance.The following are the legal values of config-property-type:   java.lang.Boolean, java.lang.String, java.lang.Integer,   java.lang.Double, java.lang.Byte, java.lang.Short,   java.lang.Long, java.lang.Float, java.lang.CharacterExample: <BR>&lt;config-property-type&gt;java.lang.String<BR>&lt;/config-property-type&gt;--&gt;<BR>&lt;!ELEMENT config-property-type (#PCDATA)&gt;<BR>&lt;!ATTLIST config-property-type  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element config-property-type contains the fully qualified Java
type of a configuration property as required by ManagedConnection-
Factory instance.

The following are the legal values of config-property-type:
   java.lang.Boolean, java.lang.String, java.lang.Integer,
   java.lang.Double, java.lang.Byte, java.lang.Short,
   java.lang.Long, java.lang.Float, java.lang.Character

Example: &amp;lt;config-property-type&amp;gt;java.lang.String&amp;lt;/config-property-type&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "config-property-value">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element config-property-value contains the value of a configurationentry.Example: <BR>&lt;config-property-value&gt;WombatServer<BR>&lt;/config-property-value&gt;--&gt;<BR>&lt;!ELEMENT config-property-value (#PCDATA)&gt;<BR>&lt;!ATTLIST config-property-value  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element config-property-value contains the value of a configuration
entry.

Example: &amp;lt;config-property-value&amp;gt;WombatServer&amp;lt;/config-property-value&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "display-name">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element display-name contains a short name for the resource adapterthat is intended to be displayed by the tools --&gt;<BR>&lt;!ELEMENT display-name (#PCDATA)&gt;<BR>&lt;!ATTLIST display-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element display-name contains a short name for the resource adapter
that is intended to be displayed by the tools 

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "description">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element description is used by resource adapter provider to providetext describing the parent element. The description element should includeany information that the resource provider wants to provide to thedeployer. Typically tools used by the consumer of resource adaptermodule will display the description when processing the parent element--&gt;<BR>&lt;!ELEMENT description (#PCDATA)&gt;<BR>&lt;!ATTLIST description  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element description is used by resource adapter provider to provide
text describing the parent element. The description element should include
any information that the resource provider wants to provide to the
deployer. Typically tools used by the consumer of resource adapter
module will display the description when processing the parent element

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "eis-type">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element eis-type contains information about the type of theEIS. For example, the type of an EIS can be product name of EISindependent of any version info.This helps in identifying EIS instances that can be used withthis resource adapter.--&gt;<BR>&lt;!ELEMENT eis-type (#PCDATA)&gt;<BR>&lt;!ATTLIST eis-type  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element eis-type contains information about the type of the
EIS. For example, the type of an EIS can be product name of EIS
independent of any version info.

This helps in identifying EIS instances that can be used with
this resource adapter.

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "icon">
		<dtdsource><![CDATA[
<BR>&lt;!--The icon element contains a small icon and large icon elementwhich specify the URIs for a small and a large GIF or JPEG iconimage to represent the application in GUI.--&gt;<BR>&lt;!ELEMENT icon (small-icon? , large-icon?)&gt;<BR>&lt;!ATTLIST icon  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The icon element contains a small icon and large icon element
which specify the URIs for a small and a large GIF or JPEG icon
image to represent the application in GUI.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "small-icon" Frequency = "Optional"/>
				<Ref Element = "large-icon" Frequency = "Optional"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "large-icon">
		<dtdsource><![CDATA[
<BR>&lt;!--The large-icon element contains the name of a file containing an iconfor the resource adapter module. The file name is relative path withinthe resource adapter module. This file must be either in JPEG or GIFformat. The icon is used by tools to display information about theresource adapter module.Example:<BR>&lt;large-icon&gt;lib/images/wombatadapter_large.jpg<BR>&lt;/large-icon&gt;--&gt;<BR>&lt;!ELEMENT large-icon (#PCDATA)&gt;<BR>&lt;!ATTLIST large-icon  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The large-icon element contains the name of a file containing an icon
for the resource adapter module. The file name is relative path within
the resource adapter module. This file must be either in JPEG or GIF
format. The icon is used by tools to display information about the
resource adapter module.

Example:
&amp;lt;large-icon&amp;gt;lib/images/wombatadapter_large.jpg&amp;lt;/large-icon&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "small-icon">
		<dtdsource><![CDATA[
<BR>&lt;!--The small-icon element contains the name of a file containing an iconfor the resource adapter module. The file name is relative path withinthe resource adapter module. This file must be either in JPEG or GIFformat. The icon is used by tools to display information about theresource adapter module.Example:<BR>&lt;small-icon&gt;lib/images/wombatadapter_small.jpg<BR>&lt;/small-icon&gt;--&gt;<BR>&lt;!ELEMENT small-icon (#PCDATA)&gt;<BR>&lt;!ATTLIST small-icon  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The small-icon element contains the name of a file containing an icon
for the resource adapter module. The file name is relative path within
the resource adapter module. This file must be either in JPEG or GIF
format. The icon is used by tools to display information about the
resource adapter module.

Example:
&amp;lt;small-icon&amp;gt;lib/images/wombatadapter_small.jpg&amp;lt;/small-icon&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "managedconnectionfactory-class">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element managedconnectionfactory-class specifies the fully qualifiedname of the Java class that implements the javax.resource.spi.Managed-ConnectionFactory interface. This Java class is provided as part ofresource adapter's implementation of connector architecture specified contracts.Example:  <BR>&lt;managedconnectionfactory-class&gt;com.wombat.ManagedConnectionFactoryImpl  <BR>&lt;/managedconnectionfactory-class&gt;--&gt;<BR>&lt;!ELEMENT managedconnectionfactory-class (#PCDATA)&gt;<BR>&lt;!ATTLIST managedconnectionfactory-class  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element managedconnectionfactory-class specifies the fully qualified
name of the Java class that implements the javax.resource.spi.Managed-
ConnectionFactory interface. This Java class is provided as part of
resource adapter's implementation of connector architecture specified 
contracts.

Example:
  &amp;lt;managedconnectionfactory-class&amp;gt;com.wombat.ManagedConnectionFactoryImpl
  &amp;lt;/managedconnectionfactory-class&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "reauthentication-support">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element reauthentication-support specifies whether the resourceadapter implementation supports re-authentication of existing Managed-Connection instance. Note that this information is for the resourceadapter implementation and not for the underlying EIS instance.This element must be one of the following:        <BR>&lt;reauthentication-support&gt;true<BR>&lt;/reauthentication-support&gt;        <BR>&lt;reauthentication-support&gt;false<BR>&lt;/reauthentication-support&gt;--&gt;<BR>&lt;!ELEMENT reauthentication-support (#PCDATA)&gt;<BR>&lt;!ATTLIST reauthentication-support  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element reauthentication-support specifies whether the resource
adapter implementation supports re-authentication of existing Managed-
Connection instance. Note that this information is for the resource
adapter implementation and not for the underlying EIS instance.

This element must be one of the following:
        &amp;lt;reauthentication-support&amp;gt;true&amp;lt;/reauthentication-support&amp;gt;
        &amp;lt;reauthentication-support&amp;gt;false&amp;lt;/reauthentication-support&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "license">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element license specifies licensing requirements for the resource adapter module. This element specifies whether a license is requiredto deploy and use this resource adapter, and an optional description of the licensing terms (examples: duration of license, number of connection restrictions).--&gt;<BR>&lt;!ELEMENT license (description? , license-required)&gt;<BR>&lt;!ATTLIST license  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element license specifies licensing requirements for the resource 
adapter module. This element specifies whether a license is required
to deploy and use this resource adapter, and an optional description 
of the licensing terms (examples: duration of license, number of 
connection restrictions).

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "license-required"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "license-required">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element license-required specifies whether a license is required to deploy and use the resource adapter. This element must be one ofthe following:<BR>&lt;license-required&gt;true<BR>&lt;/license-required&gt;<BR>&lt;license-required&gt;false<BR>&lt;/license-required&gt;--&gt;<BR>&lt;!ELEMENT license-required (#PCDATA)&gt;<BR>&lt;!ATTLIST license-required  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element license-required specifies whether a license is required 
to deploy and use the resource adapter. This element must be one of
the following:

	&amp;lt;license-required&amp;gt;true&amp;lt;/license-required&amp;gt;
	&amp;lt;license-required&amp;gt;false&amp;lt;/license-required&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "spec-version">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element spec-version specifies the version of the connectorarchitecture specification that is supported by this resource adapter. This information enables deployer to configure the resourceadapter to support deployment and runtime requirements of thecorresponding connector architecture specification.Example:  <BR>&lt;spec-version&gt;1.0<BR>&lt;/spec-version&gt;--&gt;<BR>&lt;!ELEMENT spec-version (#PCDATA)&gt;<BR>&lt;!ATTLIST spec-version  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element spec-version specifies the version of the connector
architecture specification that is supported by this resource 
adapter. This information enables deployer to configure the resource
adapter to support deployment and runtime requirements of the
corresponding connector architecture specification.

Example:
  &amp;lt;spec-version&amp;gt;1.0&amp;lt;/spec-version&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "security-permission">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element security permission specifies a security permission that is required by the resource adapter code.The security permission listed in the deployment descriptor are ones that are different from those required by the default permission set as specified in the connector specification. The optional descriptioncan mention specific reason that resource adapter requires a givensecurity permission.--&gt;<BR>&lt;!ELEMENT security-permission (description? , security-permission-spec)&gt;<BR>&lt;!ATTLIST security-permission  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element security permission specifies a security permission that 
is required by the resource adapter code.

The security permission listed in the deployment descriptor are ones 
that are different from those required by the default permission set 
as specified in the connector specification. The optional description
can mention specific reason that resource adapter requires a given
security permission.

		</DDML:Doc>
		<Model>
			<Seq>
				<Ref Element = "description" Frequency = "Optional"/>
				<Ref Element = "security-permission-spec"/>
			</Seq>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "security-permission-spec">
		<dtdsource><![CDATA[
<BR>&lt;!--The element permission-spec specifies a security permission basedon the Security policy file syntax [reference: Java 2, Security  architecture specification]http://java.sun.com/products/jdk/1.3/docs/guide/security/PolicyFiles.html#FileSyntax--&gt;<BR>&lt;!ELEMENT security-permission-spec (#PCDATA)&gt;<BR>&lt;!ATTLIST security-permission-spec  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc>
The element permission-spec specifies a security permission based
on the Security policy file syntax [reference: Java 2, Security  
architecture specification]

http://java.sun.com/products/jdk/1.3/docs/guide/security/PolicyFiles.html#FileSyntax

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "transaction-support">
		<dtdsource><![CDATA[
<BR>&lt;!-- The transaction-support element specifies the level of transactionsupport provided by the resource adapter. The value of transaction-support must be one of the following: <BR>&lt;transaction-support&gt;no_transaction<BR>&lt;/transaction-support&gt; <BR>&lt;transaction-support&gt;local_transaction<BR>&lt;/transaction-support&gt; <BR>&lt;transaction-support&gt;xa_transaction<BR>&lt;/transaction-support&gt;--&gt;<BR>&lt;!ELEMENT transaction-support (#PCDATA)&gt;<BR>&lt;!ATTLIST transaction-support  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The transaction-support element specifies the level of transaction
support provided by the resource adapter. 
The value of transaction-support must be one of the following:
 &amp;lt;transaction-support&amp;gt;no_transaction&amp;lt;/transaction-support&amp;gt;
 &amp;lt;transaction-support&amp;gt;local_transaction&amp;lt;/transaction-support&amp;gt;
 &amp;lt;transaction-support&amp;gt;xa_transaction&amp;lt;/transaction-support&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "vendor-name">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element vendor-name specifies the name of resource adapter providervendor.Example:  <BR>&lt;vendor-name&gt;Wombat Corp.<BR>&lt;/vendor-name&gt;--&gt;<BR>&lt;!ELEMENT vendor-name (#PCDATA)&gt;<BR>&lt;!ATTLIST vendor-name  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element vendor-name specifies the name of resource adapter provider
vendor.
Example:
  &amp;lt;vendor-name&amp;gt;Wombat Corp.&amp;lt;/vendor-name&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
	</ElementDecl>
	<ElementDecl Name = "version">
		<dtdsource><![CDATA[
<BR>&lt;!-- The element version specifies a string-based version of the resource adapter from the resource adapter provider.Example:  <BR>&lt;version&gt;1.0<BR>&lt;/version&gt;--&gt;<BR>&lt;!ELEMENT version (#PCDATA)&gt;<BR>&lt;!ATTLIST version  id ID  #IMPLIED &gt;]]>

		</dtdsource>
		<DDML:Doc> 
The element version specifies a string-based version of the 
resource adapter from the resource adapter provider.

Example:
  &amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt;

		</DDML:Doc>
		<Model>
			<PCData/>
		</Model>
		<AttGroup>
			<AttDef Name = "id" Type = "ID"/>
		</AttGroup>
		<AttDef Name = "id" Type = "ID">
			<DDML:Doc>
The ID mechanism is to allow tools that produce additional deployment
information (beyond the standard deployment descriptor) to store the
non-standard information in a separate file and to refer to standard
deployment descriptor from these non-standard tools specific file.

The connector specification does not allow the tools to add the non-
standard information into the standard deployment descriptor.

			</DDML:Doc>
		</AttDef>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
		<AttDef Name = "id" Type = "ID"/>
	</ElementDecl>
</DocumentDef>